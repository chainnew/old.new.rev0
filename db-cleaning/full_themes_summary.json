{
  "export_summary": {
    "export_date": "2025-10-07T22:36:53.481449",
    "total_themes": 142,
    "themes_with_images": 0,
    "themes_with_readme": 142,
    "popular_themes": 135,
    "featured_themes": 0,
    "processing_time_seconds": 0.07,
    "stars_distribution": {
      "0": 0,
      "1-10": 0,
      "11-100": 7,
      "101-1000": 13,
      "1000+": 122
    },
    "categories": {
      "other": 142
    },
    "top_themes_by_stars": [
      {
        "full_name": "sindresorhus/awesome",
        "description": "😎 Awesome lists about all kinds of interesting topics",
        "stars": 405061,
        "files": [],
        "readme": "<div align=\"center\">\n\t<img width=\"500\" height=\"350\" src=\"media/logo.svg\" alt=\"Awesome\">\n\t<br>\n\t<br>\n\t<br>\n\t<br>\n\t<div>\n\t\t<sub>Check out my macOS app</sub>\n\t\t<br>\n\t\t<h2>\n\t\t\t<a href=\"https://sindresorhus.com/supercharge\">Supercharge</a>\n\t\t\t<br>\n\t\t\t<sup>Elevate your Mac experience</sup>\n\t\t</h2>\n\t</div>\n\t<br>\n\t<br>\n\t<br>\n\t<br>\n\t<hr>\n\t<p>\n\t\t<p>\n\t\t\t<sup>\n\t\t\t\t<a href=\"https://github.com/sponsors/sindresorhus\">My open source work is supported by the community</a>\n\t\t\t</sup>\n\t\t</p>\n\t\t<sup>Special thanks to:</sup>\n\t\t<br>\n\t\t<br>\n\t\t<br>\n\t\t<a href=\"https://nitric.io/?utm_campaign=github_repo&utm_medium=referral&utm_content=sindresorhus&utm_source=github\">\n\t\t\t<div>\n\t\t\t\t<img width=\"230\" src=\"https://sindresorhus.com/assets/thanks/nitric-logo.svg\" alt=\"nitric logo\">\n\t\t\t</div>\n\t\t\t<b>Effortless backends with infrastructure from code</b>\n\t\t\t<div>\n\t\t\t\t<sup>An open-source framework that supports any programming language, cloud provider, or deployment automation tool.</sup>\n\t\t\t</div>\n\t\t</a>\n\t\t<br>\n\t\t<br>\n\t\t<br>\n\t\t<div>\n\t\t\t<a href=\"https://ref.wisprflow.ai/VjA6dYR\">\n\t\t\t\t<div>\n\t\t\t\t\t<img width=\"150\" src=\"https://sindresorhus.com/assets/thanks/flow-logo.svg\" alt=\"Wispr Flow logo\">\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t<b>Talk to code, stay in the Flow.</b>\n\t\t\t<div>\n\t\t\t\t<sup>Flow is built for devs who live in their tools. Speak and give more context, get better results.</sup>\n\t\t\t</div>\n\t\t</div>\n\t\t<br>\n\t\t<br>\n\t</p>\n\t<hr>\n\t<br>\n\t<br>\n\t<br>\n\t<br>\n</div>\n<p align=\"center\">\n\t<a href=\"awesome.md\">What is an awesome list?</a>&nbsp;&nbsp;&nbsp;\n\t<a href=\"contributing.md\">Contribution guide</a>&nbsp;&nbsp;&nbsp;\n\t<a href=\"create-list.md\">Creating a list</a>&nbsp;&nbsp;&nbsp;\n\t<a href=\"https://twitter.com/awesome__re\">Twitter</a>&nbsp;&nbsp;&nbsp;\n</p>\n<br>\n<br>\n<p align=\"center\">\n\tJust type <a href=\"https://awesome.re\"><code>awesome.re</code></a> to go here. Check out my <a href=\"https://sindresorhus.com/apps\">apps</a> and follow me on <a href=\"https://twitter.com/sindresorhus\">Twitter</a>.\n</p>\n<br>\n<br>\n<br>\n\n## Contents\n\n- [Platforms](#platforms)\n- [Programming Languages](#programming-languages)\n- [Front-End Development](#front-end-development)\n- [Back-End Development](#back-end-development)\n- [Computer Science](#computer-science)\n- [Big Data](#big-data)\n- [Theory](#theory)\n- [Books](#books)\n- [Editors](#editors)\n- [Gaming](#gaming)\n- [Development Environment](#development-environment)\n- [Entertainment](#entertainment)\n- [Databases](#databases)\n- [Media](#media)\n- [Learn](#learn)\n- [Security](#security)\n- [Content Management Systems](#content-management-systems)\n- [Hardware](#hardware)\n- [Business](#business)\n- [Work](#work)\n- [Networking](#networking)\n- [Decentralized Systems](#decentralized-systems)\n- [Health and Social Science](#health-and-social-science)\n- [Events](#events)\n- [Testing](#testing)\n- [Miscellaneous](#miscellaneous)\n- [Related](#related)\n\n## Platforms\n\n- [Node.js](https://github.com/sindresorhus/awesome-nodejs#readme) - Async non-blocking event-driven JavaScript runtime built on Chrome's V8 JavaScript engine.\n\t- [Cross-Platform](https://github.com/bcoe/awesome-cross-platform-nodejs#readme) - Writing cross-platform code on Node.js.\n- [Frontend Development](https://github.com/dypsilon/frontend-dev-bookmarks#readme)\n- [iOS](https://github.com/vsouza/awesome-ios#readme) - Mobile operating system for Apple phones and tablets.\n- [Android](https://github.com/JStumpp/awesome-android#readme) - Mobile operating system developed by Google.\n- [IoT & Hybrid Apps](https://github.com/weblancaster/awesome-IoT-hybrid#readme)\n- [Electron](https://github.com/sindresorhus/awesome-electron#readme) - Cross-platform native desktop apps using JavaScript/HTML/CSS.\n- [Cordova](https://github.com/busterc/awesome-cordova#readme) - JavaScript API for hybrid apps.\n- [React Native](https://github.com/jondot/awesome-react-native#readme) - JavaScript framework for writing natively rendering mobile apps for iOS and Android.\n- [Xamarin](https://github.com/XamSome/awesome-xamarin#readme) - Mobile app development IDE, testing, and distribution.\n- [Linux](https://github.com/inputsh/awesome-linux#readme)\n\t- [Containers](https://github.com/Friz-zy/awesome-linux-containers#readme)\n\t- [eBPF](https://github.com/zoidbergwill/awesome-ebpf#readme) - Virtual machine that allows you to write more efficient and powerful tracing and monitoring for Linux systems.\n\t- [Arch-based Projects](https://github.com/PandaFoss/Awesome-Arch#readme) - Linux distributions and projects based on Arch Linux.\n\t- [AppImage](https://github.com/AppImage/awesome-appimage#readme) - Package apps in a single file that works on various mainstream Linux distributions.\n- macOS - Operating system for Apple's Mac computers.\n\t- [Screensavers](https://github.com/agarrharr/awesome-macos-screensavers#readme)\n\t- [Apps](https://github.com/jaywcjlove/awesome-mac#readme)\n\t- [Open Source Apps](https://github.com/serhii-londar/open-source-mac-os-apps#readme)\n- [watchOS](https://github.com/yenchenlin/awesome-watchos#readme) - Operating system for the Apple Watch.\n- [JVM](https://github.com/deephacks/awesome-jvm#readme)\n- [Salesforce](https://github.com/mailtoharshit/awesome-salesforce#readme)\n- [Amazon Web Services](https://github.com/donnemartin/awesome-aws#readme)\n- [Windows](https://github.com/0pandadev/awesome-windows#readme) - Consumer desktop operating system.\n\t- [PowerToys Run Plugins](https://github.com/hlaueriksson/awesome-powertoys-run-plugins#readme) - Community plugins for the Windows quick launcher.\n- [IPFS](https://github.com/ipfs/awesome-ipfs#readme) - P2P hypermedia protocol.\n- [Fuse](https://github.com/fuse-compound/awesome-fuse#readme) - Mobile development tools.\n- [Heroku](https://github.com/ianstormtaylor/awesome-heroku#readme) - Cloud platform as a service.\n- [Raspberry Pi](https://github.com/thibmaek/awesome-raspberry-pi#readme) - Credit card-sized computer aimed at teaching kids programming, but capable of a lot more.\n- [Qt](https://github.com/JesseTG/awesome-qt#readme) - Cross-platform GUI app framework.\n- [WebExtensions](https://github.com/fregante/Awesome-WebExtensions#readme) - Cross-browser extension system.\n- [Smart TV](https://github.com/vitalets/awesome-smart-tv#readme) - Create apps for different TV platforms.\n- [GNOME](https://github.com/Kazhnuz/awesome-gnome#readme) - Simple and distraction-free desktop environment for Linux.\n- [KDE](https://github.com/francoism90/awesome-kde#readme) - A free software community dedicated to creating an open and user-friendly computing experience.\n- [.NET](https://github.com/quozd/awesome-dotnet#readme)\n\t- [Core](https://github.com/thangchung/awesome-dotnet-core#readme)\n\t- [Roslyn](https://github.com/ironcev/awesome-roslyn#readme) - Open-source compilers and code analysis APIs for C# and VB.NET languages.\n- [Amazon Alexa](https://github.com/miguelmota/awesome-amazon-alexa#readme) - Virtual home assistant.\n- [DigitalOcean](https://github.com/jonleibowitz/awesome-digitalocean#readme) - Cloud computing platform designed for developers.\n- [Flutter](https://github.com/Solido/awesome-flutter#readme) - Google's mobile SDK for building native iOS and Android apps from a single codebase written in Dart.\n- [Home Assistant](https://github.com/frenck/awesome-home-assistant#readme) - Open source home automation that puts local control and privacy first.\n- [IBM Cloud](https://github.com/victorshinya/awesome-ibmcloud#readme) - Cloud platform for developers and companies.\n- [Firebase](https://github.com/jthegedus/awesome-firebase#readme) - App development platform built on Google Cloud.\n- [Robot Operating System 2.0](https://github.com/fkromer/awesome-ros2#readme) - Set of software libraries and tools that help you build robot apps.\n- [Adafruit IO](https://github.com/adafruit/awesome-adafruitio#readme) - Visualize and store data from any device.\n- [Cloudflare](https://github.com/irazasyed/awesome-cloudflare#readme) - CDN, DNS, DDoS protection, and security for your site.\n- [Actions on Google](https://github.com/ravirupareliya/awesome-actions-on-google#readme) - Developer platform for Google Assistant.\n- [ESP](https://github.com/agucova/awesome-esp#readme) - Low-cost microcontrollers with WiFi and broad IoT applications.\n- [Deno](https://github.com/denolib/awesome-deno#readme) - A secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust.\n- [DOS](https://github.com/balintkissdev/awesome-dos#readme) - Operating system for x86-based personal computers that was popular during the 1980s and early 1990s.\n- [Nix](https://github.com/nix-community/awesome-nix#readme) - Package manager for Linux and other Unix systems that makes package management reliable and reproducible.\n- [Integration](https://github.com/stn1slv/awesome-integration#readme) - Linking together different IT systems (components) to functionally cooperate as a whole.\n- [Node-RED](https://github.com/naimo84/awesome-nodered#readme) - A programming tool for wiring together hardware devices, APIs, and online services.\n- [Low Code](https://github.com/zenitysec/awesome-low-code#readme) - Allowing business professionals to address their needs on their own with little to no coding skills.\n- [Capacitor](https://github.com/riderx/awesome-capacitor#readme) - Cross-platform open source runtime for building Web Native apps.\n- [ArcGIS Developer](https://github.com/Esri/awesome-arcgis-developer#readme) - Mapping and location analysis platform for developers.\n- [Bluetooth Low Energy](https://github.com/dotintent/awesome-ble#readme) - Low-power wireless communication protocol ideal for IoT, wearables, and other battery-powered applications.\n- [Uno Platform](https://github.com/MartinZikmund/awesome-uno-platform#readme) - Open-source .NET UI platform for building cross-platform apps.\n- [Google Cloud](https://github.com/GoogleCloudPlatform/awesome-google-cloud#readme) - Cloud computing services by Google.\n- [Firebase Genkit](https://github.com/xavidop/awesome-firebase-genkit#readme) - An open-source framework for building AI-powered apps and features.\n\n## Programming Languages\n\n- [JavaScript](https://github.com/sorrycc/awesome-javascript#readme)\n\t- [Promises](https://github.com/wbinnssmith/awesome-promises#readme)\n\t- [Standard Style](https://github.com/standard/awesome-standard#readme) - Style guide and linter.\n\t- [Must Watch Talks](https://github.com/bolshchikov/js-must-watch#readme)\n\t- [Tips](https://github.com/loverajoel/jstips#readme)\n\t- [Network Layer](https://github.com/Kikobeats/awesome-network-js#readme)\n\t- [Micro npm Packages](https://github.com/parro-it/awesome-micro-npm-packages#readme)\n\t- [Mad Science npm Packages](https://github.com/feross/awesome-mad-science#readme) - Impossible sounding projects that exist.\n\t- [Maintenance Modules](https://github.com/maxogden/maintenance-modules#readme) - For npm packages.\n\t- [npm](https://github.com/sindresorhus/awesome-npm#readme) - Package manager.\n\t- [AVA](https://github.com/avajs/awesome-ava#readme) - Test runner.\n\t- [ESLint](https://github.com/dustinspecker/awesome-eslint#readme) - Linter.\n\t- [Functional Programming](https://github.com/stoeffel/awesome-fp-js#readme)\n\t- [Observables](https://github.com/sindresorhus/awesome-observables#readme)\n\t- [npm scripts](https://github.com/RyanZim/awesome-npm-scripts#readme) - Task runner.\n\t- [30 Seconds of Code](https://github.com/30-seconds/30-seconds-of-code#readme) - Code snippets you can understand in 30 seconds.\n\t- [Ponyfills](https://github.com/Richienb/awesome-ponyfills#readme) - Like polyfills but without overriding native APIs.\n- [Swift](https://github.com/matteocrippa/awesome-swift#readme) - Apple's compiled programming language that is secure, modern, programmer-friendly, and fast.\n\t- [Education](https://github.com/hsavit1/Awesome-Swift-Education#readme)\n\t- [Playgrounds](https://github.com/uraimo/Awesome-Swift-Playgrounds#readme)\n- [Python](https://github.com/vinta/awesome-python#readme) - General-purpose programming language designed for readability.\n\t- [Asyncio](https://github.com/timofurrer/awesome-asyncio#readme) - Asynchronous I/O in Python 3.\n\t- [Scientific Audio](https://github.com/faroit/awesome-python-scientific-audio#readme) - Scientific research in audio/music.\n\t- [CircuitPython](https://github.com/adafruit/awesome-circuitpython#readme) - A version of Python for microcontrollers.\n\t- [Data Science](https://github.com/krzjoa/awesome-python-data-science#readme) - Data analysis and machine learning.\n\t- [Typing](https://github.com/typeddjango/awesome-python-typing#readme) - Optional static typing for Python.\n\t- [MicroPython](https://github.com/mcauser/awesome-micropython#readme) - A lean and efficient implementation of Python 3 for microcontrollers.\n- [Rust](https://github.com/rust-unofficial/awesome-rust#readme)\n \t- [Pest](https://github.com/pest-parser/awesome-pest#readme) - Parser generator.\n- [Haskell](https://github.com/krispo/awesome-haskell#readme)\n- [PureScript](https://github.com/passy/awesome-purescript#readme)\n- [Go](https://github.com/avelino/awesome-go#readme)\n- [Scala](https://github.com/lauris/awesome-scala#readme)\n\t- [Scala Native](https://github.com/tindzk/awesome-scala-native#readme) - Optimizing ahead-of-time compiler for Scala based on LLVM.\n- [Ruby](https://github.com/markets/awesome-ruby#readme)\n- [Clojure](https://github.com/razum2um/awesome-clojure#readme)\n- [ClojureScript](https://github.com/hantuzun/awesome-clojurescript#readme)\n- [Elixir](https://github.com/h4cc/awesome-elixir#readme)\n- [Elm](https://github.com/sporto/awesome-elm#readme)\n- [Erlang](https://github.com/drobakowski/awesome-erlang#readme)\n- [Julia](https://github.com/svaksha/Julia.jl#readme) - High-level dynamic programming language designed to address the needs of high-performance numerical analysis and computational science.\n- [Lua](https://github.com/LewisJEllis/awesome-lua#readme)\n- [C](https://github.com/inputsh/awesome-c#readme)\n- [C/C++](https://github.com/fffaraz/awesome-cpp#readme) - General-purpose language with a bias toward system programming and embedded, resource-constrained software.\n- [R](https://github.com/qinwf/awesome-R#readme) - Functional programming language and environment for statistical computing and graphics.\n\t- [Learning](https://github.com/iamericfletcher/awesome-r-learning-resources#readme)\n- [D](https://github.com/dlang-community/awesome-d#readme)\n- [Common Lisp](https://github.com/CodyReichert/awesome-cl#readme) - Powerful dynamic multiparadigm language that facilitates iterative and interactive development.\n\t- [Learning](https://github.com/GustavBertram/awesome-common-lisp-learning#readme)\n- [Perl](https://github.com/hachiojipm/awesome-perl#readme)\n- [Groovy](https://github.com/kdabir/awesome-groovy#readme)\n- [Dart](https://github.com/yissachar/awesome-dart#readme)\n- [Java](https://github.com/akullpp/awesome-java#readme) - Popular secure object-oriented language designed for flexibility to \"write once, run anywhere\".\n\t- [RxJava](https://github.com/eleventigers/awesome-rxjava#readme)\n \t- [J2ME](https://github.com/hstsethi/awesome-j2me#readme) - Java specification designed for old keypad phones and PDAs.\n- [Kotlin](https://github.com/KotlinBy/awesome-kotlin#readme)\n- [OCaml](https://github.com/ocaml-community/awesome-ocaml#readme)\n- [ColdFusion](https://github.com/seancoyne/awesome-coldfusion#readme)\n- [Fortran](https://github.com/rabbiabram/awesome-fortran#readme)\n- [PHP](https://github.com/ziadoz/awesome-php#readme) - Server-side scripting language.\n\t- [Composer](https://github.com/jakoch/awesome-composer#readme) - Package manager.\n- [Pascal](https://github.com/Fr0sT-Brutal/awesome-pascal#readme)\n- [AutoHotkey](https://github.com/ahkscript/awesome-AutoHotkey#readme)\n- [AutoIt](https://github.com/J2TeaM/awesome-AutoIt#readme)\n- [Crystal](https://github.com/veelenga/awesome-crystal#readme)\n- [Frege](https://github.com/sfischer13/awesome-frege#readme) - Haskell for the JVM.\n- [CMake](https://github.com/onqtam/awesome-cmake#readme) - Build, test, and package software.\n- [ActionScript 3](https://github.com/robinrodricks/awesome-actionscript3#readme) - Object-oriented language targeting Adobe AIR.\n- [Eta](https://github.com/sfischer13/awesome-eta#readme) - Functional programming language for the JVM.\n- [Idris](https://github.com/joaomilho/awesome-idris#readme) - General purpose pure functional programming language with dependent types influenced by Haskell and ML.\n- [Ada/SPARK](https://github.com/ohenley/awesome-ada#readme) - Modern programming language designed for large, long-lived apps where reliability and efficiency are essential.\n- [Q#](https://github.com/ebraminio/awesome-qsharp#readme) - Domain-specific programming language used for expressing quantum algorithms.\n- [Imba](https://github.com/koolamusic/awesome-imba#readme) - Programming language inspired by Ruby and Python and compiles to performant JavaScript.\n- [Vala](https://github.com/desiderantes/awesome-vala#readme) - Programming language designed to take full advantage of the GLib and GNOME ecosystems, while preserving the speed of C code.\n- [Coq](https://github.com/coq-community/awesome-coq#readme) - Formal language and environment for programming and specification which facilitates interactive development of machine-checked proofs.\n- [V](https://github.com/vlang/awesome-v#readme) - Simple, fast, safe, compiled language for developing maintainable software.\n- [Zig](https://github.com/catdevnull/awesome-zig#readme) - General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.\n- [Move](https://github.com/MystenLabs/awesome-move#readme) - Domain-specific programming language for writing safe smart contracts.\n- [Esolangs](https://github.com/angrykoala/awesome-esolangs#readme) - Programming languages designed for experimentation or as jokes rather than actual use.\n- [VBA](https://github.com/sancarn/awesome-vba#readme) - An event-driven version of Visual Basic 6.0 built into most Microsoft Office apps for automation and scripting.\n\n<br>\n<hr>\n<br>\n<br>\n<a href=\"https://vshymanskyy.github.io/StandWithUkraine\">\n\t<img src=\"https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg\">\n</a>\n<br>\n<br>\n<hr>\n<br>\n\n## Front-End Development\n\n- [ES6 Tools](https://github.com/addyosmani/es6-tools#readme)\n- [Web Performance Optimization](https://github.com/davidsonfellipe/awesome-wpo#readme)\n- [Web Tools](https://github.com/lvwzhen/tools#readme)\n- [CSS](https://github.com/awesome-css-group/awesome-css#readme) - Style sheet language that specifies how HTML elements are displayed on screen.\n\t- [Critical-Path Tools](https://github.com/addyosmani/critical-path-css-tools#readme)\n\t- [Scalability](https://github.com/davidtheclark/scalable-css-reading-list#readme)\n\t- [Must-Watch Talks](https://github.com/AllThingsSmitty/must-watch-css#readme)\n\t- [Protips](https://github.com/AllThingsSmitty/css-protips#readme)\n\t- [Frameworks](https://github.com/troxler/awesome-css-frameworks#readme)\n- [React](https://github.com/enaqx/awesome-react#readme) - JavaScript library for building user interfaces.\n\t- [Relay](https://github.com/expede/awesome-relay#readme) - Framework for building data-driven React apps.\n\t- [React Hooks](https://github.com/glauberfc/awesome-react-hooks#readme) - Lets you use state and other React features without writing a class.\n- [Web Components](https://github.com/web-padawan/awesome-web-components#readme)\n- [Polymer](https://github.com/Granze/awesome-polymer#readme) - JavaScript library to develop Web Components.\n- [Angular](https://github.com/PatrickJS/awesome-angular#readme) - App framework.\n- [Backbone](https://github.com/sadcitizen/awesome-backbone#readme) - App framework.\n- [HTML5](https://github.com/diegocard/awesome-html5#readme) - Markup language used for websites & web apps.\n- [SVG](https://github.com/willianjusten/awesome-svg#readme) - XML-based vector image format.\n- [Canvas](https://github.com/raphamorim/awesome-canvas#readme)\n- [KnockoutJS](https://github.com/dnbard/awesome-knockout#readme) - JavaScript library.\n- [Dojo Toolkit](https://github.com/petk/awesome-dojo#readme) - JavaScript toolkit.\n- [Inspiration](https://github.com/NoahBuscher/Inspire#readme)\n- [Ember](https://github.com/ember-community-russia/awesome-ember#readme) - App framework.\n- [Android UI](https://github.com/wasabeef/awesome-android-ui#readme)\n- [iOS UI](https://github.com/cjwirth/awesome-ios-ui#readme)\n- [Meteor](https://github.com/Urigo/awesome-meteor#readme)\n- [BEM](https://github.com/sturobson/BEM-resources#readme)\n- [Flexbox](https://github.com/afonsopacifer/awesome-flexbox#readme)\n- [Web Typography](https://github.com/deanhume/typography#readme)\n- [Web Accessibility](https://github.com/brunopulis/awesome-a11y#readme)\n- [Material Design](https://github.com/sachin1092/awesome-material#readme)\n- [D3](https://github.com/wbkd/awesome-d3#readme) - Library for producing dynamic, interactive data visualizations.\n- [Emails](https://github.com/jonathandion/awesome-emails#readme)\n- [jQuery](https://github.com/petk/awesome-jquery#readme) - Easy to use JavaScript library for DOM manipulation.\n\t- [Tips](https://github.com/AllThingsSmitty/jquery-tips-everyone-should-know#readme)\n- [Web Audio](https://github.com/notthetup/awesome-webaudio#readme)\n- [Offline-First](https://github.com/pazguille/offline-first#readme)\n- [Static Website Services](https://github.com/agarrharr/awesome-static-website-services#readme)\n- [Cycle.js](https://github.com/cyclejs-community/awesome-cyclejs#readme) - Functional and reactive JavaScript framework.\n- [Text Editing](https://github.com/dok/awesome-text-editing#readme)\n- [Motion UI Design](https://github.com/fliptheweb/motion-ui-design#readme)\n- [Vue.js](https://github.com/vuejs/awesome-vue#readme) - App framework.\n- [Marionette.js](https://github.com/sadcitizen/awesome-marionette#readme) - App framework.\n- [Aurelia](https://github.com/aurelia-contrib/awesome-aurelia#readme) - App framework.\n- [Charting](https://github.com/zingchart/awesome-charting#readme)\n- [Ionic Framework](https://github.com/candelibas/awesome-ionic#readme)\n- [Chrome DevTools](https://github.com/ChromeDevTools/awesome-chrome-devtools#readme)\n- [PostCSS](https://github.com/jdrgomes/awesome-postcss#readme) - CSS tool.\n- [Draft.js](https://github.com/nikgraf/awesome-draft-js#readme) - Rich text editor framework for React.\n- [Service Workers](https://github.com/TalAter/awesome-service-workers#readme)\n- [Progressive Web Apps](https://github.com/TalAter/awesome-progressive-web-apps#readme)\n- [choo](https://github.com/choojs/awesome-choo#readme) - App framework.\n- [Redux](https://github.com/brillout/awesome-redux#readme) - State container for JavaScript apps.\n- [Browserify](https://github.com/browserify/awesome-browserify#readme) - Module bundler.\n- [Sass](https://github.com/Famolus/awesome-sass#readme) - CSS preprocessor.\n- [Ant Design](https://github.com/websemantics/awesome-ant-design#readme) - Enterprise-class UI design language.\n- [Less](https://github.com/LucasBassetti/awesome-less#readme) - CSS preprocessor.\n- [WebGL](https://github.com/sjfricke/awesome-webgl#readme) - JavaScript API for rendering 3D graphics.\n- [Preact](https://github.com/preactjs/awesome-preact#readme) - App framework.\n- [Progressive Enhancement](https://github.com/jbmoelker/progressive-enhancement-resources#readme)\n- [Next.js](https://github.com/unicodeveloper/awesome-nextjs#readme) - Framework for server-rendered React apps.\n- [lit](https://github.com/web-padawan/awesome-lit#readme) - Library for building web components with a declarative template system.\n- [JAMstack](https://github.com/automata/awesome-jamstack#readme) - Modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt markup.\n- [WordPress-Gatsby](https://github.com/henrikwirth/awesome-wordpress-gatsby#readme) - Web development technology stack with WordPress as a back end and Gatsby as a front end.\n- [Mobile Web Development](https://github.com/myshov/awesome-mobile-web-development#readme) - Creating a great mobile web experience.\n- [Storybook](https://github.com/lauthieb/awesome-storybook#readme) - Development environment for UI components.\n- [Blazor](https://github.com/AdrienTorris/awesome-blazor#readme) - .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly.\n- [PageSpeed Metrics](https://github.com/csabapalfi/awesome-pagespeed-metrics#readme) - Metrics to help understand page speed and user experience.\n- [Tailwind CSS](https://github.com/aniftyco/awesome-tailwindcss#readme) - Utility-first CSS framework for rapid UI development.\n- [Seed](https://github.com/seed-rs/awesome-seed-rs#readme) - Rust framework for creating web apps running in WebAssembly.\n- [Web Performance Budget](https://github.com/pajaydev/awesome-web-performance-budget#readme) - Techniques to ensure certain performance metrics for a website.\n- [Web Animation](https://github.com/sergey-pimenov/awesome-web-animation#readme) - Animations in the browser with JavaScript, CSS, SVG, etc.\n- [Yew](https://github.com/jetli/awesome-yew#readme) - Rust framework inspired by Elm and React for creating multi-threaded frontend web apps with WebAssembly.\n- [Material-UI](https://github.com/nadunindunil/awesome-material-ui#readme) - Material Design React components for faster and easier web development.\n- [Building Blocks for Web Apps](https://github.com/componently-com/awesome-building-blocks-for-web-apps#readme) - Standalone features to be integrated into web apps.\n- [Svelte](https://github.com/TheComputerM/awesome-svelte#readme) - App framework.\n- [Design systems](https://github.com/klaufel/awesome-design-systems#readme) - Collection of reusable components, guided by rules that ensure consistency and speed.\n- [Inertia.js](https://github.com/innocenzi/awesome-inertiajs#readme) - Make single-page apps without building an API.\n- [MDBootstrap](https://github.com/mdbootstrap/awesome-mdbootstrap#readme) - Templates, layouts, components, and widgets to rapidly build websites.\n- [Master CSS](https://github.com/master-co/awesome-master-css#readme) - A virtual CSS language with enhanced syntax.\n- [Hydrogen](https://github.com/shopify/awesome-hydrogen#readme) - Edge-first framework for building Shopify storefronts with React.\n- [Tiny JS](https://github.com/thoughtspile/awesome-tiny-js#readme) - Frontend libraries that fit into 2 kB with dependencies.\n- [Frontend GIS](https://github.com/joewdavies/awesome-frontend-gis#readme) - Geographic Information Systems (GIS) for web browsers.\n- [WebGPU](https://github.com/mikbry/awesome-webgpu#readme) - JavaScript API for rendering and compute on GPUs.\n- [WebAssembly](https://github.com/idematos/awesome-webassembly#readme) - A portable binary format for running code efficiently across platforms.\n\n## Back-End Development\n\n- [Flask](https://github.com/mjhea0/awesome-flask#readme) - Python framework.\n- [Docker](https://github.com/veggiemonk/awesome-docker#readme)\n- [Vagrant](https://github.com/iJackUA/awesome-vagrant#readme) - Automation virtual machine environment.\n- [Pyramid](https://github.com/uralbash/awesome-pyramid#readme) - Python framework.\n- [Play1 Framework](https://github.com/PerfectCarl/awesome-play1#readme)\n- [CakePHP](https://github.com/friendsofcake/awesome-cakephp#readme) - PHP framework.\n- [Symfony](https://github.com/sitepoint-editors/awesome-symfony#readme) - PHP framework.\n\t- [Education](https://github.com/pehapkari/awesome-symfony-education#readme)\n- [Laravel](https://github.com/chiraggude/awesome-laravel#readme) - PHP framework.\n\t- [Education](https://github.com/fukuball/Awesome-Laravel-Education#readme)\n\t- [TALL Stack](https://github.com/livewire/awesome-tall-stack#readme) - Full-stack development solution featuring libraries built by the Laravel community.\n- [Rails](https://github.com/gramantin/awesome-rails#readme) - Web app framework for Ruby.\n\t- [Gems](https://github.com/hothero/awesome-rails-gem#readme) - Packages.\n- [Phalcon](https://github.com/phalcon/awesome-phalcon#readme) - PHP framework.\n- [Useful `.htaccess` Snippets](https://github.com/phanan/htaccess#readme)\n- [nginx](https://github.com/fcambus/nginx-resources#readme) - Web server.\n- [Dropwizard](https://github.com/stve/awesome-dropwizard#readme) - Java framework.\n- [Kubernetes](https://github.com/ramitsurana/awesome-kubernetes#readme) - Open-source platform that automates Linux container operations.\n- [Lumen](https://github.com/unicodeveloper/awesome-lumen#readme) - PHP micro-framework.\n- [Serverless Framework](https://github.com/pmuens/awesome-serverless#readme) - Serverless computing and serverless architectures.\n- [Apache Wicket](https://github.com/PhantomYdn/awesome-wicket#readme) - Java web app framework.\n- [Vert.x](https://github.com/vert-x3/vertx-awesome#readme) - Toolkit for building reactive apps on the JVM.\n- [Terraform](https://github.com/shuaibiyy/awesome-terraform#readme) - Tool for building, changing, and versioning infrastructure.\n- [Vapor](https://github.com/vapor-community/awesome-vapor#readme) - Server-side development in Swift.\n- [Dash](https://github.com/ucg8j/awesome-dash#readme) - Python web app framework.\n- [FastAPI](https://github.com/mjhea0/awesome-fastapi#readme) - Python web app framework.\n- [CDK](https://github.com/kolomied/awesome-cdk#readme) - Open-source software development framework for defining cloud infrastructure in code.\n- [IAM](https://github.com/kdeldycke/awesome-iam#readme) - User accounts, authentication and authorization.\n- [Slim](https://github.com/nekofar/awesome-slim#readme) - PHP framework.\n- [Fiber](https://github.com/gofiber/awesome-fiber#readme) - Web framework built on top of Fasthttp, the fastest HTTP engine for Go.\n- [Kustomize](https://github.com/DevOpsHiveHQ/awesome-kustomize#readme) - Kubernetes native declarative configuration management tool.\n- [OpenTofu](https://github.com/virtualroot/awesome-opentofu#readme) - Open-source infrastructure as code tool.\n- [Reflex](https://github.com/reflex-dev/awesome-reflex#readme) - Python web framework for building both your frontend and backend with no JavaScript.\n\n## Computer Science\n\n- [University Courses](https://github.com/prakhar1989/awesome-courses#readme)\n- [Data Science](https://github.com/academic/awesome-datascience#readme)\n\t- [Tutorials](https://github.com/siboehm/awesome-learn-datascience#readme)\n- [Machine Learning](https://github.com/josephmisiti/awesome-machine-learning#readme)\n\t- [Tutorials](https://github.com/ujjwalkarn/Machine-Learning-Tutorials#readme)\n\t- [ML with Ruby](https://github.com/arbox/machine-learning-with-ruby#readme) - Learning, implementing, and applying Machine Learning using Ruby.\n\t- [Core ML Models](https://github.com/likedan/Awesome-CoreML-Models#readme) - Models for Apple's machine learning framework.\n\t- [H2O](https://github.com/h2oai/awesome-h2o#readme) - Open source distributed machine learning platform written in Java with APIs in R, Python, and Scala.\n\t- [Software Engineering for Machine Learning](https://github.com/SE-ML/awesome-seml#readme) - From experiment to production-level machine learning.\n\t- [AI in Finance](https://github.com/georgezouq/awesome-ai-in-finance#readme) - Solving problems in finance with machine learning.\n\t- [JAX](https://github.com/n2cholas/awesome-jax#readme) - Automatic differentiation and XLA compilation brought together for high-performance machine learning research.\n\t- [XAI](https://github.com/altamiracorp/awesome-xai#readme) - Providing insight, explanations, and interpretability to machine learning methods.\n- [Speech and Natural Language Processing](https://github.com/edobashira/speech-language-processing#readme)\n\t- [Spanish](https://github.com/dav009/awesome-spanish-nlp#readme)\n\t- [NLP with Ruby](https://github.com/arbox/nlp-with-ruby#readme)\n\t- [Question Answering](https://github.com/seriousran/awesome-qa#readme) - The science of asking and answering in natural language with a machine.\n\t- [Natural Language Generation](https://github.com/accelerated-text/awesome-nlg#readme) - Generation of text used in data-to-text, conversational agents, and narrative generation applications.\n- [Linguistics](https://github.com/theimpossibleastronaut/awesome-linguistics#readme)\n- [Cryptography](https://github.com/sobolevn/awesome-cryptography#readme)\n\t- [Papers](https://github.com/pFarb/awesome-crypto-papers#readme) - Theory basics for using cryptography by non-cryptographers.\n- [Computer Vision](https://github.com/jbhuang0604/awesome-computer-vision#readme)\n- [Deep Learning](https://github.com/ChristosChristofidis/awesome-deep-learning#readme) - Neural networks.\n\t- [TensorFlow](https://github.com/jtoy/awesome-tensorflow#readme) - Library for machine intelligence.\n\t- [TensorFlow.js](https://github.com/aaronhma/awesome-tensorflow-js#readme) - WebGL-accelerated machine learning JavaScript library for training and deploying models.\n\t- [TensorFlow Lite](https://github.com/margaretmz/awesome-tensorflow-lite#readme) - Framework that optimizes TensorFlow models for on-device machine learning.\n\t- [Papers](https://github.com/terryum/awesome-deep-learning-papers#readme) - The most cited deep learning papers.\n\t- [Education](https://github.com/guillaume-chevalier/awesome-deep-learning-resources#readme)\n- [Deep Vision](https://github.com/kjw0612/awesome-deep-vision#readme)\n- [Open Source Society University](https://github.com/ossu/computer-science#readme)\n- [Functional Programming](https://github.com/lucasviola/awesome-functional-programming#readme)\n- [Empirical Software Engineering](https://github.com/dspinellis/awesome-msr#readme) - Evidence-based research on software systems.\n- [Static Analysis & Code Quality](https://github.com/analysis-tools-dev/static-analysis#readme)\n- [Information Retrieval](https://github.com/harpribot/awesome-information-retrieval#readme) - Learn to develop your own search engine.\n- [Quantum Computing](https://github.com/desireevl/awesome-quantum-computing#readme) - Computing that utilizes quantum mechanics and qubits on quantum computers.\n- [Theoretical Computer Science](https://github.com/mostafatouny/awesome-theoretical-computer-science#readme) - The interplay of computer science and pure mathematics, distinguished by its emphasis on mathematical rigour and technique.\n- [Conversational AI](https://github.com/jyguyomarch/awesome-conversational-ai#readme) - Build awesome chatbots and digital assistants.\n- [Generative AI](https://github.com/steven2358/awesome-generative-ai#readme) - Automatically generates a wide range of unique content in text, image, and audio format.\n\n## Big Data\n\n- [Big Data](https://github.com/0xnr/awesome-bigdata#readme)\n- [Public Datasets](https://github.com/awesomedata/awesome-public-datasets#readme)\n- [Hadoop](https://github.com/youngwookim/awesome-hadoop#readme) - Framework for distributed storage and processing of very large data sets.\n- [Data Engineering](https://github.com/igorbarinov/awesome-data-engineering#readme)\n- [Streaming](https://github.com/manuzhang/awesome-streaming#readme)\n- [Apache Spark](https://github.com/awesome-spark/awesome-spark#readme) - Unified engine for large-scale data processing.\n- [Qlik](https://github.com/ambster-public/awesome-qlik#readme) - Business intelligence platform for data visualization, analytics, and reporting apps.\n- [Splunk](https://github.com/sduff/awesome-splunk#readme) - Platform for searching, monitoring, and analyzing structured and unstructured machine-generated big data in real time.\n- [Network Analysis](https://github.com/briatte/awesome-network-analysis#readme)\n\n## Theory\n\n- [Papers We Love](https://github.com/papers-we-love/papers-we-love#readme)\n- [Talks](https://github.com/JanVanRyswyck/awesome-talks#readme)\n- [Algorithms](https://github.com/tayllan/awesome-algorithms#readme)\n\t- [Education](https://github.com/gaerae/awesome-algorithms-education#readme) - Learning and practicing.\n- [Algorithm Visualizations](https://github.com/enjalot/algovis#readme)\n- [Artificial Intelligence](https://github.com/owainlewis/awesome-artificial-intelligence#readme)\n- [Search Engine Optimization](https://github.com/marcobiedermann/search-engine-optimization#readme)\n- [Competitive Programming](https://github.com/lnishan/awesome-competitive-programming#readme)\n- [Math](https://github.com/rossant/awesome-math#readme)\n- [Recursion Schemes](https://github.com/passy/awesome-recursion-schemes#readme) - Traversing nested data structures.\n- [Audit Algorithms](https://github.com/erwanlemerrer/awesome-audit-algorithms#readme) - Algorithmic audits of algorithms.\n- [AGI & CoCoSci](https://github.com/YuzheSHI/awesome-agi-cocosci#readme) - The reciprocation of Artificial General Intelligence (AGI) and Computational Cognitive Sciences (CoCoSci).\n- [Complex Systems](https://github.com/sellisd/awesome-complexity#readme) - The scientific field studying systems with multiple interacting parts and emergent properties.\n- [VLM Architectures](https://github.com/gokayfem/awesome-vlm-architectures#readme) - Vision Language Model architectures.\n\n## Books\n\n- [Free Programming Books](https://github.com/EbookFoundation/free-programming-books#readme)\n- [Go Books](https://github.com/dariubs/GoBooks#readme)\n- [R Books](https://github.com/RomanTsegelskyi/rbooks#readme)\n- [Mind Expanding Books](https://github.com/hackerkid/Mind-Expanding-Books#readme)\n- [Book Authoring](https://github.com/TalAter/awesome-book-authoring#readme)\n- [Elixir Books](https://github.com/sger/ElixirBooks#readme)\n\n## Editors\n\n- [Sublime Text](https://github.com/dreikanter/sublime-bookmarks#readme)\n- [Vim](https://github.com/mhinz/vim-galore#readme)\n- [Neovim](https://github.com/rockerBOO/awesome-neovim#readme) - Vim-fork focused on extensibility and usability.\n- [Emacs](https://github.com/emacs-tw/awesome-emacs#readme)\n- [Atom](https://github.com/mehcode/awesome-atom#readme) - Open-source and hackable text editor.\n- [Visual Studio Code](https://github.com/viatsko/awesome-vscode#readme) - Cross-platform open-source text editor.\n\n## Gaming\n\n- [Game Development](https://github.com/ellisonleao/magictools#readme)\n- [Game Talks](https://github.com/hzoo/awesome-gametalks#readme)\n- [Godot](https://github.com/godotengine/awesome-godot#readme) - Game engine.\n- [Open Source Games](https://github.com/michelpereira/awesome-open-source-games#readme)\n- [Unity](https://github.com/RyanNielson/awesome-unity#readme) - Game engine.\n- [Chess](https://github.com/hkirat/awesome-chess#readme)\n- [LÖVE](https://github.com/love2d-community/awesome-love2d#readme) - Game engine.\n- [PICO-8](https://github.com/pico-8/awesome-PICO-8#readme) - Fantasy console.\n- [Game Boy Development](https://github.com/gbdev/awesome-gbdev#readme)\n- [Construct 2](https://github.com/ConstructCommunity/awesome-construct#readme) - Game engine.\n- [Gideros](https://github.com/stetso/awesome-gideros#readme) - Game engine.\n- [Minecraft](https://github.com/bs-community/awesome-minecraft#readme) - Sandbox video game.\n- [ComputerCraft](https://github.com/tomodachi94/awesome-computercraft#readme) - Minecraft mod that adds programmable computers.\n- [Game Datasets](https://github.com/leomaurodesenv/game-datasets#readme) - Materials and datasets for Artificial Intelligence in games.\n- [Haxe Game Development](https://github.com/Dvergar/awesome-haxe-gamedev#readme) - A high-level strongly typed programming language used to produce cross-platform native code.\n- [libGDX](https://github.com/rafaskb/awesome-libgdx#readme) - Java game framework.\n- [PlayCanvas](https://github.com/playcanvas/awesome-playcanvas#readme) - Game engine.\n- [Game Remakes](https://github.com/radek-sprta/awesome-game-remakes#readme) - Actively maintained open-source game remakes.\n- [Flame](https://github.com/flame-engine/awesome-flame#readme) - Game engine for Flutter.\n- [Discord Communities](https://github.com/mhxion/awesome-discord-communities#readme) - Chat with friends and communities.\n- [CHIP-8](https://github.com/tobiasvl/awesome-chip-8#readme) - Virtual computer game machine from the 70s.\n- [Games of Coding](https://github.com/michelpereira/awesome-games-of-coding#readme) - Learn a programming language by making games.\n- [Esports](https://github.com/strift/awesome-esports#readme) - Video games played as a sport.\n- [Learn Gamedev](https://github.com/notpresident35/awesome-learn-gamedev#readme) - The craft of video game creation.\n- [Game Engine Development](https://github.com/stevinz/awesome-game-engine-dev#readme) - Building software to speed up game creation.\n- [GameMaker](https://github.com/bytecauldron/awesome-gamemaker#readme) - Game engine.\n- [Game Production](https://github.com/vhladiienko/awesome-game-production#readme) - Leading the process of designing, developing, testing and distributing a video game from concept to release.\n- [Babylon.js](https://github.com/Symbitic/awesome-babylonjs#readme) - Game engine for cross-platform web and native game development.\n\n## Development Environment\n\n- [Quick Look Plugins](https://github.com/sindresorhus/quick-look-plugins#readme) - For macOS.\n- [Dev Env](https://github.com/jondot/awesome-devenv#readme)\n- [Dotfiles](https://github.com/webpro/awesome-dotfiles#readme)\n- [Shell](https://github.com/alebcay/awesome-shell#readme)\n- [Fish](https://github.com/jorgebucaran/awsm.fish#readme) - User-friendly shell.\n- [Command-Line Apps](https://github.com/agarrharr/awesome-cli-apps#readme)\n- [ZSH Plugins](https://github.com/unixorn/awesome-zsh-plugins#readme)\n- [GitHub](https://github.com/phillipadsmith/awesome-github#readme) - Hosting service for Git repositories.\n\t- [Browser Extensions](https://github.com/stefanbuck/awesome-browser-extensions-for-github#readme)\n\t- [Cheat Sheet](https://github.com/tiimgreen/github-cheat-sheet#readme)\n\t- [Pinned Gists](https://github.com/matchai/awesome-pinned-gists#readme) - Dynamic pinned gists for your GitHub profile.\n- [Git Cheat Sheet & Git Flow](https://github.com/arslanbilal/git-cheat-sheet#readme)\n- [Git Tips](https://github.com/git-tips/tips#readme)\n- [Git Add-ons](https://github.com/stevemao/awesome-git-addons#readme) - Enhance the `git` CLI.\n- [Git Hooks](https://github.com/compscilauren/awesome-git-hooks#readme) - Scripts for automating tasks during `git` workflows.\n- [SSH](https://github.com/moul/awesome-ssh#readme)\n- [FOSS for Developers](https://github.com/tvvocold/FOSS-for-Dev#readme)\n- [Hyper](https://github.com/bnb/awesome-hyper#readme) - Cross-platform terminal app built on web technologies.\n- [PowerShell](https://github.com/janikvonrotz/awesome-powershell#readme) - Cross-platform object-oriented shell.\n- [Alfred Workflows](https://github.com/alfred-workflows/awesome-alfred-workflows#readme) - Productivity app for macOS.\n- [Terminals Are Sexy](https://github.com/k4m4/terminals-are-sexy#readme)\n- [GitHub Actions](https://github.com/sdras/awesome-actions#readme) - Create tasks to automate your workflow and share them with others on GitHub.\n- [WezTerm](https://github.com/michaelbrusegard/awesome-wezterm#readme) - Powerful cross-platform terminal emulator.\n\n## Entertainment\n\n- [Science Fiction](https://github.com/sindresorhus/awesome-scifi#readme) - Scifi.\n- [Fantasy](https://github.com/RichardLitt/awesome-fantasy#readme)\n- [Podcasts](https://github.com/ayr-ton/awesome-geek-podcasts#readme)\n- [Email Newsletters](https://github.com/zudochkin/awesome-newsletters#readme)\n- [IT Quotes](https://github.com/victorlaerte/awesome-it-quotes#readme)\n\n## Databases\n\n- [Database](https://github.com/numetriclabz/awesome-db#readme)\n- [MySQL](https://github.com/shlomi-noach/awesome-mysql#readme)\n- [SQLAlchemy](https://github.com/dahlia/awesome-sqlalchemy#readme)\n- [InfluxDB](https://github.com/mark-rushakoff/awesome-influxdb#readme)\n- [Neo4j](https://github.com/neueda/awesome-neo4j#readme)\n- [MongoDB](https://github.com/ramnes/awesome-mongodb#readme) - NoSQL database.\n- [RethinkDB](https://github.com/d3viant0ne/awesome-rethinkdb#readme)\n- [TinkerPop](https://github.com/mohataher/awesome-tinkerpop#readme) - Graph computing framework.\n- [PostgreSQL](https://github.com/dhamaniasad/awesome-postgres#readme) - Object-relational database.\n- [CouchDB](https://github.com/quangv/awesome-couchdb#readme) - Document-oriented NoSQL database.\n- [HBase](https://github.com/rayokota/awesome-hbase#readme) - Distributed, scalable, big data store.\n- [NoSQL Guides](https://github.com/erictleung/awesome-nosql-guides#readme) - Help on using non-relational, distributed, open-source, and horizontally scalable databases.\n- [Database Tools](https://github.com/mgramin/awesome-db-tools#readme) - Everything that makes working with databases easier.\n- [TypeDB](https://github.com/vaticle/typedb-awesome#readme) - Logical database to organize large and complex networks of data as one body of knowledge.\n- [Cassandra](https://github.com/Anant/awesome-cassandra#readme) - Open-source, distributed, wide column store, NoSQL database management system.\n- [TDengine](https://github.com/taosdata/awesome-tdengine#readme) - An open-source time-series database with high-performance, scalability, and SQL support.\n- [Supabase](https://github.com/lyqht/awesome-supabase#readme) - An open-source alternative to Firebase.\n- [PocketBase](https://github.com/benallfree/awesome-pocketbase#readme) - An open-source, Go-based backend in one file.\n- [Neon](https://github.com/tyaga001/awesome-neon#readme) - An open-source alternative to AWS Aurora.\n\n## Media\n\n- [Fonts](https://github.com/brabadu/awesome-fonts#readme)\n- [Codeface](https://github.com/chrissimpkins/codeface#readme) - Text editor fonts.\n- [Stock Resources](https://github.com/neutraltone/awesome-stock-resources#readme)\n- [GIF](https://github.com/davisonio/awesome-gif#readme) - Image format known for animated images.\n- [Music](https://github.com/ciconia/awesome-music#readme)\n- [Open Source Documents](https://github.com/44bits/awesome-opensource-documents#readme)\n- [Audio Visualization](https://github.com/willianjusten/awesome-audio-visualization#readme)\n- [Broadcasting](https://github.com/ebu/awesome-broadcasting#readme)\n- [Pixel Art](https://github.com/Siilwyn/awesome-pixel-art#readme) - Pixel-level digital art.\n- [FFmpeg](https://github.com/transitive-bullshit/awesome-ffmpeg#readme) - Cross-platform solution to record, convert and stream audio and video.\n- [Icons](https://github.com/notlmn/awesome-icons#readme) - Downloadable SVG/PNG/font icon projects.\n- [Audiovisual](https://github.com/stingalleman/awesome-audiovisual#readme) - Lighting, audio and video in professional environments.\n- [VLC](https://github.com/mfkl/awesome-vlc#readme) - Cross-platform media player software and streaming server.\n\n## Learn\n\n- [CLI Workshoppers](https://github.com/therebelrobot/awesome-workshopper#readme) - Interactive tutorials.\n- [Learn to Program](https://github.com/karlhorky/learn-to-program#readme)\n- [Speaking](https://github.com/matteofigus/awesome-speaking#readme)\n- [Tech Videos](https://github.com/lucasviola/awesome-tech-videos#readme)\n- [Dive into Machine Learning](https://github.com/hangtwenty/dive-into-machine-learning#readme)\n- [Computer History](https://github.com/watson/awesome-computer-history#readme)\n- [Programming for Kids](https://github.com/HollyAdele/awesome-programming-for-kids#readme)\n- [STEAM](https://github.com/RahulBirCodes/awesome-steam#readme) - Supplements for specific science, technology, engineering, arts, and math (STEAM) courses across all grade levels.\n- [Educational Games](https://github.com/yrgo/awesome-educational-games#readme) - Learn while playing.\n- [JavaScript Learning](https://github.com/micromata/awesome-javascript-learning#readme)\n- [CSS Learning](https://github.com/micromata/awesome-css-learning#readme) - Mainly about CSS – the language and the modules.\n- [Product Management](https://github.com/dend/awesome-product-management#readme) - Learn how to be a better product manager.\n- [Roadmaps](https://github.com/liuchong/awesome-roadmaps#readme) - Gives you a clear route to improve your knowledge and skills.\n- [YouTubers](https://github.com/JoseDeFreitas/awesome-youtubers#readme) - Watch video tutorials from YouTubers that teach you about technology.\n- [Hackathon](https://github.com/dribdat/awesome-hackathon#readme) - Running fun and productive hackathons.\n- [Certificates](https://github.com/PanXProject/awesome-certificates#readme) - Free computer science certifications to showcase your knowledge.\n\n## Security\n\n- [Application Security](https://github.com/paragonie/awesome-appsec#readme)\n- [Security](https://github.com/sbilly/awesome-security#readme)\n- [CTF](https://github.com/apsdehal/awesome-ctf#readme) - Capture The Flag.\n- [Cyber Security University](https://github.com/brootware/awesome-cyber-security-university#readme) - Free educational resources that focus on learning by doing.\n- [Malware Analysis](https://github.com/rshipp/awesome-malware-analysis#readme)\n- [Android Security](https://github.com/ashishb/android-security-awesome#readme)\n- [Hacking](https://github.com/carpedm20/awesome-hacking#readme)\n- [Hacking Spots](https://github.com/daviddias/awesome-hacking-locations#readme)\n- [Honeypots](https://github.com/paralax/awesome-honeypots#readme) - Deception trap, designed to entice an attacker into attempting to compromise the information systems in an organization.\n- [Incident Response](https://github.com/meirwah/awesome-incident-response#readme)\n- [Vehicle Security and Car Hacking](https://github.com/jaredthecoder/awesome-vehicle-security#readme)\n- [Web Security](https://github.com/qazbnm456/awesome-web-security#readme) - Security of web apps & services.\n- [Lockpicking](https://github.com/fabacab/awesome-lockpicking#readme) - The art of unlocking a lock by manipulating its components without the key.\n- [Cybersecurity Blue Team](https://github.com/fabacab/awesome-cybersecurity-blueteam#readme) - Groups of individuals who identify security flaws in information technology systems.\n- [Fuzzing](https://github.com/cpuu/awesome-fuzzing#readme) - Automated software testing technique that involves feeding pseudo-randomly generated input data.\n- [Embedded and IoT Security](https://github.com/fkie-cad/awesome-embedded-and-iot-security#readme)\n- [GDPR](https://github.com/bakke92/awesome-gdpr#readme) - Regulation on data protection and privacy for all individuals within EU.\n- [DevSecOps](https://github.com/TaptuIT/awesome-devsecops#readme) - Integration of security practices into [DevOps](https://en.wikipedia.org/wiki/DevOps).\n- [Executable Packing](https://github.com/dhondta/awesome-executable-packing#readme) - Packing and unpacking executable formats.\n- [Malware Persistence](https://github.com/Karneades/awesome-malware-persistence#readme) - Techniques that adversaries use to keep access to systems across restarts.\n- [EVM Security](https://github.com/kareniel/awesome-evm-security#readme) - Understanding the Ethereum Virtual Machine security ecosystem.\n- [Password Cracking](https://github.com/n0kovo/awesome-password-cracking#readme) - The process of recovering passwords from data that has been stored in or transmitted by a system in scrambled form.\n- [Security Card Games](https://github.com/Karneades/awesome-security-card-games#readme) - Train your skills and discuss various security topics.\n- [Suricata](https://github.com/satta/awesome-suricata#readme) - Intrusion detection/prevention system and network security monitoring engine.\n- [Prompt Injection](https://github.com/FonduAI/awesome-prompt-injection#readme) - A type of vulnerability that specifically targets machine learning models.\n- [Detection Engineering](https://github.com/infosecB/awesome-detection-engineering#readme) - Design, build, and operate detective cybersecurity controls.\n- [Annual Security Reports](https://github.com/jacobdjwilson/awesome-annual-security-reports#readme) - Exploring cybersecurity trends, insights, and challenges.\n- [CI/CD Attacks](https://github.com/TupleType/awesome-cicd-attacks#readme) - Offensive research of systems and processes related to developing and deploying code.\n\n## Content Management Systems\n\n- [Umbraco](https://github.com/umbraco-community/awesome-umbraco#readme)\n- [Refinery CMS](https://github.com/refinerycms-contrib/awesome-refinerycms#readme) - Ruby on Rails CMS.\n- [Wagtail](https://github.com/springload/awesome-wagtail#readme) - Django CMS focused on flexibility and user experience.\n- [Textpattern](https://github.com/drmonkeyninja/awesome-textpattern#readme) - Lightweight PHP-based CMS.\n- [Drupal](https://github.com/nirgn975/awesome-drupal#readme) - Extensible PHP-based CMS.\n- [Craft CMS](https://github.com/craftcms/awesome#readme) - Content-first CMS.\n- [Sitecore](https://github.com/MartinMiles/Awesome-Sitecore#readme) - .NET digital marketing platform that combines CMS with tools for managing multiple websites.\n- [Silverstripe CMS](https://github.com/wernerkrauss/awesome-silverstripe-cms#readme) - PHP MVC framework that serves as a classic or headless CMS.\n- [Directus](https://github.com/directus-community/awesome-directus#readme) - A real-time API and app dashboard for managing SQL database content.\n- [Plone](https://github.com/collective/awesome-plone#readme) - Open source Python CMS.\n- [Payload](https://github.com/DanailMinchev/awesome-payload#readme) - Next.js native and open source headless CMS.\n\n## Hardware\n\n- [Robotics](https://github.com/Kiloreux/awesome-robotics#readme)\n- [Internet of Things](https://github.com/HQarroum/awesome-iot#readme)\n- [Electronics](https://github.com/kitspace/awesome-electronics#readme) - For electronic engineers and hobbyists.\n- [Bluetooth Beacons](https://github.com/rabschi/awesome-beacon#readme)\n- [Electric Guitar Specifications](https://github.com/gitfrage/guitarspecs#readme) - Checklist for building your own electric guitar.\n- [Plotters](https://github.com/beardicus/awesome-plotters#readme) - Computer-controlled drawing machines and other visual art robots.\n- [Robotic Tooling](https://github.com/protontypes/awesome-robotic-tooling#readme) - Free and open tools for professional robotic development.\n- [LIDAR](https://github.com/szenergy/awesome-lidar#readme) - Sensor for measuring distances by illuminating the target with laser light.\n- [Open Hardware](https://github.com/delftopenhardware/awesome-open-hardware#readme) - Open-source hardware projects.\n- [ADS-B](https://github.com/rickstaa/awesome-adsb#readme) - Technology broadcasting aircraft's identity, position, and data periodically.\n- [Flying FPV](https://github.com/Matthias84/awesome-flying-fpv#readme) - Open hardware and software related to drones / UAVs.\n\n## Business\n\n- [Open Companies](https://github.com/opencompany/awesome-open-company#readme)\n- [Places to Post Your Startup](https://github.com/mmccaff/PlacesToPostYourStartup#readme)\n- [OKR Methodology](https://github.com/domenicosolazzo/awesome-okr#readme) - Goal setting & communication best practices.\n- [Indie](https://github.com/mezod/awesome-indie#readme) - Independent developer businesses.\n- [Tools of the Trade](https://github.com/cjbarber/ToolsOfTheTrade#readme) - Tools used by companies on Hacker News.\n- [Clean Tech](https://github.com/nglgzz/awesome-clean-tech#readme) - Fighting climate change with technology.\n- [Wardley Maps](https://github.com/wardley-maps-community/awesome-wardley-maps#readme) - Provides high situational awareness to help improve strategic planning and decision making.\n- [Social Enterprise](https://github.com/RayBB/awesome-social-enterprise#readme) - Building an organization primarily focused on social impact that is at least partially self-funded.\n- [Engineering Team Management](https://github.com/kdeldycke/awesome-engineering-team-management#readme) - How to transition from software development to engineering management.\n- [Developer-First Products](https://github.com/agamm/awesome-developer-first#readme) - Products that target developers as the user.\n- [Billing](https://github.com/kdeldycke/awesome-billing#readme) - Payments, invoicing, pricing, accounting, marketplace, fraud, and business intelligence.\n- [Engineering Strategy](https://github.com/aleixmorgadas/awesome-engineering-strategy#readme) - How to design and execute engineering strategies for tech leadership.\n\n## Work\n\n- [Slack](https://github.com/matiassingers/awesome-slack#readme) - Team collaboration.\n\t- [Communities](https://github.com/filipelinhares/awesome-slack#readme)\n- [Remote Jobs](https://github.com/lukasz-madon/awesome-remote-job#readme)\n- [Productivity](https://github.com/jyguyomarch/awesome-productivity#readme)\n- [Niche Job Boards](https://github.com/tramcar/awesome-job-boards#readme)\n- [Programming Interviews](https://github.com/DopplerHQ/awesome-interview-questions#readme)\n- [Code Review](https://github.com/joho/awesome-code-review#readme) - Reviewing code.\n- [Creative Technology](https://github.com/j0hnm4r5/awesome-creative-technology#readme) - Businesses & groups that specialize in combining computing, design, art, and user experience.\n- [Internships](https://github.com/lodthe/awesome-internships#readme) - CV writing guides and companies that hire interns.\n\n## Networking\n\n- [Software-Defined Networking](https://github.com/sdnds-tw/awesome-sdn#readme)\n- [PCAPTools](https://github.com/caesar0301/awesome-pcaptools#readme)\n- [Real-Time Communications](https://github.com/rtckit/awesome-rtc#readme) - Network protocols for near simultaneous exchange of media and data.\n- [SNMP](https://github.com/eozer/awesome-snmp#readme) - A protocol for collecting, modifying, and organizing information about managed devices on IP networks.\n- [Scapy](https://github.com/secdev/awesome-scapy#readme) - Python-based interactive packet manipulation.\n- [Cilium](https://github.com/seifrajhi/awesome-cilium#readme) - Provides networking and security capabilities for containerized apps, microservices, and virtual machines.\n\n## Decentralized Systems\n\n- [Bitcoin](https://github.com/igorbarinov/awesome-bitcoin#readme) - Bitcoin services and tools for software developers.\n- [Ripple](https://github.com/vhpoet/awesome-ripple#readme) - Open source distributed settlement network.\n- [Non-Financial Blockchain](https://github.com/machinomy/awesome-non-financial-blockchain#readme) - Non-financial blockchain applications.\n- [Mastodon](https://github.com/hyperupcall/awesome-mastodon#readme) - Open source decentralized microblogging network.\n- [Ethereum](https://github.com/ttumiel/Awesome-Ethereum#readme) - Distributed computing platform for smart contract development.\n- [Blockchain AI](https://github.com/steven2358/awesome-blockchain-ai#readme) - Blockchain projects for artificial intelligence and machine learning.\n- [EOSIO](https://github.com/DanailMinchev/awesome-eosio#readme) - A decentralized operating system supporting industrial-scale apps.\n- [Corda](https://github.com/chainstack/awesome-corda#readme) - Open source blockchain platform designed for business.\n- [Waves](https://github.com/msmolyakov/awesome-waves#readme) - Open source blockchain platform and development toolset for Web 3.0 apps and decentralized solutions.\n- [Substrate](https://github.com/substrate-developer-hub/awesome-substrate#readme) - Framework for writing scalable, upgradeable blockchains in Rust.\n- [Golem](https://github.com/golemfactory/awesome-golem#readme) - Open source peer-to-peer marketplace for computing resources.\n- [Stacks](https://github.com/friedger/awesome-stacks-chain#readme) - A smart contract platform secured by Bitcoin.\n- [Algorand](https://github.com/aorumbayev/awesome-algorand#readme) - An open-source, proof of stake blockchain and smart contract computing platform.\n- [ZeroNet](https://github.com/zolagonano/awesome-zeronet#readme) - A decentralized web-like network of peer-to-peer users.\n- [Cosmos SDK](https://github.com/cosmos/awesome-cosmos#readme) - Modular framework for building app-specific blockchains in Go.\n- [Tor](https://github.com/polycarbohydrate/awesome-tor#readme) - A free overlay network for enabling anonymous communication.\n- [ATProto](https://github.com/atblueprints/awesome-atproto#readme) - Open, decentralized network for building social apps.\n\n## Health and Social Science\n\n- [Biomedical Information Extraction](https://github.com/caufieldjh/awesome-bioie#readme) - How to extract information from unstructured biomedical data and text.\n- [Computational Neuroscience](https://github.com/eselkin/awesome-computational-neuroscience#readme) - A multidisciplinary science which uses computational approaches to study the nervous system.\n- [Diversity](https://github.com/folkswhocode/awesome-diversity#readme) - Creating a more inclusive and diverse tech community.\n- [Digital History](https://github.com/maehr/awesome-digital-history#readme) - Computer-aided scientific investigation of history.\n- [Empathy in Engineering](https://github.com/KimberlyMunoz/empathy-in-engineering#readme) - Building and promoting more compassionate engineering cultures.\n- [Healthcare](https://github.com/kakoni/awesome-healthcare#readme) - Open source healthcare software for facilities, providers, developers, policy experts, and researchers.\n- [Humane Technology](https://github.com/humanetech-community/awesome-humane-tech#readme) - Open source projects that help improve society.\n- [Mental Health](https://github.com/dreamingechoes/awesome-mental-health#readme) - Mental health awareness and self-care in the software industry.\n- [Neuroscience](https://github.com/analyticalmonk/awesome-neuroscience#readme) - Study of the nervous system and brain.\n- [Digital Humanities](https://github.com/dh-tech/awesome-digital-humanities#readme) - Software for humanities scholars using quantitative or computational methods.\n- [Lucid Dreams](https://github.com/IAmCoder/awesome-lucid-dreams#readme) - A dream where one becomes aware they are dreaming.\n- [Neuroimaging](https://github.com/NPACore/awesome-neuroimaging#readme) - Software for analyzing brain data from living subjects.\n- [Transgender](https://github.com/cvyl/awesome-transgender#readme) - Someone whose gender identity differs from their assigned birth sex.\n\n## Events\n\n- [Creative Tech Events](https://github.com/danvoyce/awesome-creative-tech-events#readme) - Events around the globe for creative coding, tech, design, music, arts and cool stuff.\n- [Events in Italy](https://github.com/ildoc/awesome-italy-events#readme) - Tech-related events in Italy.\n- [Events in the Netherlands](https://github.com/awkward/awesome-netherlands-events#readme) - Tech-related events in the Netherlands.\n\n## Testing\n\n- [Testing](https://github.com/TheJambo/awesome-testing#readme) - Software testing.\n- [Visual Regression Testing](https://github.com/mojoaxel/awesome-regression-testing#readme) - Ensures changes did not break the functionality or style.\n- [Selenium](https://github.com/christian-bromann/awesome-selenium#readme) - Open-source browser automation framework and ecosystem.\n- [Appium](https://github.com/SrinivasanTarget/awesome-appium#readme) - Test automation tool for apps.\n- [TAP](https://github.com/sindresorhus/awesome-tap#readme) - Test Anything Protocol.\n- [JMeter](https://github.com/aliesbelik/awesome-jmeter#readme) - Load testing and performance measurement tool.\n- [k6](https://github.com/grafana/awesome-k6#readme) - Open-source, developer-centric performance monitoring and load testing solution.\n- [Playwright](https://github.com/mxschmitt/awesome-playwright#readme) - Node.js library to automate Chromium, Firefox and WebKit with a single API.\n- [Quality Assurance Roadmap](https://github.com/fityanos/awesome-quality-assurance-roadmap#readme) - How to start & build a career in software testing.\n- [Gatling](https://github.com/aliesbelik/awesome-gatling#readme) - Open-source load and performance testing framework based on Scala, Akka, and Netty.\n- [CodeRabbit](https://github.com/coderabbitai/awesome-coderabbit#readme) - AI-powered code review platform.\n\n## Miscellaneous\n\n- [Scientific Writing](https://github.com/writing-resources/awesome-scientific-writing#readme) - Distraction-free scientific writing with Markdown, reStructuredText and Jupyter notebooks.\n- [JSON](https://github.com/burningtree/awesome-json#readme) - Text based data interchange format.\n\t- [GeoJSON](https://github.com/tmcw/awesome-geojson#readme)\n\t- [Datasets](https://github.com/jdorfman/awesome-json-datasets#readme)\n- [CSV](https://github.com/secretGeek/awesomeCSV#readme) - A text file format that stores tabular data and uses a comma to separate values.\n- [Discounts for Student Developers](https://github.com/AchoArnold/discount-for-student-dev#readme)\n- [Radio](https://github.com/kyleterry/awesome-radio#readme)\n- [Awesome](https://github.com/sindresorhus/awesome#readme) - Recursion illustrated.\n- [Analytics](https://github.com/0xnr/awesome-analytics#readme)\n- [REST](https://github.com/marmelab/awesome-rest#readme)\n- [Continuous Integration and Continuous Delivery](https://github.com/cicdops/awesome-ciandcd#readme)\n- [Services Engineering](https://github.com/mmcgrana/services-engineering#readme)\n- [Free for Developers](https://github.com/ripienaar/free-for-dev#readme)\n- [Answers](https://github.com/cyberglot/awesome-answers#readme) - Stack Overflow, Quora, etc.\n- [Sketch](https://github.com/diessica/awesome-sketch#readme) - Design app for macOS.\n- [Boilerplate Projects](https://github.com/melvin0008/awesome-projects-boilerplates#readme)\n- [Readme](https://github.com/matiassingers/awesome-readme#readme)\n- [GitHub Wiki](https://github.com/MyHoneyBadger/awesome-github-wiki#readme) - Comprehensive documentation on GitHub beyond README.\n- [Design and Development Guides](https://github.com/NARKOZ/guides#readme)\n- [Software Engineering Blogs](https://github.com/kilimchoi/engineering-blogs#readme)\n- [Self Hosted](https://github.com/awesome-selfhosted/awesome-selfhosted#readme)\n- [FOSS Production Apps](https://github.com/DataDaoDe/awesome-foss-apps#readme)\n- [Gulp](https://github.com/alferov/awesome-gulp#readme) - Task runner.\n- [AMA](https://github.com/sindresorhus/amas#readme) - Ask Me Anything.\n\t- [Answers](https://github.com/stoeffel/awesome-ama-answers#readme)\n- [Open Source Photography](https://github.com/ibaaj/awesome-OpenSourcePhotography#readme)\n- [OpenGL](https://github.com/eug/awesome-opengl#readme) - Cross-platform API for rendering 2D and 3D graphics.\n- [GraphQL](https://github.com/chentsulin/awesome-graphql#readme)\n- [Urban & Regional Planning](https://github.com/APA-Technology-Division/urban-and-regional-planning-resources#readme) - Concerning the built environment and communities.\n- [Transit](https://github.com/CUTR-at-USF/awesome-transit#readme)\n- [Research Tools](https://github.com/emptymalei/awesome-research#readme)\n- [Data Visualization](https://github.com/javierluraschi/awesome-dataviz#readme)\n- [Microservices](https://github.com/mfornos/awesome-microservices#readme)\n- [Unicode](https://github.com/jagracey/Awesome-Unicode#readme) - Unicode standards, quirks, packages and resources.\n\t- [Code Points](https://github.com/Codepoints/awesome-codepoints#readme)\n- [Beginner-Friendly Projects](https://github.com/MunGell/awesome-for-beginners#readme)\n- [Katas](https://github.com/gamontal/awesome-katas#readme)\n- [Tools for Activism](https://github.com/drewrwilson/toolsforactivism#readme)\n- [Citizen Science](https://github.com/dylanrees/citizen-science#readme) - For community-based and non-institutional scientists.\n- [MQTT](https://github.com/hobbyquaker/awesome-mqtt#readme) - \"Internet of Things\" connectivity protocol.\n- [For Girls](https://github.com/cristianoliveira/awesome4girls#readme)\n- [Vorpal](https://github.com/vorpaljs/awesome-vorpal#readme) - Node.js CLI framework.\n- [Vulkan](https://github.com/vinjn/awesome-vulkan#readme) - Low-overhead, cross-platform 3D graphics and compute API.\n- [LaTeX](https://github.com/egeerardyn/awesome-LaTeX#readme) - Typesetting language.\n- [Economics](https://github.com/antontarasenko/awesome-economics#readme) - An economist's starter kit.\n- [Funny Markov Chains](https://github.com/sublimino/awesome-funny-markov#readme)\n- [Bioinformatics](https://github.com/danielecook/Awesome-Bioinformatics#readme)\n- [Cheminformatics](https://github.com/hsiaoyi0504/awesome-cheminformatics#readme) - Informatics techniques applied to problems in chemistry.\n- [Colorful](https://github.com/Siddharth11/Colorful#readme) - Choose your next color scheme.\n- [Steam](https://github.com/scholtzm/awesome-steam#readme) - Digital distribution platform.\n- [Bots](https://github.com/hackerkid/bots#readme) - Building bots.\n- [Site Reliability Engineering](https://github.com/dastergon/awesome-sre#readme)\n- [DTrace](https://github.com/xen0l/awesome-dtrace#readme) - Dynamic tracing framework.\n- [Userscripts](https://github.com/bvolpato/awesome-userscripts#readme) - Enhance your browsing experience.\n- [Pokémon](https://github.com/tobiasbueschel/awesome-pokemon#readme) - Pokémon and Pokémon GO.\n- [ChatOps](https://github.com/exAspArk/awesome-chatops#readme) - Managing technical and business operations through a chat.\n- [Falsehood](https://github.com/kdeldycke/awesome-falsehood#readme) - Falsehoods programmers believe in.\n- [Domain-Driven Design](https://github.com/heynickc/awesome-ddd#readme) - Software development approach for complex needs by connecting the implementation to an evolving model.\n- [Quantified Self](https://github.com/woop/awesome-quantified-self#readme) - Self-tracking through technology.\n- [SaltStack](https://github.com/hbokh/awesome-saltstack#readme) - Python-based config management system.\n- [Web Design](https://github.com/nicolesaidy/awesome-web-design#readme) - For digital designers.\n- [Creative Coding](https://github.com/terkelg/awesome-creative-coding#readme) - Programming something expressive instead of something functional.\n- [No-Login Web Apps](https://github.com/aviaryan/awesome-no-login-web-apps#readme) - Web apps that work without login.\n- [Free Software](https://github.com/johnjago/awesome-free-software#readme) - Free as in freedom.\n- [Framer](https://github.com/podo/awesome-framer#readme) - Prototyping interactive UI designs.\n- [Markdown](https://github.com/BubuAnabelas/awesome-markdown#readme) - Markup language.\n- [Dev Fun](https://github.com/mislavcimpersak/awesome-dev-fun#readme) - Funny developer projects.\n- [Magento 2](https://github.com/DavidLambauer/awesome-magento2#readme) - Open Source eCommerce built with PHP.\n- [TikZ](https://github.com/xiaohanyu/awesome-tikz#readme) - Graph drawing packages for TeX/LaTeX/ConTeXt.\n- [Ad-Free](https://github.com/johnjago/awesome-ad-free#readme) - Ad-free alternatives.\n- [Prometheus](https://github.com/roaldnefs/awesome-prometheus#readme) - Open-source monitoring system.\n- [Homematic](https://github.com/homematic-community/awesome-homematic#readme) - Smart home devices.\n- [Ledger](https://github.com/sfischer13/awesome-ledger#readme) - Double-entry accounting on the command-line.\n- [Web Monetization](https://github.com/thomasbnt/awesome-web-monetization#readme) - A free open web standard service that allows you to send money directly in your browser.\n- [Uncopyright](https://github.com/johnjago/awesome-uncopyright#readme) - Public domain works.\n- [Crypto Currency Tools & Algorithms](https://github.com/Zheaoli/awesome-coins#readme) - Digital currency where encryption is used to regulate the generation of units and verify transfers.\n- [Open Source Supporters](https://github.com/zachflower/awesome-open-source-supporters#readme) - Companies that offer their tools and services for free to open source projects.\n- [Design Principles](https://github.com/robinstickel/awesome-design-principles#readme) - Create better and more consistent designs and experiences.\n- [Theravada](https://github.com/johnjago/awesome-theravada#readme) - Teachings from the Theravada Buddhist tradition.\n- [inspectIT](https://github.com/inspectit-labs/awesome-inspectit#readme) - Open source Java app performance management tool.\n- [Open Source Maintainers](https://github.com/nayafia/awesome-maintainers#readme) - The experience of being an open source maintainer.\n- [Calculators](https://github.com/xxczaki/awesome-calculators#readme) - Calculators for every platform.\n- [Captcha](https://github.com/ZYSzys/awesome-captcha#readme) - A type of challenge–response test used in computing to determine whether or not the user is human.\n- [Jupyter](https://github.com/markusschanta/awesome-jupyter#readme) - Create and share documents that contain code, equations, visualizations and narrative text.\n- [FIRST Robotics Competition](https://github.com/andrewda/awesome-frc#readme) - International high school robotics championship.\n- [Speakers](https://github.com/karlhorky/awesome-speakers#readme) - Conference and meetup speakers in the programming and design community.\n- [Board Games](https://github.com/edm00se/awesome-board-games#readme) - Table-top gaming fun for all.\n- [Software Patreons](https://github.com/uraimo/awesome-software-patreons#readme) - Fund individual programmers or the development of open source projects.\n- [Parasite](https://github.com/ecohealthalliance/awesome-parasite#readme) - Parasites and host-pathogen interactions.\n- [Food](https://github.com/jzarca01/awesome-food#readme) - Food-related projects on GitHub.\n- [Bitcoin Payment Processors](https://github.com/alexk111/awesome-bitcoin-payment-processors#readme) - Start accepting Bitcoin.\n- [Scientific Computing](https://github.com/nschloe/awesome-scientific-computing#readme) - Solving complex scientific problems using computers.\n- [Amazon Sellers](https://github.com/ScaleLeap/awesome-amazon-seller#readme)\n- [Agriculture](https://github.com/brycejohnston/awesome-agriculture#readme) - Open source technology for farming and gardening.\n- [Product Design](https://github.com/ttt30ga/awesome-product-design#readme) - Design a product from the initial concept to production.\n- [Prisma](https://github.com/catalinmiron/awesome-prisma#readme) - Turn your database into a GraphQL API.\n- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n- [Connectivity Data and Reports](https://github.com/stevesong/awesome-connectivity-info#readme) - Better understand who has access to telecommunication and internet infrastructure and on what terms.\n- [Stacks](https://github.com/stackshareio/awesome-stacks#readme) - Tech stacks for building different apps and features.\n- [Cytodata](https://github.com/cytodata/awesome-cytodata#readme) - Image-based profiling of biological phenotypes for computational biologists.\n- [IRC](https://github.com/davisonio/awesome-irc#readme) - Open source messaging protocol.\n- [Advertising](https://github.com/cenoura/awesome-ads#readme) - Advertising and programmatic media for websites.\n- [Earth](https://github.com/philsturgeon/awesome-earth#readme) - Find ways to resolve the climate crisis.\n- [Naming](https://github.com/gruhn/awesome-naming#readme) - Naming things in computer science done right.\n- [Web Archiving](https://github.com/iipc/awesome-web-archiving#readme) - An effort to preserve the Web for future generations.\n- [WP-CLI](https://github.com/schlessera/awesome-wp-cli#readme) - Command-line interface for WordPress.\n- [Credit Modeling](https://github.com/mourarthur/awesome-credit-modeling#readme) - Methods for classifying credit applicants into risk classes.\n- [Ansible](https://github.com/ansible-community/awesome-ansible#readme) - A Python-based, open-source IT configuration management and automation platform.\n- [Biological Visualizations](https://github.com/keller-mark/awesome-biological-visualizations#readme) - Interactive visualization of biological data on the web.\n- [QR Code](https://github.com/make-github-pseudonymous-again/awesome-qr-code#readme) - A type of matrix barcode that can be used to store and share a small amount of information.\n- [Veganism](https://github.com/sdassow/awesome-veganism#readme) - Making the plant-based lifestyle easy and accessible.\n- [Translations](https://github.com/mbiesiad/awesome-translations#readme) - The transfer of the meaning of a text from one language to another.\n- [Scriptable](https://github.com/dersvenhesse/awesome-scriptable#readme) - An iOS app for automation in JavaScript.\n- [WebXR](https://github.com/msub2/awesome-webxr#readme) - Enables immersive virtual reality and augmented reality content on the web.\n- [Computational Geometry](https://github.com/atkirtland/awesome-computational-geometry#readme) - Computational approaches for problems in geometry.\n- [OpenStreetMap](https://github.com/osmlab/awesome-openstreetmap#readme) - An open data mapping project utilized by many apps and devices.\n- [Computational Biology](https://github.com/inoue0426/awesome-computational-biology#readme) - Computational approaches applied to problems in biology.\n- [Read the Docs](https://github.com/readthedocs-examples/awesome-read-the-docs#readme) - Example documentation projects to inspire and help bootstrap new documentation projects.\n- [Quarto](https://github.com/mcanouil/awesome-quarto#readme) - Scientific and technical open-source publishing system built on Pandoc.\n- [Biological Image Analysis](https://github.com/hallvaaw/awesome-biological-image-analysis#readme) - Interpreting biological phenomena using images.\n- [ChatGPT](https://github.com/sindresorhus/awesome-chatgpt#readme) - Artificial intelligence chatbot developed by OpenAI.\n- [Whisper](https://github.com/sindresorhus/awesome-whisper#readme) - Open-source AI-powered speech recognition system developed by OpenAI.\n- [Stock Trading](https://github.com/shi-rudo/awesome-stock-trading#readme) - Purchase and sale of equities of publicly traded companies to generate profits.\n- [Steam Deck](https://github.com/airscripts/awesome-steam-deck#readme) - A handheld gaming computer developed by Valve.\n- [Astrophotography](https://github.com/lunohodov/awesome-astrophotography#readme) - Photography of astronomical objects, celestial events, or areas of the night sky.\n- [HPC](https://github.com/dstdev/awesome-hpc#readme) - High Performance Computing.\n- [Geocaching](https://github.com/FoxFil/awesome-geocaching#readme) - Outdoor treasure-hunting activity that uses GPS-enabled devices.\n- [Regex](https://github.com/slevithan/awesome-regex#readme) - Specialized language for matching patterns in text.\n- [Event-Driven Architecture](https://github.com/lutzh/awesome-event-driven-architecture#readme) - A software architecture approach where services collaborate by publishing and subscribing to events.\n- [Permacomputing](https://github.com/idematos/awesome-permacomputing#readme) - Resilient and regenerative computing practices inspired by permaculture.\n- [Standards](https://github.com/donBarbos/awesome-standards#readme) - Standards and proposals that define and enhance software, languages, and related technologies.\n- [Claude Code](https://github.com/hesreallyhim/awesome-claude-code#readme) - Terminal-based AI coding assistant by Anthropic.\n\n## Related\n\n- [All Awesome Lists](https://github.com/topics/awesome) - All the Awesome lists on GitHub.\n- [Awesome Search](https://awesomelists.top) - Quick search for Awesome lists.\n- [StumbleUponAwesome](https://github.com/basharovV/StumbleUponAwesome) - Discover random pages from the Awesome dataset using a browser extension.\n- [Awesome CLI](https://github.com/umutphp/awesome-cli) - A simple command-line tool to dive into Awesome lists.\n- [Awesome Viewer](https://awesome.digitalbunker.dev) - A visualizer for all of the above Awesome lists.\n- [Track Awesome List](https://www.trackawesomelist.com) - View the latest updates of Awesome lists.\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/sindresorhus/awesome",
        "repo_name": "awesome",
        "owner_name": "sindresorhus",
        "theme_id": "c39222d49d02d74147ac3cde934a52d5",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451206",
        "keywords": [
          "awesome",
          "lists",
          "about",
          "kinds",
          "interesting",
          "topics"
        ]
      },
      {
        "full_name": "vinta/awesome-python",
        "description": "An opinionated list of awesome Python frameworks, libraries, software and resources.",
        "stars": 262989,
        "files": [],
        "readme": "# Awesome Python [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nAn opinionated list of awesome Python frameworks, libraries, software and resources.\n\nInspired by [awesome-php](https://github.com/ziadoz/awesome-php).\n\n- [Awesome Python](#awesome-python)\n    - [Admin Panels](#admin-panels)\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\n    - [ASGI Servers](#asgi-servers)\n    - [Asynchronous Programming](#asynchronous-programming)\n    - [Audio](#audio)\n    - [Authentication](#authentication)\n    - [Build Tools](#build-tools)\n    - [Built-in Classes Enhancement](#built-in-classes-enhancement)\n    - [Caching](#caching)\n    - [ChatOps Tools](#chatops-tools)\n    - [CMS](#cms)\n    - [Code Analysis](#code-analysis)\n    - [Command-line Interface Development](#command-line-interface-development)\n    - [Command-line Tools](#command-line-tools)\n    - [Computer Vision](#computer-vision)\n    - [Configuration Files](#configuration-files)\n    - [Cryptography](#cryptography)\n    - [Data Analysis](#data-analysis)\n    - [Data Validation](#data-validation)\n    - [Data Visualization](#data-visualization)\n    - [Database Drivers](#database-drivers)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Debugging Tools](#debugging-tools)\n    - [Deep Learning](#deep-learning)\n    - [DevOps Tools](#devops-tools)\n    - [Distributed Computing](#distributed-computing)\n    - [Distribution](#distribution)\n    - [Documentation](#documentation)\n    - [Downloader](#downloader)\n    - [Editor Plugins and IDEs](#editor-plugins-and-ides)\n    - [Email](#email)\n    - [Environment Management](#environment-management)\n    - [File Manipulation](#file-manipulation)\n    - [Functional Programming](#functional-programming)\n    - [Game Development](#game-development)\n    - [Geolocation](#geolocation)\n    - [GUI Development](#gui-development)\n    - [Hardware](#hardware)\n    - [HTML Manipulation](#html-manipulation)\n    - [HTTP Clients](#http-clients)\n    - [Image Processing](#image-processing)\n    - [Implementations](#implementations)\n    - [Interactive Interpreter](#interactive-interpreter)\n    - [Internationalization](#internationalization)\n    - [Job Scheduler](#job-scheduler)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Network Virtualization](#network-virtualization)\n    - [News Feed](#news-feed)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Package Repositories](#package-repositories)\n    - [Penetration testing](#penetration-testing)\n    - [Permissions](#permissions)\n    - [Processes](#processes)\n    - [Recommender Systems](#recommender-systems)\n    - [Refactoring](#refactoring)\n    - [RESTful API](#restful-api)\n    - [Robotics](#robotics)\n    - [RPC Servers](#rpc-servers)\n    - [Science](#science)\n    - [Search](#search)\n    - [Serialization](#serialization)\n    - [Serverless Frameworks](#serverless-frameworks)\n    - [Shell](#shell)\n    - [Specific Formats Processing](#specific-formats-processing)\n    - [Static Site Generator](#static-site-generator)\n    - [Tagging](#tagging)\n    - [Task Queues](#task-queues)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [URL Manipulation](#url-manipulation)\n    - [Video](#video)\n    - [Web Asset Management](#web-asset-management)\n    - [Web Content Extracting](#web-content-extracting)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n    - [WebSocket](#websocket)\n    - [WSGI Servers](#wsgi-servers)\n- [Resources](#resources)\n    - [Newsletters](#newsletters)\n    - [Podcasts](#podcasts)\n- [Contributing](#contributing)\n\n---\n\n## Admin Panels\n\n*Libraries for administrative interfaces.*\n\n* [ajenti](https://github.com/ajenti/ajenti) - The admin panel your servers deserve.\n* [django-grappelli](https://github.com/sehmaschine/django-grappelli) - A jazzy skin for the Django Admin-Interface.\n* [flask-admin](https://github.com/flask-admin/flask-admin) - Simple and extensible administrative interface framework for Flask.\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\n* [jet-bridge](https://github.com/jet-admin/jet-bridge) - Admin panel framework for any application with nice UI (ex Jet Django).\n* [wooey](https://github.com/wooey/wooey) - A Django app which creates automatic web UIs for Python scripts.\n* [streamlit](https://github.com/streamlit/streamlit) - A framework which lets you build dashboards, generate reports, or create chat apps in minutes.\n\n## Algorithms and Design Patterns\n\n*Python implementation of data structures, algorithms and design patterns. Also see [awesome-algorithms](https://github.com/tayllan/awesome-algorithms).*\n\n* Algorithms\n    * [algorithms](https://github.com/keon/algorithms) - Minimal examples of data structures and algorithms.\n    * [python-ds](https://github.com/prabhupant/python-ds) - A collection of data structure and algorithms for coding interviews.\n    * [sortedcontainers](https://github.com/grantjenks/python-sortedcontainers) - Fast and pure-Python implementation of sorted collections.\n    * [thealgorithms](https://github.com/TheAlgorithms/Python) - All Algorithms implemented in Python.\n* Design Patterns\n    * [pypattyrn](https://github.com/tylerlaberge/PyPattyrn) - A simple yet effective library for implementing common design patterns.\n    * [python-patterns](https://github.com/faif/python-patterns) - A collection of design patterns in Python.\n    * [transitions](https://github.com/pytransitions/transitions) - A lightweight, object-oriented finite state machine implementation.\n\n## ASGI Servers\n\n*[ASGI](https://asgi.readthedocs.io/en/latest/)-compatible web servers.*\n\n* [daphne](https://github.com/django/daphne) - A HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP.\n* [uvicorn](https://github.com/encode/uvicorn) - A lightning-fast ASGI server implementation, using uvloop and httptools.\n* [hypercorn](https://github.com/pgjones/hypercorn) - An ASGI and WSGI Server based on Hyper libraries and inspired by Gunicorn.\n\n## Asynchronous Programming\n\n*Libraries for asynchronous, concurrent and parallel execution. Also see [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio).*\n\n* [asyncio](https://docs.python.org/3/library/asyncio.html) - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\n    - [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio)\n* [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html) - (Python standard library) A high-level interface for asynchronously executing callables.\n* [multiprocessing](https://docs.python.org/3/library/multiprocessing.html) - (Python standard library) Process-based parallelism.\n* [trio](https://github.com/python-trio/trio) - A friendly library for async concurrency and I/O.\n* [twisted](https://github.com/twisted/twisted) - An event-driven networking engine.\n* [uvloop](https://github.com/MagicStack/uvloop) - Ultra fast asyncio event loop.\n* [eventlet](https://github.com/eventlet/eventlet) - Asynchronous framework with WSGI support.\n* [gevent](https://github.com/gevent/gevent) - A coroutine-based Python networking library that uses [greenlet](https://github.com/python-greenlet/greenlet).\n\n## Audio\n\n*Libraries for manipulating audio and its metadata.*\n\n* Audio\n    * [audioread](https://github.com/beetbox/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\n    * [audioFlux](https://github.com/libAudioFlux/audioFlux) - A library for audio and music analysis, feature extraction.\n    * [dejavu](https://github.com/worldveil/dejavu) - Audio fingerprinting and recognition.\n    * [kapre](https://github.com/keunwoochoi/kapre) - Keras Audio Preprocessors.\n    * [librosa](https://github.com/librosa/librosa) - Python library for audio and music analysis.\n    * [matchering](https://github.com/sergree/matchering) - A library for automated reference audio mastering.\n    * [mingus](http://bspaans.github.io/python-mingus/) - An advanced music theory and notation package with MIDI file and playback support.\n    * [pyaudioanalysis](https://github.com/tyiannak/pyAudioAnalysis) - Audio feature extraction, classification, segmentation and applications.\n    * [pydub](https://github.com/jiaaro/pydub) - Manipulate audio with a simple and easy high level interface.\n    * [timeside](https://github.com/Parisson/TimeSide) - Open web audio processing framework.\n* Metadata\n    * [beets](https://github.com/beetbox/beets) - A music library manager and [MusicBrainz](https://musicbrainz.org/) tagger.\n    * [eyed3](https://github.com/nicfit/eyeD3) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\n    * [mutagen](https://github.com/quodlibet/mutagen) - A Python module to handle audio metadata.\n    * [tinytag](https://github.com/devsnd/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n## Authentication\n\n*Libraries for implementing authentications schemes.*\n\n* OAuth\n    * [authlib](https://github.com/lepture/authlib) - JavaScript Object Signing and Encryption draft implementation.\n    * [django-allauth](https://github.com/pennersr/django-allauth) - Authentication app for Django that \"just works.\"\n    * [django-oauth-toolkit](https://github.com/jazzband/django-oauth-toolkit) - OAuth 2 goodies for Django.\n    * [oauthlib](https://github.com/oauthlib/oauthlib) - A generic and thorough implementation of the OAuth request-signing logic.\n* JWT\n    * [pyjwt](https://github.com/jpadilla/pyjwt) - JSON Web Token implementation in Python.\n    * [python-jose](https://github.com/mpdavis/python-jose/) - A JOSE implementation in Python.\n\n## Build Tools\n\n*Compile software from source code.*\n\n* [bitbake](https://github.com/openembedded/bitbake) - A make-like build tool for embedded Linux.\n* [buildout](https://github.com/buildout/buildout) - A build system for creating, assembling and deploying applications from multiple parts.\n* [platformio](https://github.com/platformio/platformio-core) - A console tool to build code with different development platforms.\n* [pybuilder](https://github.com/pybuilder/pybuilder) - A continuous build tool written in pure Python.\n* [scons](https://github.com/SCons/scons) - A software construction tool.\n\n## Built-in Classes Enhancement\n\n*Libraries for enhancing Python built-in classes.*\n\n* [attrs](https://github.com/python-attrs/attrs) - Replacement for `__init__`, `__eq__`, `__repr__`, etc. boilerplate in class definitions.\n* [bidict](https://github.com/jab/bidict) - Efficient, Pythonic bidirectional map data structures and related functionality..\n* [box](https://github.com/cdgriffith/Box) - Python dictionaries with advanced dot notation access.\n* [dataclasses](https://docs.python.org/3/library/dataclasses.html) - (Python standard library) Data classes.\n* [dotteddict](https://github.com/carlosescri/DottedDict) - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\n## CMS\n\n*Content Management Systems.*\n\n* [feincms](https://github.com/feincms/feincms) - One of the most advanced Content Management Systems built on Django.\n* [indico](https://github.com/indico/indico) - A feature-rich event management system, made @ [CERN](https://en.wikipedia.org/wiki/CERN).\n* [wagtail](https://github.com/wagtail/wagtail) - A Django content management system.\n\n## Caching\n\n*Libraries for caching data.*\n\n* [beaker](https://github.com/bbangert/beaker) - A WSGI middleware for sessions and caching.\n* [django-cache-machine](https://github.com/django-cache-machine/django-cache-machine) - Automatic caching and invalidation for Django models.\n* [django-cacheops](https://github.com/Suor/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n* [dogpile.cache](https://github.com/sqlalchemy/dogpile.cache) - dogpile.cache is a next generation replacement for Beaker made by the same authors.\n* [hermescache](https://pypi.org/project/HermesCache/) - Python caching library with tag-based invalidation and dogpile effect prevention.\n* [pylibmc](https://github.com/lericson/pylibmc) - A Python wrapper around the [libmemcached](https://libmemcached.org/libMemcached.html) interface.\n* [python-diskcache](https://github.com/grantjenks/python-diskcache) - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\n## ChatOps Tools\n\n*Libraries for chatbot development.*\n\n* [errbot](https://github.com/errbotio/errbot/) - The easiest and most popular chatbot to implement ChatOps.\n\n## Code Analysis\n\n*Tools of static analysis, linters and code quality checkers. Also see [awesome-static-analysis](https://github.com/mre/awesome-static-analysis).*\n\n* Code Analysis\n    * [code2flow](https://github.com/scottrogowski/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\n    * [prospector](https://github.com/PyCQA/prospector) - A tool to analyse Python code.\n    * [vulture](https://github.com/jendrikseipp/vulture) - A tool for finding and analysing dead Python code.\n* Code Linters\n    * [flake8](https://github.com/PyCQA/flake8) - A wrapper around `pycodestyle`, `pyflakes` and McCabe.\n        * [awesome-flake8-extensions](https://github.com/DmytroLitvinov/awesome-flake8-extensions)\n    * [pylint](https://github.com/pylint-dev/pylint) - A fully customizable source code analyzer.\n    * [ruff](https://github.com/astral-sh/ruff) - An extremely fast Python linter and code formatter.\n* Code Formatters\n    * [black](https://github.com/psf/black) - The uncompromising Python code formatter.\n    * [isort](https://github.com/timothycrosley/isort) - A Python utility / library to sort imports.\n    * [yapf](https://github.com/google/yapf) - Yet another Python code formatter from Google.\n* Static Type Checkers, also see [awesome-python-typing](https://github.com/typeddjango/awesome-python-typing)\n    * [mypy](https://github.com/python/mypy) - Check variable types during compile time.\n    * [pyre-check](https://github.com/facebook/pyre-check) - Performant type checking.\n    * [typeshed](https://github.com/python/typeshed) - Collection of library stubs for Python, with static types.\n* Static Type Annotations Generators\n    * [monkeytype](https://github.com/Instagram/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types.\n    * [pytype](https://github.com/google/pytype) - Pytype checks and infers types for Python code - without requiring type annotations.\n\n## Command-line Interface Development\n\n*Libraries for building command-line applications.*\n\n* Command-line Application Development\n    * [cement](https://github.com/datafolklabs/cement) - CLI Application Framework for Python.\n    * [click](https://github.com/pallets/click/) - A package for creating beautiful command line interfaces in a composable way.\n    * [cliff](https://github.com/openstack/cliff) - A framework for creating command-line programs with multi-level commands.\n    * [python-fire](https://github.com/google/python-fire) - A library for creating command line interfaces from absolutely any Python object.\n    * [python-prompt-toolkit](https://github.com/prompt-toolkit/python-prompt-toolkit) - A library for building powerful interactive command lines.\n* Terminal Rendering\n    * [alive-progress](https://github.com/rsalmei/alive-progress) - A new kind of Progress Bar, with real-time throughput, eta and very cool animations.\n    * [asciimatics](https://github.com/peterbrittain/asciimatics) - A package to create full-screen text UIs (from interactive forms to ASCII animations).\n    * [bashplotlib](https://github.com/glamp/bashplotlib) - Making basic plots in the terminal.\n    * [colorama](https://github.com/tartley/colorama) - Cross-platform colored terminal text.\n    * [rich](https://github.com/Textualize/rich) - Python library for rich text and beautiful formatting in the terminal. Also provides a great `RichHandler` log handler.\n    * [tqdm](https://github.com/tqdm/tqdm) - Fast, extensible progress bar for loops and CLI.\n\n## Command-line Tools\n\n*Useful CLI-based tools for productivity.*\n\n* Productivity Tools\n    * [copier](https://github.com/copier-org/copier) - A library and command-line utility for rendering projects templates.\n    * [cookiecutter](https://github.com/cookiecutter/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates).\n    * [doitlive](https://github.com/sloria/doitlive) - A tool for live presentations in the terminal.\n    * [howdoi](https://github.com/gleitz/howdoi) - Instant coding answers via the command line.\n    * [invoke](https://github.com/pyinvoke/invoke) - A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks.\n    * [pathpicker](https://github.com/facebook/PathPicker) - Select files out of bash output.\n    * [thefuck](https://github.com/nvbn/thefuck) - Correcting your previous console command.\n    * [tmuxp](https://github.com/tmux-python/tmuxp) - A [tmux](https://github.com/tmux/tmux) session manager.\n    * [try](https://github.com/timofurrer/try) - A dead simple CLI to try out python packages - it's never been easier.\n* CLI Enhancements\n    * [httpie](https://github.com/httpie/cli) - A command line HTTP client, a user-friendly cURL replacement.\n    * [iredis](https://github.com/laixintao/iredis) - Redis CLI with autocompletion and syntax highlighting.\n    * [litecli](https://github.com/dbcli/litecli) - SQLite CLI with autocompletion and syntax highlighting.\n    * [mycli](https://github.com/dbcli/mycli) - MySQL CLI with autocompletion and syntax highlighting.\n    * [pgcli](https://github.com/dbcli/pgcli) - PostgreSQL CLI with autocompletion and syntax highlighting.\n\n## Computer Vision\n\n*Libraries for Computer Vision.*\n\n* [easyocr](https://github.com/JaidedAI/EasyOCR) - Ready-to-use OCR with 40+ languages supported.\n* [kornia](https://github.com/kornia/kornia/) - Open Source Differentiable Computer Vision Library for PyTorch.\n* [opencv](https://opencv.org/) - Open Source Computer Vision Library.\n* [pytesseract](https://github.com/madmaze/pytesseract) - A wrapper for [Google Tesseract OCR](https://github.com/tesseract-ocr).\n* [tesserocr](https://github.com/sirfz/tesserocr) - Another simple, Pillow-friendly, wrapper around the `tesseract-ocr` API for OCR.\n\n## Configuration Files\n\n*Libraries for storing and parsing configuration options.*\n\n* [configparser](https://docs.python.org/3/library/configparser.html) - (Python standard library) INI file parser.\n* [configobj](https://github.com/DiffSK/configobj) - INI file parser with validation.\n* [hydra](https://github.com/facebookresearch/hydra) - Hydra is a framework for elegantly configuring complex applications.\n* [python-decouple](https://github.com/HBNetwork/python-decouple) - Strict separation of settings from code.\n\n## Cryptography\n\n* [cryptography](https://github.com/pyca/cryptography) - A package designed to expose cryptographic primitives and recipes to Python developers.\n* [paramiko](https://github.com/paramiko/paramiko) - The leading native Python SSHv2 protocol library.\n* [pynacl](https://github.com/pyca/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\n\n## Data Analysis\n\n*Libraries for data analyzing.*\n\n* [pandas](http://pandas.pydata.org/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\n* [aws-sdk-pandas](https://github.com/aws/aws-sdk-pandas) - Pandas on AWS.\n* [datasette](https://github.com/simonw/datasette) - An open source multi-tool for exploring and publishing data.\n* [optimus](https://github.com/hi-primus/optimus) - Agile Data Science Workflows made easy with PySpark.\n\n## Data Validation\n\n*Libraries for validating data. Used for forms in many cases.*\n\n* [cerberus](https://github.com/pyeve/cerberus) - A lightweight and extensible data validation library.\n* [colander](https://github.com/Pylons/colander) - Validating and deserializing data obtained via XML, JSON, an HTML form post.\n* [jsonschema](https://github.com/python-jsonschema/jsonschema) - An implementation of [JSON Schema](http://json-schema.org/) for Python.\n* [schema](https://github.com/keleshev/schema) - A library for validating Python data structures.\n* [schematics](https://github.com/schematics/schematics) - Data Structure Validation.\n* [voluptuous](https://github.com/alecthomas/voluptuous) - A Python data validation library.\n* [pydantic](https://github.com/pydantic/pydantic) - Data validation using Python type hints.\n\n## Data Visualization\n\n*Libraries for visualizing data. Also see [awesome-javascript](https://github.com/sorrycc/awesome-javascript#data-visualization).*\n\n* [altair](https://github.com/altair-viz/altair) - Declarative statistical visualization library for Python.\n* [bokeh](https://github.com/bokeh/bokeh) - Interactive Web Plotting for Python.\n* [bqplot](https://github.com/bloomberg/bqplot) - Interactive Plotting Library for the Jupyter Notebook.\n* [cartopy](https://github.com/SciTools/cartopy) - A cartographic python library with matplotlib support.\n* [diagrams](https://github.com/mingrammer/diagrams) - Diagram as Code.\n* [matplotlib](https://github.com/matplotlib/matplotlib) - A Python 2D plotting library.\n* [plotnine](https://github.com/has2k1/plotnine) - A grammar of graphics for Python based on ggplot2.\n* [pygal](https://github.com/Kozea/pygal) - A Python SVG Charts Creator.\n* [pygraphviz](https://github.com/pygraphviz/pygraphviz/) - Python interface to [Graphviz](http://www.graphviz.org/).\n* [pyqtgraph](https://github.com/pyqtgraph/pyqtgraph) - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\n* [seaborn](https://github.com/mwaskom/seaborn) - Statistical data visualization using Matplotlib.\n* [vispy](https://github.com/vispy/vispy) - High-performance scientific visualization based on OpenGL.\n\n## Database\n\n*Databases implemented in Python.*\n\n* [pickleDB](https://github.com/patx/pickledb) - A simple and lightweight key-value store for Python.\n* [tinydb](https://github.com/msiemens/tinydb) - A tiny, document-oriented database.\n* [zodb](https://github.com/zopefoundation/ZODB) - A native object database for Python. A key-value and object graph database.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* MySQL - [awesome-mysql](http://shlomi-noach.github.io/awesome-mysql/)\n    * [mysqlclient](https://github.com/PyMySQL/mysqlclient) - MySQL connector with Python 3 support ([mysql-python](https://sourceforge.net/projects/mysql-python/) fork).\n    * [pymysql](https://github.com/PyMySQL/PyMySQL) - A pure Python MySQL driver compatible to mysql-python.\n* PostgreSQL - [awesome-postgres](https://github.com/dhamaniasad/awesome-postgres)\n    * [psycopg](https://github.com/psycopg/psycopg) - The most popular PostgreSQL adapter for Python.\n* SQlite - [awesome-sqlite](https://github.com/planetopendata/awesome-sqlite)\n    * [sqlite3](https://docs.python.org/3/library/sqlite3.html) - (Python standard library) SQlite interface compliant with DB-API 2.0.\n    * [sqlite-utils](https://github.com/simonw/sqlite-utils) - Python CLI utility and library for manipulating SQLite databases.\n* Other Relational Databases\n    * [pymssql](https://github.com/pymssql/pymssql) - A simple database interface to Microsoft SQL Server.\n    * [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver) - Python driver with native interface for ClickHouse.\n* NoSQL Databases\n    * [cassandra-driver](https://github.com/datastax/python-driver) - The Python Driver for Apache Cassandra.\n    * [happybase](https://github.com/python-happybase/happybase) - A developer-friendly library for Apache HBase.\n    * [kafka-python](https://github.com/dpkp/kafka-python) - The Python client for Apache Kafka.\n    * [pymongo](https://github.com/mongodb/mongo-python-driver) - The official Python client for MongoDB.\n    * [motor](https://github.com/mongodb/motor) - The async Python driver for MongoDB.\n    * [redis-py](https://github.com/redis/redis-py) - The Python client for Redis.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [arrow](https://github.com/arrow-py/arrow) - A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps.\n* [dateutil](https://github.com/dateutil/dateutil) - Extensions to the standard Python [datetime](https://docs.python.org/3/library/datetime.html) module.\n* [pendulum](https://github.com/sdispater/pendulum) - Python datetimes made easy.\n* [pytz](https://pypi.org/project/pytz/) - World timezone definitions, modern and historical. Brings the [tz database](https://en.wikipedia.org/wiki/Tz_database) into Python.\n\n## Debugging Tools\n\n*Libraries for debugging code.*\n\n* pdb-like Debugger\n    * [ipdb](https://github.com/gotcha/ipdb) - IPython-enabled [pdb](https://docs.python.org/3/library/pdb.html).\n    * [pudb](https://github.com/inducer/pudb) - A full-screen, console-based Python debugger.\n* Tracing\n    * [manhole](https://github.com/ionelmc/python-manhole) - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\n    * [python-hunter](https://github.com/ionelmc/python-hunter) - A flexible code tracing toolkit.\n* Profiler\n    * [py-spy](https://github.com/benfred/py-spy) - A sampling profiler for Python programs. Written in Rust.\n    * [vprof](https://github.com/nvdv/vprof) - Visual Python profiler.\n* Others\n    * [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar) - Display various debug information for Django.\n    * [flask-debugtoolbar](https://github.com/pallets-eco/flask-debugtoolbar) - A port of the django-debug-toolbar to flask.\n    * [icecream](https://github.com/gruns/icecream) - Inspect variables, expressions, and program execution with a single, simple function call.\n    * [pyelftools](https://github.com/eliben/pyelftools) - Parsing and analyzing ELF files and DWARF debugging information.\n\n## Deep Learning\n\n*Frameworks for Neural Networks and Deep Learning. Also see [awesome-deep-learning](https://github.com/ChristosChristofidis/awesome-deep-learning).*\n\n* [keras](https://github.com/keras-team/keras) - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\n* [pytorch](https://github.com/pytorch/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\n* [pytorch-lightning](https://github.com/Lightning-AI/pytorch-lightning) - Deep learning framework to train, deploy, and ship AI products Lightning fast.\n* [stable-baselines3](https://github.com/DLR-RM/stable-baselines3) - PyTorch implementations of Stable Baselines (deep) reinforcement learning algorithms.\n* [tensorflow](https://github.com/tensorflow/tensorflow) - The most popular Deep Learning framework created by Google.\n* [theano](https://github.com/Theano/Theano) - A library for fast numerical computation.\n\n## DevOps Tools\n\n*Software and libraries for DevOps.*\n\n* Configuration Management\n    * [ansible](https://github.com/ansible/ansible) - A radically simple IT automation platform.\n    * [cloudinit](https://github.com/canonical/cloud-init) - A multi-distribution package that handles early initialization of a cloud instance.\n    * [openstack](https://www.openstack.org/) - Open source software for building private and public clouds.\n    * [pyinfra](https://github.com/pyinfra-dev/pyinfra) - A versatile CLI tools and python libraries to automate infrastructure.\n    * [saltstack](https://github.com/saltstack/salt) - Infrastructure automation and management system.\n* SSH-style Deployment\n    * [cuisine](https://github.com/sebastien/cuisine) - Chef-like functionality for Fabric.\n    * [fabric](https://github.com/fabric/fabric) - A simple, Pythonic tool for remote execution and deployment.\n* Process Management\n    * [supervisor](https://github.com/Supervisor/supervisor) - Supervisor process control system for UNIX.\n* Monitoring\n    * [psutil](https://github.com/giampaolo/psutil) - A cross-platform process and system utilities module.\n* Backup\n    * [borg](https://github.com/borgbackup/borg) - A deduplicating archiver with compression and encryption.\n\n## Distributed Computing\n\n*Frameworks and libraries for Distributed Computing.*\n\n* Batch Processing\n    * [dask](https://github.com/dask/dask) - A flexible parallel computing library for analytic computing.\n    * [luigi](https://github.com/spotify/luigi) - A module that helps you build complex pipelines of batch jobs.\n    * [PySpark](https://github.com/apache/spark) - [Apache Spark](https://spark.apache.org/) Python API.\n    * [Ray](https://github.com/ray-project/ray/) - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n* Stream Processing\n    * [faust](https://github.com/robinhood/faust) - A stream processing library, porting the ideas from [Kafka Streams](https://kafka.apache.org/documentation/streams/) to Python.\n    * [streamparse](https://github.com/Parsely/streamparse) - Run Python code against real-time streams of data via [Apache Storm](http://storm.apache.org/).\n\n## Distribution\n\n*Libraries to create packaged executables for release distribution.*\n\n* [py2app](https://github.com/ronaldoussoren/py2app) - Freezes Python scripts (Mac OS X).\n* [py2exe](https://github.com/py2exe/py2exe) - Freezes Python scripts (Windows).\n* [pyarmor](https://github.com/dashingsoft/pyarmor) - A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\n* [pyinstaller](https://github.com/pyinstaller/pyinstaller) - Converts Python programs into stand-alone executables (cross-platform).\n* [shiv](https://github.com/linkedin/shiv) - A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included.\n\n## Documentation\n\n*Libraries for generating project documentation.*\n\n* [sphinx](https://github.com/sphinx-doc/sphinx/) - Python Documentation generator.\n    * [awesome-sphinxdoc](https://github.com/yoloseem/awesome-sphinxdoc)\n* [pdoc](https://github.com/mitmproxy/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\n\n## Downloader\n\n*Libraries for downloading.*\n\n* [akshare](https://github.com/jindaxiang/akshare) - A financial data interface library, built for human beings!\n* [s3cmd](https://github.com/s3tools/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\n* [youtube-dl](https://github.com/ytdl-org/youtube-dl/) - A command-line program to download videos from YouTube and other video sites.\n\n## Editor Plugins and IDEs\n\n* Emacs\n    * [elpy](https://github.com/jorgenschaefer/elpy) - Emacs Python Development Environment.\n* Vim\n    * [jedi-vim](https://github.com/davidhalter/jedi-vim) - Vim bindings for the Jedi auto-completion library for Python.\n    * [python-mode](https://github.com/python-mode/python-mode) - An all in one plugin for turning Vim into a Python IDE.\n    * [YouCompleteMe](https://github.com/Valloric/YouCompleteMe) - Includes [Jedi](https://github.com/davidhalter/jedi)-based completion engine for Python.\n* Visual Studio\n    * [PTVS](https://github.com/Microsoft/PTVS) - Python Tools for Visual Studio.\n* Visual Studio Code\n    * [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python) - The official VSCode extension with rich support for Python.\n* IDE\n    * [PyCharm](https://www.jetbrains.com/pycharm/) - Commercial Python IDE by JetBrains. Has free community edition available.\n    * [spyder](https://github.com/spyder-ide/spyder) - Open Source Python IDE.\n\n## Email\n\n*Libraries for sending and parsing email.*\n\n* Mail Servers\n    * [modoboa](https://github.com/modoboa/modoboa) - A mail hosting and management platform including a modern Web UI.\n    * [salmon](https://github.com/moggers87/salmon) - A Python Mail Server.\n* Clients\n    * [imbox](https://github.com/martinrusev/imbox) - Python IMAP for Humans.\n    * [yagmail](https://github.com/kootenpv/yagmail) - Yet another Gmail/SMTP client.\n* Others\n    * [flanker](https://github.com/mailgun/flanker) - An email address and Mime parsing library.\n    * [mailer](https://github.com/marrow/mailer) - High-performance extensible mail delivery framework.\n\n## Environment Management\n\n*Libraries for Python version and virtual environment management.*\n\n* [pyenv](https://github.com/pyenv/pyenv) - Simple Python version management.\n* [virtualenv](https://github.com/pypa/virtualenv) - A tool to create isolated Python environments.\n\n## File Manipulation\n\n*Libraries for file manipulation.*\n\n* [mimetypes](https://docs.python.org/3/library/mimetypes.html) - (Python standard library) Map filenames to MIME types.\n* [pathlib](https://docs.python.org/3/library/pathlib.html) - (Python standard library) An cross-platform, object-oriented path library.\n* [path.py](https://github.com/jaraco/path.py) - A module wrapper for [os.path](https://docs.python.org/3/library/os.path.html).\n* [python-magic](https://github.com/ahupp/python-magic) - A Python interface to the libmagic file type identification library.\n* [watchdog](https://github.com/gorakhargosh/watchdog) - API and shell utilities to monitor file system events.\n\n## Functional Programming\n\n*Functional Programming with Python.*\n\n* [coconut](https://github.com/evhub/coconut) - A variant of Python built for simple, elegant, Pythonic functional programming.\n* [funcy](https://github.com/Suor/funcy) - A fancy and practical functional tools.\n* [more-itertools](https://github.com/erikrose/more-itertools) - More routines for operating on iterables, beyond `itertools`.\n* [returns](https://github.com/dry-python/returns) - A set of type-safe monads, transformers, and composition utilities.\n* [cytoolz](https://github.com/pytoolz/cytoolz/) - Cython implementation of `Toolz`: High performance functional utilities.\n* [toolz](https://github.com/pytoolz/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\n\n## GUI Development\n\n*Libraries for working with graphical user interface applications.*\n\n* [curses](https://docs.python.org/3/library/curses.html) - Built-in wrapper for [ncurses](http://www.gnu.org/software/ncurses/) used to create terminal GUI applications.\n* [Eel](https://github.com/ChrisKnott/Eel) - A library for making simple Electron-like offline HTML/JS GUI apps.\n* [enaml](https://github.com/nucleic/enaml) - Creating beautiful user-interfaces with Declarative Syntax like QML.\n* [Flet](https://flet.dev) - Cross-platform GUI framework for building modern apps in pure Python. Run on Windows, macOS, Linux, Android, iOS, and the Web.\n* [Flexx](https://github.com/zoofIO/flexx) - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\n* [Gooey](https://github.com/chriskiehl/Gooey) - Turn command line programs into a full GUI application with one line.\n* [kivy](https://kivy.org/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\n* [pyglet](https://github.com/pyglet/pyglet) - A cross-platform windowing and multimedia library for Python.\n* [PyGObject](https://pygobject.readthedocs.io/) - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\n* [PyQt](https://doc.qt.io/qtforpython/) - Python bindings for the [Qt](https://www.qt.io/) cross-platform application and UI framework.\n* [PySimpleGUI](https://github.com/PySimpleGUI/PySimpleGUI) - Wrapper for tkinter, Qt, WxPython and Remi.\n* [pywebview](https://github.com/r0x0r/pywebview/) - A lightweight cross-platform native wrapper around a webview component.\n* [Tkinter](https://wiki.python.org/moin/TkInter) - Tkinter is Python's de-facto standard GUI package.\n* [Toga](https://github.com/pybee/toga) - A Python native, OS native GUI toolkit.\n* [urwid](http://urwid.org/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\n* [wxPython](https://wxpython.org/) - A blending of the wxWidgets C++ class library with the Python.\n* [DearPyGui](https://github.com/RaylockLLC/DearPyGui/) - A Simple GPU accelerated Python GUI framework\n\n## GraphQL\n\n*Libraries for working with GraphQL.*\n\n* [graphene](https://github.com/graphql-python/graphene/) - GraphQL framework for Python.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Arcade](https://api.arcade.academy/en/latest/) - Arcade is a modern Python framework for crafting games with compelling graphics and sound.\n* [Cocos2d](https://www.cocos.com/en/cocos2d-x) - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.\n* [Harfang3D](http://www.harfang3d.com) - Python framework for 3D, VR and game development.\n* [Panda3D](https://www.panda3d.org/) - 3D game engine developed by Disney.\n* [Pygame](http://www.pygame.org/news.html) - Pygame is a set of Python modules designed for writing games.\n* [PyOgre](http://www.ogre3d.org/tikiwiki/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\n* [PyOpenGL](http://pyopengl.sourceforge.net/) - Python ctypes bindings for OpenGL and it's related APIs.\n* [PySDL2](https://pysdl2.readthedocs.io) - A ctypes based wrapper for the SDL2 library.\n* [RenPy](https://www.renpy.org/) - A Visual Novel engine.\n\n## Geolocation\n\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\n\n* [django-countries](https://github.com/SmileyChris/django-countries) - A Django app that provides a country field for models and forms.\n* [geodjango](https://docs.djangoproject.com/en/dev/ref/contrib/gis/) - A world-class geographic web framework.\n* [geojson](https://github.com/jazzband/geojson) - Python bindings and utilities for GeoJSON.\n* [geopy](https://github.com/geopy/geopy) - Python Geocoding Toolbox.\n\n## HTML Manipulation\n\n*Libraries for working with HTML and XML.*\n\n* [beautifulsoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\n* [bleach](https://github.com/mozilla/bleach) - A whitelist-based HTML sanitization and text linkification library.\n* [cssutils](https://pypi.org/project/cssutils/) - A CSS library for Python.\n* [html5lib](https://github.com/html5lib/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\n* [lxml](http://lxml.de/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\n* [markupsafe](https://github.com/pallets/markupsafe) - Implements a XML/HTML/XHTML Markup safe string for Python.\n* [pyquery](https://github.com/gawel/pyquery) - A jQuery-like library for parsing HTML.\n* [untangle](https://github.com/stchris/untangle) - Converts XML documents to Python objects for easy access.\n* [WeasyPrint](http://weasyprint.org) - A visual rendering engine for HTML and CSS that can export to PDF.\n* [xmldataset](https://xmldataset.readthedocs.io/en/latest/) - Simple XML Parsing.\n* [xmltodict](https://github.com/martinblech/xmltodict) - Working with XML feel like you are working with JSON.\n\n## HTTP Clients\n\n*Libraries for working with HTTP.*\n\n* [httpx](https://github.com/encode/httpx) - A next generation HTTP client for Python.\n* [requests](https://github.com/psf/requests) - HTTP Requests for Humans.\n* [treq](https://github.com/twisted/treq) - Python requests like API built on top of Twisted's HTTP client.\n* [urllib3](https://github.com/urllib3/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\n## Hardware\n\n*Libraries for programming with hardware.*\n\n* [keyboard](https://github.com/boppreh/keyboard) - Hook and simulate global keyboard events on Windows and Linux.\n* [mouse](https://github.com/boppreh/mouse) - Hook and simulate global mouse events on Windows and Linux.\n* [pynput](https://github.com/moses-palmer/pynput) - A library to control and monitor input devices.\n* [scapy](https://github.com/secdev/scapy) - A brilliant packet manipulation library.\n\n## Image Processing\n\n*Libraries for manipulating images.*\n\n* [pillow](https://github.com/python-pillow/Pillow) - Pillow is the friendly [PIL](http://www.pythonware.com/products/pil/) fork.\n* [python-barcode](https://github.com/WhyNotHugo/python-barcode) - Create barcodes in Python with no extra dependencies.\n* [pymatting](http://github.com/pymatting/pymatting) - A library for alpha matting.\n* [python-qrcode](https://github.com/lincolnloop/python-qrcode) - A pure Python QR Code generator.\n* [pywal](https://github.com/dylanaraps/pywal) - A tool that generates color schemes from images.\n* [pyvips](https://github.com/libvips/pyvips) - A fast image processing library with low memory needs.\n* [quads](https://github.com/fogleman/Quads) - Computer art based on quadtrees.\n* [scikit-image](http://scikit-image.org/) - A Python library for (scientific) image processing.\n* [thumbor](https://github.com/thumbor/thumbor) - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\n* [wand](https://github.com/emcconville/wand) - Python bindings for [MagickWand](http://www.imagemagick.org/script/magick-wand.php), C API for ImageMagick.\n\n## Implementations\n\n*Implementations of Python.*\n\n* [cpython](https://github.com/python/cpython) - **Default, most widely used implementation of the Python programming language written in C.**\n* [cython](https://github.com/cython/cython) - Optimizing Static Compiler for Python.\n* [clpython](https://github.com/metawilm/cl-python) - Implementation of the Python programming language written in Common Lisp.\n* [ironpython](https://github.com/IronLanguages/ironpython3) - Implementation of the Python programming language written in C#.\n* [micropython](https://github.com/micropython/micropython) - A lean and efficient Python programming language implementation.\n* [numba](https://github.com/numba/numba) - Python JIT compiler to LLVM aimed at scientific Python.\n* [peachpy](https://github.com/Maratyszcza/PeachPy) - x86-64 assembler embedded in Python.\n* [pypy](https://foss.heptapod.net/pypy/pypy) - A very fast and compliant implementation of the Python language.\n* [pyston](https://github.com/pyston/pyston/) - A Python implementation using JIT techniques.\n\n## Interactive Interpreter\n\n*Interactive Python interpreters (REPL).*\n\n* [bpython](https://github.com/bpython/bpython) - A fancy interface to the Python interpreter.\n* [Jupyter Notebook (IPython)](https://jupyter.org) - A rich toolkit to help you make the most out of using Python interactively.\n    * [awesome-jupyter](https://github.com/markusschanta/awesome-jupyter)\n* [ptpython](https://github.com/jonathanslenders/ptpython) - Advanced Python REPL built on top of the [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit).\n\n## Internationalization\n\n*Libraries for working with i18n.*\n\n* [Babel](http://babel.pocoo.org/en/latest/) - An internationalization library for Python.\n* [PyICU](https://github.com/ovalhub/pyicu) - A wrapper of International Components for Unicode C++ library ([ICU](http://site.icu-project.org/)).\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [Airflow](https://airflow.apache.org/) - Airflow is a platform to programmatically author, schedule and monitor workflows.\n* [APScheduler](http://apscheduler.readthedocs.io/en/latest/) - A light but powerful in-process task scheduler that lets you schedule functions.\n* [django-schedule](https://github.com/thauber/django-schedule) - A calendaring app for Django.\n* [doit](http://pydoit.org/) - A task runner and build tool.\n* [gunnery](https://github.com/gunnery/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\n* [Joblib](https://joblib.readthedocs.io/) - A set of tools to provide lightweight pipelining in Python.\n* [Plan](https://github.com/fengsp/plan) - Writing crontab file in Python like a charm.\n* [Prefect](https://github.com/PrefectHQ/prefect) - A modern workflow orchestration framework that makes it easy to build, schedule and monitor robust data pipelines.\n* [schedule](https://github.com/dbader/schedule) - Python job scheduling for humans.\n* [Spiff](https://github.com/knipknap/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\n* [TaskFlow](https://docs.openstack.org/developer/taskflow/) - A Python library that helps to make task execution easy, consistent and reliable.\n\n## Logging\n\n*Libraries for generating and working with logs.*\n\n* [logbook](http://logbook.readthedocs.io/en/stable/) - Logging replacement for Python.\n* [logging](https://docs.python.org/3/library/logging.html) - (Python standard library) Logging facility for Python.\n* [loguru](https://github.com/Delgan/loguru) - Library which aims to bring enjoyable logging in Python.\n* [sentry-python](https://github.com/getsentry/sentry-python) - Sentry SDK for Python.\n* [structlog](https://www.structlog.org/en/stable/) - Structured logging made easy.\n\n## Machine Learning\n\n*Libraries for Machine Learning. Also see [awesome-machine-learning](https://github.com/josephmisiti/awesome-machine-learning#python).*\n\n* [gym](https://github.com/openai/gym) - A toolkit for developing and comparing reinforcement learning algorithms.\n* [H2O](https://github.com/h2oai/h2o-3) - Open Source Fast Scalable Machine Learning Platform.\n* [Metrics](https://github.com/benhamner/Metrics) - Machine learning evaluation metrics.\n* [NuPIC](https://github.com/numenta/nupic) - Numenta Platform for Intelligent Computing.\n* [scikit-learn](http://scikit-learn.org/) - The most popular Python library for Machine Learning.\n* [Spark ML](http://spark.apache.org/docs/latest/ml-guide.html) - [Apache Spark](http://spark.apache.org/)'s scalable Machine Learning library.\n* [vowpal_porpoise](https://github.com/josephreisinger/vowpal_porpoise) - A lightweight Python wrapper for [Vowpal Wabbit](https://github.com/JohnLangford/vowpal_wabbit/).\n* [xgboost](https://github.com/dmlc/xgboost) - A scalable, portable, and distributed gradient boosting library.\n* [MindsDB](https://github.com/mindsdb/mindsdb) - MindsDB is an open source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries.\n\n## Microsoft Windows\n\n*Python programming on Microsoft Windows.*\n\n* [Python(x,y)](http://python-xy.github.io/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\n* [pythonlibs](http://www.lfd.uci.edu/~gohlke/pythonlibs/) - Unofficial Windows binaries for Python extension packages.\n* [PythonNet](https://github.com/pythonnet/pythonnet) - Python Integration with the .NET Common Language Runtime (CLR).\n* [PyWin32](https://github.com/mhammond/pywin32) - Python Extensions for Windows.\n* [WinPython](https://winpython.github.io/) - Portable development environment for Windows 7/8.\n\n## Miscellaneous\n\n*Useful libraries or tools that don't fit in the categories above.*\n\n* [blinker](https://github.com/jek/blinker) - A fast Python in-process signal/event dispatching system.\n* [boltons](https://github.com/mahmoud/boltons) - A set of pure-Python utilities.\n* [itsdangerous](https://github.com/pallets/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\n* [magenta](https://github.com/magenta/magenta) - A tool to generate music and art using artificial intelligence.\n* [pluginbase](https://github.com/mitsuhiko/pluginbase) - A simple but flexible plugin system for Python.\n* [tryton](http://www.tryton.org/) - A general purpose business framework.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n- General\n    * [gensim](https://github.com/RaRe-Technologies/gensim) - Topic Modeling for Humans.\n    * [langid.py](https://github.com/saffsd/langid.py) - Stand-alone language identification system.\n    * [nltk](http://www.nltk.org/) - A leading platform for building Python programs to work with human language data.\n    * [pattern](https://github.com/clips/pattern) - A web mining module.\n    * [polyglot](https://github.com/aboSamoor/polyglot) - Natural language pipeline supporting hundreds of languages.\n    * [pytext](https://github.com/facebookresearch/pytext) - A natural language modeling framework based on PyTorch.\n    * [PyTorch-NLP](https://github.com/PetrochukM/PyTorch-NLP) - A toolkit enabling rapid deep learning NLP prototyping for research.\n    * [spacy](https://spacy.io/) - A library for industrial-strength natural language processing in Python and Cython.\n    * [Stanza](https://github.com/stanfordnlp/stanza) - The Stanford NLP Group's official Python library, supporting 60+ languages.\n- Chinese\n    * [funNLP](https://github.com/fighting41love/funNLP) - A collection of tools and datasets for Chinese NLP.\n    * [jieba](https://github.com/fxsjy/jieba) - The most popular Chinese text segmentation library.\n    * [pkuseg-python](https://github.com/lancopku/pkuseg-python) - A toolkit for Chinese word segmentation in various domains.\n    * [snownlp](https://github.com/isnowfy/snownlp) - A library for processing Chinese text.\n\n## Network Virtualization\n\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\n\n* [mininet](https://github.com/mininet/mininet) - A popular network emulator and API written in Python.\n* [napalm](https://github.com/napalm-automation/napalm) - Cross-vendor API to manipulate network devices.\n* [pox](https://github.com/noxrepo/pox) - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\n## News Feed\n\n*Libraries for building user's activities.*\n\n* [django-activity-stream](https://github.com/justquick/django-activity-stream) - Generating generic activity streams from the actions on your site.\n* [Stream Framework](https://github.com/tschellenbach/Stream-Framework) - Building news feed and notification systems using Cassandra and Redis.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or data mapping techniques.*\n\n* Relational Databases\n    * [Django Models](https://docs.djangoproject.com/en/dev/topics/db/models/) - The Django ORM.\n    * [SQLAlchemy](https://www.sqlalchemy.org/) - The Python SQL Toolkit and Object Relational Mapper.\n        * [awesome-sqlalchemy](https://github.com/dahlia/awesome-sqlalchemy)\n    * [dataset](https://github.com/pudo/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\n    * [orator](https://github.com/sdispater/orator) -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\n    * [orm](https://github.com/encode/orm) - An async ORM.\n    * [peewee](https://github.com/coleifer/peewee) - A small, expressive ORM.\n    * [pony](https://github.com/ponyorm/pony/) - ORM that provides a generator-oriented interface to SQL.\n    * [pydal](https://github.com/web2py/pydal/) - A pure Python Database Abstraction Layer.\n* NoSQL Databases\n    * [hot-redis](https://github.com/stephenmcd/hot-redis) - Rich Python data types for Redis.\n    * [mongoengine](https://github.com/MongoEngine/mongoengine) - A Python Object-Document-Mapper for working with MongoDB.\n    * [PynamoDB](https://github.com/pynamodb/PynamoDB) - A Pythonic interface for [Amazon DynamoDB](https://aws.amazon.com/dynamodb/).\n    * [redisco](https://github.com/kiddouk/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\n\n## Package Management\n\n*Libraries for package and dependency management.*\n\n* [pip](https://pip.pypa.io/en/stable/) - The package installer for Python.\n    * [pip-tools](https://github.com/jazzband/pip-tools) - A set of tools to keep your pinned Python dependencies fresh.\n    * [PyPI](https://pypi.org/)\n* [conda](https://github.com/conda/conda/) - Cross-platform, Python-agnostic binary package manager.\n* [poetry](https://github.com/sdispater/poetry) - Python dependency management and packaging made easy.\n* [uv](https://github.com/astral-sh/uv) - An extremely fast Python package and project manager, written in Rust.\n\n## Package Repositories\n\n*Local PyPI repository server and proxies.*\n\n* [bandersnatch](https://github.com/pypa/bandersnatch/) - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\n* [devpi](https://github.com/devpi/devpi) - PyPI server and packaging/testing/release tool.\n* [localshop](https://github.com/jazzband/localshop) - Local PyPI server (custom packages and auto-mirroring of pypi).\n* [warehouse](https://github.com/pypa/warehouse) - Next generation Python Package Repository (PyPI).\n\n## Penetration Testing\n\n*Frameworks and tools for penetration testing.*\n\n* [fsociety](https://github.com/Manisso/fsociety) - A Penetration testing framework.\n* [setoolkit](https://github.com/trustedsec/social-engineer-toolkit) - A toolkit for social engineering.\n* [sqlmap](https://github.com/sqlmapproject/sqlmap) - Automatic SQL injection and database takeover tool.\n\n## Permissions\n\n*Libraries that allow or deny users access to data or functionality.*\n\n* [django-guardian](https://github.com/django-guardian/django-guardian) - Implementation of per object permissions for Django 1.2+\n* [django-rules](https://github.com/dfunckt/django-rules) - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\n## Processes\n\n*Libraries for starting and communicating with OS processes.*\n\n* [delegator.py](https://github.com/amitt001/delegator.py) - [Subprocesses](https://docs.python.org/3/library/subprocess.html) for Humans 2.0.\n* [sarge](https://sarge.readthedocs.io/en/latest/) - Yet another wrapper for subprocess.\n* [sh](https://github.com/amoffat/sh) - A full-fledged subprocess replacement for Python.\n\n## Recommender Systems\n\n*Libraries for building recommender systems.*\n\n* [annoy](https://github.com/spotify/annoy) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.\n* [fastFM](https://github.com/ibayer/fastFM) - A library for Factorization Machines.\n* [implicit](https://github.com/benfred/implicit) - A fast Python implementation of collaborative filtering for implicit datasets.\n* [libffm](https://github.com/guestwalk/libffm) - A library for Field-aware Factorization Machine (FFM).\n* [lightfm](https://github.com/lyst/lightfm) - A Python implementation of a number of popular recommendation algorithms.\n* [spotlight](https://github.com/maciejkula/spotlight) - Deep recommender models using PyTorch.\n* [Surprise](https://github.com/NicolasHug/Surprise) - A scikit for building and analyzing recommender systems.\n* [tensorrec](https://github.com/jfkirk/tensorrec) - A Recommendation Engine Framework in TensorFlow.\n\n## Refactoring\n\n*Refactoring tools and libraries for Python*\n\n * [Bicycle Repair Man](http://bicyclerepair.sourceforge.net/) - Bicycle Repair Man, a refactoring tool for Python.\n * [Bowler](https://pybowler.io/) - Safe code refactoring for modern Python.\n * [Rope](https://github.com/python-rope/rope) -  Rope is a python refactoring library.\n\n## RESTful API\n\n*Libraries for building RESTful APIs.*\n\n* Django\n    * [django-rest-framework](https://github.com/encode/django-rest-framework) - A powerful and flexible toolkit to build web APIs.\n    * [django-tastypie](https://github.com/django-tastypie/django-tastypie) - Creating delicious APIs for Django apps.\n* Flask\n    * [eve](https://github.com/pyeve/eve) - REST API framework powered by Flask, MongoDB and good intentions.\n    * [flask-api](https://github.com/flask-api/flask-api) - Browsable Web APIs for Flask.\n    * [flask-restful](https://github.com/flask-restful/flask-restful) - Quickly building REST APIs for Flask.\n* Pyramid\n    * [cornice](https://github.com/Cornices/cornice) - A RESTful framework for Pyramid.\n* Framework agnostic\n    * [falcon](https://github.com/falconry/falcon) - A high-performance framework for building cloud APIs and web app backends.\n    * [fastapi](https://github.com/tiangolo/fastapi) - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\n    * [hug](https://github.com/hugapi/hug) - A Python 3 framework for cleanly exposing APIs.\n    * [sandman2](https://github.com/jeffknupp/sandman2) - Automated REST APIs for existing database-driven systems.\n    * [sanic](https://github.com/sanic-org/sanic) - A Python 3.6+ web server and web framework that's written to go fast.\n\n## Robotics\n\n*Libraries for robotics.*\n\n* [PythonRobotics](https://github.com/AtsushiSakai/PythonRobotics) - This is a compilation of various robotics algorithms with visualizations.\n* [rospy](http://wiki.ros.org/rospy) - This is a library for ROS (Robot Operating System).\n\n## RPC Servers\n\n*RPC-compatible servers.*\n\n* [RPyC](https://github.com/tomerfiliba/rpyc) (Remote Python Call) - A transparent and symmetric RPC library for Python\n* [zeroRPC](https://github.com/0rpc/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http://zeromq.org/) and [MessagePack](http://msgpack.org/).\n\n## Science\n\n*Libraries for scientific computing. Also see [Python-for-Scientists](https://github.com/TomNicholas/Python-for-Scientists).*\n\n* [astropy](http://www.astropy.org/) - A community Python library for Astronomy.\n* [bcbio-nextgen](https://github.com/chapmanb/bcbio-nextgen) - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\n* [bccb](https://github.com/chapmanb/bcbb) - Collection of useful code related to biological analysis.\n* [Biopython](http://biopython.org/wiki/Main_Page) - Biopython is a set of freely available tools for biological computation.\n* [cclib](http://cclib.github.io/) - A library for parsing and interpreting the results of computational chemistry packages.\n* [Colour](http://colour-science.org/) - Implementing a comprehensive number of colour theory transformations and algorithms.\n* [Karate Club](https://github.com/benedekrozemberczki/karateclub) - Unsupervised machine learning toolbox for graph structured data.\n* [NetworkX](https://networkx.github.io/) - A high-productivity software for complex networks.\n* [NIPY](http://nipy.org) - A collection of neuroimaging toolkits.\n* [NumPy](http://www.numpy.org/) - A fundamental package for scientific computing with Python.\n* [ObsPy](https://github.com/obspy/obspy/wiki/) - A Python toolbox for seismology.\n* [Open Babel](https://open-babel.readthedocs.io/) - A chemical toolbox designed to speak the many languages of chemical data.\n* [PyDy](http://www.pydy.org/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\n* [PyMC](https://github.com/pymc-devs/pymc3) - Markov Chain Monte Carlo sampling toolkit.\n* [QuTiP](http://qutip.org/) - Quantum Toolbox in Python.\n* [RDKit](http://www.rdkit.org/) - Cheminformatics and Machine Learning Software.\n* [SciPy](https://www.scipy.org/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\n* [SimPy](https://gitlab.com/team-simpy/simpy) -  A process-based discrete-event simulation framework.\n* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modeling and econometrics in Python.\n* [SymPy](https://github.com/sympy/sympy) - A Python library for symbolic mathematics.\n* [Zipline](https://github.com/quantopian/zipline) - A Pythonic algorithmic trading library.\n\n## Search\n\n*Libraries and software for indexing and performing search queries on data.*\n\n* [django-haystack](https://github.com/django-haystack/django-haystack) - Modular search for Django.\n* [elasticsearch-dsl-py](https://github.com/elastic/elasticsearch-dsl-py) - The official high-level Python client for Elasticsearch.\n* [elasticsearch-py](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html) - The official low-level Python client for [Elasticsearch](https://www.elastic.co/products/elasticsearch).\n* [pysolr](https://github.com/django-haystack/pysolr) - A lightweight Python wrapper for [Apache Solr](https://lucene.apache.org/solr/).\n* [whoosh](http://whoosh.readthedocs.io/en/latest/) - A fast, pure Python search engine library.\n\n## Serialization\n\n*Libraries for serializing complex data types*\n\n* [marshmallow](https://github.com/marshmallow-code/marshmallow) - A lightweight library for converting complex objects to and from simple Python datatypes.\n* [pysimdjson](https://github.com/TkTech/pysimdjson) - A Python bindings for [simdjson](https://github.com/lemire/simdjson).\n* [python-rapidjson](https://github.com/python-rapidjson/python-rapidjson) - A Python wrapper around [RapidJSON](https://github.com/Tencent/rapidjson).\n* [ultrajson](https://github.com/esnme/ultrajson) - A fast JSON decoder and encoder written in C with Python bindings.\n\n## Serverless Frameworks\n\n*Frameworks for developing serverless Python code.*\n\n* [python-lambda](https://github.com/nficano/python-lambda) - A toolkit for developing and deploying Python code in AWS Lambda.\n* [Zappa](https://github.com/zappa/Zappa) - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\n## Shell\n\n*Shells based on Python.*\n\n* [xonsh](https://github.com/xonsh/xonsh/) - A Python-powered, cross-platform, Unix-gazing shell language and command prompt.\n\n## Specific Formats Processing\n\n*Libraries for parsing and manipulating specific text formats.*\n\n* General\n    * [tablib](https://github.com/jazzband/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n* Office\n    * [docxtpl](https://github.com/elapouya/python-docx-template) - Editing a docx document by jinja2 template\n    * [openpyxl](https://openpyxl.readthedocs.io/en/stable/) - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\n    * [pyexcel](https://github.com/pyexcel/pyexcel) - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\n    * [python-docx](https://github.com/python-openxml/python-docx) - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\n    * [python-pptx](https://github.com/scanny/python-pptx) - Python library for creating and updating PowerPoint (.pptx) files.\n    * [unoconv](https://github.com/unoconv/unoconv) - Convert between any document format supported by LibreOffice/OpenOffice.\n    * [XlsxWriter](https://github.com/jmcnamara/XlsxWriter) - A Python module for creating Excel .xlsx files.\n    * [xlwings](https://github.com/ZoomerAnalytics/xlwings) - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\n    * [xlwt](https://github.com/python-excel/xlwt) / [xlrd](https://github.com/python-excel/xlrd) - Writing and reading data and formatting information from Excel files.\n* PDF\n    * [pdfminer.six](https://github.com/pdfminer/pdfminer.six) - Pdfminer.six is a community maintained fork of the original PDFMiner.\n    * [PyPDF2](https://github.com/mstamy2/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\n    * [ReportLab](https://www.reportlab.com/opensource/) - Allowing Rapid creation of rich PDF documents.\n* Markdown\n    * [Mistune](https://github.com/lepture/mistune) - Fastest and full featured pure Python parsers of Markdown.\n    * [Python-Markdown](https://github.com/waylan/Python-Markdown) - A Python implementation of John Gruber’s Markdown.\n* YAML\n    * [PyYAML](http://pyyaml.org/) - YAML implementations for Python.\n* CSV\n    * [csvkit](https://github.com/wireservice/csvkit) - Utilities for converting to and working with CSV.\n* Archive\n    * [unp](https://github.com/mitsuhiko/unp) - A command line tool that can unpack archives easily.\n\n## Static Site Generator\n\n*Static site generator is a software that takes some text + templates as input and produces HTML files on the output.*\n\n* [lektor](https://github.com/lektor/lektor) - An easy to use static CMS and blog engine.\n* [mkdocs](https://github.com/mkdocs/mkdocs/) - Markdown friendly documentation generator.\n* [makesite](https://github.com/sunainapai/makesite) - Simple, lightweight, and magic-free static site/blog generator (< 130 lines).\n* [nikola](https://github.com/getnikola/nikola) - A static website and blog generator.\n* [pelican](https://github.com/getpelican/pelican) - Static site generator that supports Markdown and reST syntax.\n\n## Tagging\n\n*Libraries for tagging items.*\n\n* [django-taggit](https://github.com/jazzband/django-taggit) - Simple tagging for Django.\n\n## Task Queues\n\n*Libraries for working with task queues.*\n\n* [celery](https://docs.celeryproject.org/en/stable/) - An asynchronous task queue/job queue based on distributed message passing.\n* [dramatiq](https://github.com/Bogdanp/dramatiq) - A fast and reliable background task processing library for Python 3.\n* [huey](https://github.com/coleifer/huey) - Little multi-threaded task queue.\n* [mrq](https://github.com/pricingassistant/mrq) - A distributed worker task queue in Python using Redis & gevent.\n* [rq](https://github.com/rq/rq) - Simple job queues for Python.\n\n## Template Engine\n\n*Libraries and tools for templating and lexing.*\n\n* [Genshi](https://genshi.edgewall.org/) - Python templating toolkit for generation of web-aware output.\n* [Jinja2](https://github.com/pallets/jinja) - A modern and designer friendly templating language.\n* [Mako](http://www.makotemplates.org/) - Hyperfast and lightweight templating for the Python platform.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [hypothesis](https://github.com/HypothesisWorks/hypothesis) - Hypothesis is an advanced Quickcheck style property based testing library.\n    * [nose2](https://github.com/nose-devs/nose2) - The successor to `nose`, based on `unittest2.\n    * [pytest](https://docs.pytest.org/en/latest/) - A mature full-featured Python testing tool.\n    * [Robot Framework](https://github.com/robotframework/robotframework) - A generic test automation framework.\n    * [unittest](https://docs.python.org/3/library/unittest.html) - (Python standard library) Unit testing framework.\n* Test Runners\n    * [green](https://github.com/CleanCut/green) - A clean, colorful test runner.\n    * [mamba](http://nestorsalceda.github.io/mamba/) - The definitive testing tool for Python. Born under the banner of BDD.\n    * [tox](https://tox.readthedocs.io/en/latest/) - Auto builds and tests distributions in multiple Python versions\n* GUI / Web Testing\n    * [locust](https://github.com/locustio/locust) - Scalable user load testing tool written in Python.\n    * [PyAutoGUI](https://github.com/asweigart/pyautogui) - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\n    * [Schemathesis](https://github.com/kiwicom/schemathesis) - A tool for automatic property-based testing of web applications built with Open API / Swagger specifications.\n    * [Selenium](https://pypi.org/project/selenium/) - Python bindings for [Selenium](https://selenium.dev/) [WebDriver](https://selenium.dev/documentation/webdriver/).\n    * [sixpack](https://github.com/seatgeek/sixpack) - A language-agnostic A/B Testing framework.\n    * [splinter](https://github.com/cobrateam/splinter) - Open source tool for testing web applications.\n* Mock\n    * [doublex](https://pypi.org/project/doublex/) - Powerful test doubles framework for Python.\n    * [freezegun](https://github.com/spulec/freezegun) - Travel through time by mocking the datetime module.\n    * [httmock](https://github.com/patrys/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\n    * [httpretty](https://github.com/gabrielfalcao/HTTPretty) - HTTP request mock tool for Python.\n    * [mock](https://docs.python.org/3/library/unittest.mock.html) - (Python standard library) A mocking and patching library.\n    * [mocket](https://github.com/mindflayer/python-mocket) - A socket mock framework with gevent/asyncio/SSL support.\n    * [responses](https://github.com/getsentry/responses) - A utility library for mocking out the requests Python library.\n    * [VCR.py](https://github.com/kevin1024/vcrpy) - Record and replay HTTP interactions on your tests.\n* Object Factories\n    * [factory_boy](https://github.com/FactoryBoy/factory_boy) - A test fixtures replacement for Python.\n    * [mixer](https://github.com/klen/mixer) - Another fixtures replacement. Supports Django, Flask, SQLAlchemy, Peewee and etc.\n    * [model_mommy](https://github.com/vandersonmota/model_mommy) - Creating random fixtures for testing in Django.\n* Code Coverage\n    * [coverage](https://pypi.org/project/coverage/) - Code coverage measurement.\n* Fake Data\n    * [fake2db](https://github.com/emirozer/fake2db) - Fake database generator.\n    * [faker](https://github.com/joke2k/faker) - A Python package that generates fake data.\n    * [mimesis](https://github.com/lk-geimfari/mimesis) - is a Python library that help you generate fake data.\n    * [radar](https://pypi.org/project/radar/) - Generate random datetime / time.\n\n## Text Processing\n\n*Libraries for parsing and manipulating plain texts.*\n\n* General\n    * [chardet](https://github.com/chardet/chardet) - Python 2/3 compatible character encoding detector.\n    * [difflib](https://docs.python.org/3/library/difflib.html) - (Python standard library) Helpers for computing deltas.\n    * [ftfy](https://github.com/LuminosoInsight/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\n    * [fuzzywuzzy](https://github.com/seatgeek/fuzzywuzzy) - Fuzzy String Matching.\n    * [Levenshtein](https://github.com/ztane/python-Levenshtein/) - Fast computation of Levenshtein distance and string similarity.\n    * [pangu.py](https://github.com/vinta/pangu.py) - Paranoid text spacing.\n    * [pyfiglet](https://github.com/pwaller/pyfiglet) - An implementation of figlet written in Python.\n    * [pypinyin](https://github.com/mozillazg/python-pinyin) - Convert Chinese hanzi (漢字) to pinyin (拼音).\n    * [textdistance](https://github.com/orsinium/textdistance) - Compute distance between sequences with 30+ algorithms.\n    * [unidecode](https://pypi.org/project/Unidecode/) - ASCII transliterations of Unicode text.\n* Slugify\n    * [awesome-slugify](https://github.com/dimka665/awesome-slugify) - A Python slugify library that can preserve unicode.\n    * [python-slugify](https://github.com/un33k/python-slugify) - A Python slugify library that translates unicode to ASCII.\n    * [unicode-slugify](https://github.com/mozilla/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\n* Unique identifiers\n    * [hashids](https://github.com/davidaurelio/hashids-python) - Implementation of [hashids](http://hashids.org) in Python.\n    * [shortuuid](https://github.com/skorokithakis/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\n* Parser\n    * [ply](https://github.com/dabeaz/ply) - Implementation of lex and yacc parsing tools for Python.\n    * [pygments](http://pygments.org/) - A generic syntax highlighter.\n    * [pyparsing](https://github.com/pyparsing/pyparsing) - A general purpose framework for generating parsers.\n    * [python-nameparser](https://github.com/derek73/python-nameparser) - Parsing human names into their individual components.\n    * [python-phonenumbers](https://github.com/daviddrysdale/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\n    * [python-user-agents](https://github.com/selwin/python-user-agents) - Browser user agent parser.\n    * [sqlparse](https://github.com/andialbrecht/sqlparse) - A non-validating SQL parser.\n\n## Third-party APIs\n\n*Libraries for accessing third party services APIs. Also see [List of Python API Wrappers and Libraries](https://github.com/realpython/list-of-python-api-wrappers).*\n\n* [apache-libcloud](https://libcloud.apache.org/) - One Python library for all clouds.\n* [boto3](https://github.com/boto/boto3) - Python interface to Amazon Web Services.\n* [django-wordpress](https://github.com/istrategylabs/django-wordpress) - WordPress models and views for Django.\n* [facebook-sdk](https://github.com/mobolic/facebook-sdk) - Facebook Platform Python SDK.\n* [google-api-python-client](https://github.com/google/google-api-python-client) - Google APIs Client Library for Python.\n* [gspread](https://github.com/burnash/gspread) - Google Spreadsheets Python API.\n* [twython](https://github.com/ryanmcgrath/twython) - A Python wrapper for the Twitter API.\n\n## URL Manipulation\n\n*Libraries for parsing URLs.*\n\n* [furl](https://github.com/gruns/furl) - A small Python library that makes parsing and manipulating URLs easy.\n* [purl](https://github.com/codeinthehole/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\n* [pyshorteners](https://github.com/ellisonleao/pyshorteners) - A pure Python URL shortening lib.\n* [webargs](https://github.com/marshmallow-code/webargs) - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\n## Video\n\n*Libraries for manipulating video and GIFs.*\n\n* [moviepy](https://zulko.github.io/moviepy/) - A module for script-based movie editing with many formats, including animated GIFs.\n* [scikit-video](https://github.com/aizvorski/scikit-video) - Video processing routines for SciPy.\n* [vidgear](https://github.com/abhiTronix/vidgear) - Most Powerful multi-threaded Video Processing framework.\n\n## Web Asset Management\n\n*Tools for managing, compressing and minifying website assets.*\n\n* [django-compressor](https://github.com/django-compressor/django-compressor) - Compresses linked and inline JavaScript or CSS into a single cached file.\n* [django-pipeline](https://github.com/jazzband/django-pipeline) - An asset packaging library for Django.\n* [django-storages](https://github.com/jschneier/django-storages) - A collection of custom storage back ends for Django.\n* [fanstatic](http://www.fanstatic.org/en/latest/) - Packages, optimizes, and serves static file dependencies as Python packages.\n* [fileconveyor](http://wimleers.com/fileconveyor) - A daemon to detect and sync files to CDNs, S3 and FTP.\n* [flask-assets](https://github.com/miracle2k/flask-assets) - Helps you integrate webassets into your Flask app.\n* [webassets](https://github.com/miracle2k/webassets) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\n## Web Content Extracting\n\n*Libraries for extracting web contents.*\n\n* [html2text](https://github.com/Alir3z4/html2text) - Convert HTML to Markdown-formatted text.\n* [lassie](https://github.com/michaelhelmick/lassie) - Web Content Retrieval for Humans.\n* [micawber](https://github.com/coleifer/micawber) - A small library for extracting rich content from URLs.\n* [newspaper](https://github.com/codelucas/newspaper) - News extraction, article extraction and content curation in Python.\n* [python-readability](https://github.com/buriy/python-readability) - Fast Python port of arc90's readability tool.\n* [requests-html](https://github.com/psf/requests-html) - Pythonic HTML Parsing for Humans.\n* [sumy](https://github.com/miso-belica/sumy) - A module for automatic summarization of text documents and HTML pages.\n* [textract](https://github.com/deanmalmgren/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\n* [toapi](https://github.com/gaojiuli/toapi) - Every web site provides APIs.\n\n## Web Crawling\n\n*Libraries to automate web scraping.*\n\n* [feedparser](https://github.com/kurtmckee/feedparser) - Universal feed parser.\n* [grab](https://github.com/lorien/grab) - Site scraping framework.\n* [mechanicalsoup](https://github.com/MechanicalSoup/MechanicalSoup) - A Python library for automating interaction with websites.\n* [scrapy](https://github.com/scrapy/scrapy) - A fast high-level screen scraping and web crawling framework.\n\n## Web Frameworks\n\n*Traditional full stack web frameworks. Also see [RESTful API](https://github.com/vinta/awesome-python#restful-api).*\n\n* Synchronous\n    * [django](https://github.com/django/django) - The most popular web framework in Python.\n        * [awesome-django](https://github.com/shahraizali/awesome-django)\n        * [awesome-django](https://github.com/wsvincent/awesome-django)\n    * [flask](https://github.com/pallets/flask) - A microframework for Python.\n        * [awesome-flask](https://github.com/humiaozuzu/awesome-flask)\n    * [pyramid](https://pylonsproject.org/) - A small, fast, down-to-earth, open source Python web framework.\n        * [awesome-pyramid](https://github.com/uralbash/awesome-pyramid)\n    * [masonite](https://github.com/MasoniteFramework/masonite) - The modern and developer centric Python web framework.\n* Asynchronous\n    * [tornado](https://github.com/tornadoweb/tornado) - A web framework and asynchronous networking library.\n\n## WebSocket\n\n*Libraries for working with WebSocket.*\n\n* [autobahn-python](https://github.com/crossbario/autobahn-python) - WebSocket & WAMP for Python on Twisted and [asyncio](https://docs.python.org/3/library/asyncio.html).\n* [channels](https://github.com/django/channels) - Developer-friendly asynchrony for Django.\n* [websockets](https://github.com/aaugustin/websockets) - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\n## WSGI Servers\n\n*WSGI-compatible web servers.*\n\n* [gunicorn](https://github.com/benoitc/gunicorn) - Pre-forked, ported from Ruby's Unicorn project.\n* [uwsgi](https://uwsgi-docs.readthedocs.io/en/latest/) - A project aims at developing a full stack for building hosting services, written in C.\n* [waitress](https://github.com/Pylons/waitress) - Multi-threaded, powers Pyramid.\n* [werkzeug](https://github.com/pallets/werkzeug) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\n# Resources\n\nWhere to discover learning resources or new Python libraries.\n\n## Newsletters\n\n* [Awesome Python Newsletter](http://python.libhunt.com/newsletter)\n* [Pycoder's Weekly](https://pycoders.com/)\n* [Python Tricks](https://realpython.com/python-tricks/)\n* [Python Weekly](https://www.pythonweekly.com/)\n\n## Podcasts\n\n* [Django Chat](https://djangochat.com/)\n* [Python Bytes](https://pythonbytes.fm)\n* [Talk Python To Me](https://talkpython.fm/)\n* [Python Test](https://podcast.pythontest.com/)\n* [The Real Python Podcast](https://realpython.com/podcasts/rpp/)\n\n# Contributing\n\nYour contributions are always welcome! Please take a look at the [contribution guidelines](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md) first.\n\n- - -\n\nIf you have any question about this opinionated list, do not hesitate to contact me [@VintaChen](https://twitter.com/VintaChen) on Twitter or open an issue on GitHub.\n\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/vinta/awesome-python",
        "repo_name": "awesome-python",
        "owner_name": "vinta",
        "theme_id": "aa45a33a6e82be00288927cc6d32d0eb",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451222",
        "keywords": [
          "opinionated",
          "list",
          "awesome",
          "python",
          "frameworks",
          "libraries",
          "software",
          "resources"
        ]
      },
      {
        "full_name": "awesome-selfhosted/awesome-selfhosted",
        "description": "A list of Free Software network services and web applications which can be hosted on your own servers",
        "stars": 251207,
        "files": [],
        "readme": "# Awesome-Selfhosted\n\n[![Awesome](_static/awesome.png)](https://github.com/sindresorhus/awesome) [![](https://github.com/awesome-selfhosted/awesome-selfhosted-data/actions/workflows/check-dead-links.yml/badge.svg)](https://github.com/awesome-selfhosted/awesome-selfhosted-data/issues/1) [![](https://github.com/awesome-selfhosted/awesome-selfhosted-data/actions/workflows/check-unmaintained-projects.yml/badge.svg)](https://github.com/awesome-selfhosted/awesome-selfhosted-data/issues/1) [![](https://img.shields.io/liberapay/goal/awesome-selfhosted?logo=liberapay)](https://liberapay.com/awesome-selfhosted/)\n\nSelf-hosting is the practice of hosting and managing applications on your own server(s) instead of consuming from [SaaSS](https://www.gnu.org/philosophy/who-does-that-server-really-serve.html) providers.\n\nThis is a list of [Free](https://en.wikipedia.org/wiki/Free_software) Software [network services](https://en.wikipedia.org/wiki/Network_service) and [web applications](https://en.wikipedia.org/wiki/Web_application) which can be hosted on your own server(s). Non-Free software is listed on the [Non-Free](https://github.com/awesome-selfhosted/awesome-selfhosted/blob/master/non-free.md) page.\n\n**[HTML version](https://awesome-selfhosted.net/) (recommended)**, [Markdown version](https://github.com/awesome-selfhosted/awesome-selfhosted) (legacy).\n\nSee [Contributing](#contributing).\n\n--------------------\n\n## Table of contents\n\n- [Software](#software)\n  - [Analytics](#analytics)\n  - [Archiving and Digital Preservation (DP)](#archiving-and-digital-preservation-dp)\n  - [Automation](#automation)\n  - [Backup](#backup)\n  - [Blogging Platforms](#blogging-platforms)\n  - [Booking and Scheduling](#booking-and-scheduling)\n  - [Bookmarks and Link Sharing](#bookmarks-and-link-sharing)\n  - [Calendar & Contacts](#calendar--contacts)\n  - [Communication - Custom Communication Systems](#communication---custom-communication-systems)\n  - [Communication - Email - Complete Solutions](#communication---email---complete-solutions)\n  - [Communication - Email - Mail Delivery Agents](#communication---email---mail-delivery-agents)\n  - [Communication - Email - Mail Transfer Agents](#communication---email---mail-transfer-agents)\n  - [Communication - Email - Mailing Lists and Newsletters](#communication---email---mailing-lists-and-newsletters)\n  - [Communication - Email - Webmail Clients](#communication---email---webmail-clients)\n  - [Communication - IRC](#communication---irc)\n  - [Communication - SIP](#communication---sip)\n  - [Communication - Social Networks and Forums](#communication---social-networks-and-forums)\n  - [Communication - Video Conferencing](#communication---video-conferencing)\n  - [Communication - XMPP - Servers](#communication---xmpp---servers)\n  - [Communication - XMPP - Web Clients](#communication---xmpp---web-clients)\n  - [Community-Supported Agriculture (CSA)](#community-supported-agriculture-csa)\n  - [Conference Management](#conference-management)\n  - [Content Management Systems (CMS)](#content-management-systems-cms)\n  - [Customer Relationship Management (CRM)](#customer-relationship-management-crm)\n  - [Database Management](#database-management)\n  - [DNS](#dns)\n  - [Document Management](#document-management)\n  - [Document Management - E-books](#document-management---e-books)\n  - [Document Management - Institutional Repository and Digital Library Software](#document-management---institutional-repository-and-digital-library-software)\n  - [Document Management - Integrated Library Systems (ILS)](#document-management---integrated-library-systems-ils)\n  - [E-commerce](#e-commerce)\n  - [Federated Identity & Authentication](#federated-identity--authentication)\n  - [Feed Readers](#feed-readers)\n  - [File Transfer & Synchronization](#file-transfer--synchronization)\n  - [File Transfer - Distributed Filesystems](#file-transfer---distributed-filesystems)\n  - [File Transfer - Object Storage & File Servers](#file-transfer---object-storage--file-servers)\n  - [File Transfer - Peer-to-peer Filesharing](#file-transfer---peer-to-peer-filesharing)\n  - [File Transfer - Single-click & Drag-n-drop Upload](#file-transfer---single-click--drag-n-drop-upload)\n  - [File Transfer - Web-based File Managers](#file-transfer---web-based-file-managers)\n  - [Games](#games)\n  - [Games - Administrative Utilities & Control Panels](#games---administrative-utilities--control-panels)\n  - [Genealogy](#genealogy)\n  - [Generative Artificial Intelligence (GenAI)](#generative-artificial-intelligence-genai)\n  - [Groupware](#groupware)\n  - [Health and Fitness](#health-and-fitness)\n  - [Human Resources Management (HRM)](#human-resources-management-hrm)\n  - [Identity Management](#identity-management)\n  - [Internet of Things (IoT)](#internet-of-things-iot)\n  - [Inventory Management](#inventory-management)\n  - [Knowledge Management Tools](#knowledge-management-tools)\n  - [Learning and Courses](#learning-and-courses)\n  - [Manufacturing](#manufacturing)\n  - [Maps and Global Positioning System (GPS)](#maps-and-global-positioning-system-gps)\n  - [Media Management](#media-management)\n  - [Media Streaming](#media-streaming)\n  - [Media Streaming - Audio Streaming](#media-streaming---audio-streaming)\n  - [Media Streaming - Multimedia Streaming](#media-streaming---multimedia-streaming)\n  - [Media Streaming - Video Streaming](#media-streaming---video-streaming)\n  - [Miscellaneous](#miscellaneous)\n  - [Money, Budgeting & Management](#money-budgeting--management)\n  - [Monitoring](#monitoring)\n  - [Note-taking & Editors](#note-taking--editors)\n  - [Office Suites](#office-suites)\n  - [Password Managers](#password-managers)\n  - [Pastebins](#pastebins)\n  - [Personal Dashboards](#personal-dashboards)\n  - [Photo Galleries](#photo-galleries)\n  - [Polls and Events](#polls-and-events)\n  - [Proxy](#proxy)\n  - [Recipe Management](#recipe-management)\n  - [Remote Access](#remote-access)\n  - [Resource Planning](#resource-planning)\n  - [Search Engines](#search-engines)\n  - [Self-hosting Solutions](#self-hosting-solutions)\n  - [Software Development](#software-development)\n  - [Software Development - API Management](#software-development---api-management)\n  - [Software Development - Continuous Integration & Deployment](#software-development---continuous-integration--deployment)\n  - [Software Development - FaaS & Serverless](#software-development---faas--serverless)\n  - [Software Development - Feature Toggle](#software-development---feature-toggle)\n  - [Software Development - IDE & Tools](#software-development---ide--tools)\n  - [Software Development - Localization](#software-development---localization)\n  - [Software Development - Low Code](#software-development---low-code)\n  - [Software Development - Project Management](#software-development---project-management)\n  - [Software Development - Testing](#software-development---testing)\n  - [Static Site Generators](#static-site-generators)\n  - [Status / Uptime pages](#status--uptime-pages)\n  - [Task Management & To-do Lists](#task-management--to-do-lists)\n  - [Ticketing](#ticketing)\n  - [Time Tracking](#time-tracking)\n  - [URL Shorteners](#url-shorteners)\n  - [Video Surveillance](#video-surveillance)\n  - [VPN](#vpn)\n  - [Web Servers](#web-servers)\n  - [Wikis](#wikis)\n- [List of Licenses](#list-of-licenses)\n- [Anti-features](#anti-features)\n- [External Links](#external-links)\n- [Contributing](#contributing)\n- [License](#license)\n\n--------------------\n\n## Software\n\n### Analytics\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Analytics](https://en.wikipedia.org/wiki/Analytics) is the systematic computational analysis of data or statistics. It is used for the discovery, interpretation, and communication of meaningful patterns in data.\n\n_Related: [Database Management](#database-management), [Personal Dashboards](#personal-dashboards)_\n\n- [Aptabase](https://aptabase.com/) - Privacy first and simple analytics for mobile and desktop apps. ([Source Code](https://github.com/aptabase/aptabase)) `AGPL-3.0` `Docker`\n- [AWStats](http://www.awstats.org/) - Generate statistics from web, streaming, ftp or mail server logfiles. ([Demo](https://www.awstats.org/#DEMO), [Source Code](https://github.com/eldy/awstats)) `GPL-3.0` `Perl`\n- [Countly Community Edition](https://count.ly) - Real time mobile and web analytics, crash reporting and push notifications platform. ([Source Code](https://github.com/Countly/countly-server)) `AGPL-3.0` `Nodejs/Docker`\n- [Daily Stars Explorer](https://emanuelef.github.io/daily-stars-explorer) `⚠` - Track GitHub repo trends with daily star insights to see growth and community interest over time. ([Demo](https://emanuelef.github.io/daily-stars-explorer), [Source Code](https://github.com/emanuelef/daily-stars-explorer)) `MIT` `Go/Nodejs/Docker`\n- [Druid](https://druid.apache.org) - Distributed, column-oriented, real-time analytics data store. ([Source Code](https://github.com/apache/druid)) `Apache-2.0` `Java/Docker`\n- [EDA](https://github.com/jortilles/EDA) - Web application for data analysis and visualization. `AGPL-3.0` `Nodejs/Docker`\n- [ghstats](https://github.com/vladkens/ghstats) `⚠` - Dashboard for tracking GitHub repos traffic history longer than 14 days. `MIT` `Docker`\n- [GoAccess](http://goaccess.io/) - Real-time web log analyzer and interactive viewer that runs in a terminal. ([Source Code](https://github.com/allinurl/goaccess)) `GPL-2.0` `C`\n- [GoatCounter](https://www.goatcounter.com) - Easy web statistics without tracking of personal data. ([Source Code](https://github.com/arp242/goatcounter)) `EUPL-1.2` `Go`\n- [Litlyx](https://litlyx.com) - All-in-one Analytics Solution. Setup in 30 seconds. Display all your data on an AI-powered dashboard. Fully self-hostable and GDPR compliant. ([Source Code](https://github.com/Litlyx/litlyx)) `Apache-2.0` `Docker`\n- [Liwan](https://liwan.dev/) - Privacy-first web analytics. ([Demo](https://demo.liwan.dev/p/liwan.dev), [Source Code](https://github.com/explodingcamera/liwan)) `Apache-2.0` `Rust/Docker`\n- [Matomo](https://matomo.org/) - Web analytics that protects your data and your customers' privacy (alternative to Google Analytics). ([Source Code](https://github.com/matomo-org/matomo)) `GPL-3.0` `PHP`\n- [Medama Analytics](https://oss.medama.io) - Privacy-first website analytics. Tiny, simple, and cookie-free. ([Demo](https://demo.medama.io), [Source Code](https://github.com/medama-io/medama)) `Apache-2.0/MIT` `Docker/Go`\n- [Metabase](https://metabase.com/) - Easy way for everyone in your company to ask questions and learn from data. ([Source Code](https://github.com/metabase/metabase)) `AGPL-3.0` `Java/Docker`\n- [Middleware](https://middlewarehq.com/) - Tool designed to help engineering leaders measure and analyze the effectiveness of their teams using the DORA metrics. ([Source Code](https://github.com/middlewarehq/middleware)) `Apache-2.0` `Docker/Python/Nodejs`\n- [Mixpost](https://mixpost.app/) - Social media management software to easily create, schedule, publish, and manage social media content in one place (alternative to Hootsuite and Buffer). ([Source Code](https://github.com/inovector/MixpostApp)) `MIT` `PHP/Docker`\n- [Netron](https://netron.app/) - Visualizer for neural network and machine learning models. ([Source Code](https://github.com/lutzroeder/netron)) `MIT` `Python/Nodejs`\n- [Offen](https://www.offen.dev/) - Fair, lightweight and open web analytics tool. Gain insights while your users have full access to their data. ([Demo](https://www.offen.dev/try-demo/), [Source Code](https://github.com/offen/offen)) `Apache-2.0` `Go/Docker`\n- [Plausible Analytics](https://plausible.io/) - Simple, lightweight (< 1 KB) and privacy-friendly web analytics. ([Source Code](https://github.com/plausible/analytics/)) `AGPL-3.0` `Elixir`\n- [PostHog](https://posthog.com) - Product analytics, session recording, feature flagging and a/b testing that you can self-host (alternative to Mixpanel, Amplitude, Heap, HotJar, Optimizely). ([Source Code](https://github.com/posthog/posthog)) `MIT` `Python`\n- [Postiz](https://postiz.com) `⚠` - Schedule posts, track the performance of your content, and manage all your social media accounts in one place (Alternative to Buffer, Hootsuite, Sprout Social). ([Source Code](https://github.com/gitroomhq/postiz-app)) `AGPL-3.0` `Docker`\n- [Prisme Analytics](https://www.prismeanalytics.com) - Privacy-focused and progressive analytics service based on Grafana. ([Source Code](https://github.com/prismelabs/analytics)) `AGPL-3.0/MIT` `Docker`\n- [Redash](http://redash.io) - Connect and query your data sources, build dashboards to visualize data and share them with your company. ([Source Code](https://github.com/getredash/redash)) `BSD-2-Clause` `Docker`\n- [Rybbit](https://rybbit.io) - Web and products analytics that is easy to setup and more intuitive (alternative to Google Analytics). ([Demo](https://demo.rybbit.io/21/), [Source Code](https://github.com/rybbit-io/rybbit)) `AGPL-3.0` `Docker`\n- [Shynet](https://github.com/milesmcc/shynet) - Modern, privacy-friendly, and detailed web analytics that works without cookies or JS. `Apache-2.0` `Python/Docker`\n- [Socioboard](https://github.com/socioboard/Socioboard-5.0) `⚠` - Social media management, analytics, and reporting platform supporting nine social media networks out-of-the-box. `GPL-3.0` `Nodejs`\n- [Statistics for Strava](https://github.com/robiningelbrecht/statistics-for-strava) `⚠` - Statistics dashboard generated from Strava data. ([Demo](https://statistics-for-strava.robiningelbrecht.be/)) `AGPL-3.0` `Docker`\n- [Superset](http://superset.apache.org/) - Modern data exploration and visualization platform. ([Source Code](https://github.com/apache/superset)) `Apache-2.0` `Python`\n- [Swetrix](https://swetrix.com/) - Ultimate, open-source web analytics to satisfy all your needs. ([Demo](https://swetrix.com/projects/STEzHcB1rALV), [Source Code](https://github.com/Swetrix/selfhosting)) `AGPL-3.0` `Docker`\n- [Umami](https://umami.is/) - Simple, fast, privacy-focused alternative to Google Analytics. ([Demo](https://analytics.umami.is/share/LGazGOecbDtaIwDr/umami.is), [Source Code](https://github.com/umami-software/umami)) `MIT` `Nodejs/Docker`\n- [Vince](https://www.vinceanalytics.com/) - Web analytics and dashboard (alternative to Google Analytics). ([Demo](https://demo.vinceanalytics.com/v1/share/vinceanalytics.com?auth=Ls9tV4pzqOn7BJ7-&demo=true), [Source Code](https://github.com/vinceanalytics/vince)) `AGPL-3.0` `Go/Docker/K8S/deb`\n\n\n### Archiving and Digital Preservation (DP)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nDigital [archiving](https://en.wikipedia.org/wiki/Archival_science) and [preservation](https://en.wikipedia.org/wiki/Digital_preservation) software.\n\n_Related: [Content Management Systems (CMS)](#content-management-systems-cms)_\n\n_See also: [awesome-web-archiving](https://github.com/iipc/awesome-web-archiving)_\n\n- [ArchiveBox](https://archivebox.io/) - Create HTML & screenshot archives of sites from your bookmarks, browsing history, RSS feeds, or other sources (alternative to Wayback Machine). ([Demo](https://demo.archivebox.io/), [Source Code](https://github.com/ArchiveBox/ArchiveBox)) `MIT` `Python/Docker`\n- [ArchivesSpace](https://archivesspace.org/) - Archives information management application for managing and providing Web access to archives, manuscripts and digital objects. ([Demo](https://archivesspace.org/application/sandbox), [Source Code](https://github.com/archivesspace/archivesspace)) `ECL-2.0` `Ruby`\n- [bitmagnet](https://bitmagnet.io) - BitTorrent indexer, DHT crawler, content classifier and torrent search engine with web UI, GraphQL API and Servarr stack integration. ([Source Code](https://github.com/bitmagnet-io/bitmagnet)) `MIT` `Go/Docker`\n- [CKAN](https://ckan.org) - Make open data websites. ([Source Code](https://github.com/ckan/ckan)) `AGPL-3.0` `Python`\n- [Collective Access - Providence](https://collectiveaccess.org/) - Highly configurable Web-based framework for management, description, and discovery of digital and physical collections supporting a variety of metadata standards, data types, and media formats. ([Source Code](https://github.com/collectiveaccess/providence)) `GPL-3.0` `PHP`\n- [Ganymede](https://github.com/Zibbp/ganymede) `⚠` - Twitch VOD and live stream archiving platform. Includes a rendered chat for each archive. `GPL-3.0` `Docker`\n- [Omeka S](https://omeka.org/s/) - Next-generation web publishing platform for institutions interested in connecting digital cultural heritage collections with other resources online. ([Source Code](https://github.com/omeka/omeka-s)) `GPL-3.0` `Nodejs`\n- [Wallabag](https://www.wallabag.org) - Wallabag, formerly Poche, is a web application allowing you to save articles to read them later with improved readability. ([Source Code](https://github.com/wallabag/wallabag)) `MIT` `PHP`\n- [Wayback](https://github.com/wabarc/wayback) - A self-hosted toolkit for archiving webpages to the Internet Archive, archive.today, IPFS, and local file systems. `GPL-3.0` `Go`\n- [Webarchive](https://github.com/derfenix/webarchive) - Lightweight self-hosted _wayback machine_ that creates HTML and PDF files from your bookmarks. `BSD-3-Clause` `Go`\n\n\n### Automation\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Automation](https://en.wikipedia.org/wiki/Automation) software designed to reduce human intervention in processes.\n\n_Related: [Internet of Things (IoT)](#internet-of-things-iot), [Software Development - Continuous Integration & Deployment](#software-development---continuous-integration--deployment), [Media Management](#media-management)_\n\n- [Activepieces](https://www.activepieces.com) - No-code business automation tool like Zapier or Tray. For example, you can send a Slack notification for each new Trello card. ([Source Code](https://github.com/activepieces/activepieces)) `MIT` `Docker`\n- [Apache Airflow](https://airflow.apache.org/) - Platform to programmatically author, schedule, and monitor workflows. ([Source Code](https://github.com/apache/airflow/)) `Apache-2.0` `Python/Docker`\n- [Automatisch](https://automatisch.io) - Business automation tool that lets you connect different services like Twitter, Slack, and more to automate your business processes (alternative to Zapier). ([Source Code](https://github.com/automatisch/automatisch)) `AGPL-3.0` `Docker`\n- [BookBounty](https://github.com/TheWicklowWolf/BookBounty) `⚠` - Retrieve missing Readarr books from Library Genesis. `MPL-2.0` `Docker`\n- [changedetection.io](https://changedetection.io/) - Stay up-to-date with web-site content changes. ([Source Code](https://github.com/dgtlmoon/changedetection.io)) `Apache-2.0` `Python/Docker`\n- [ChiefOnboarding](https://chiefonboarding.com) - Employee onboarding platform that allows you to provision user accounts and create sequences with todo items, resources, text/email/Slack messages, and more! Available as a web portal and Slack bot. ([Source Code](https://github.com/chiefonboarding/ChiefOnboarding)) `AGPL-3.0` `Docker`\n- [Dagu](https://docs.dagu.cloud/) - Powerful Cron alternative with a Web UI. It allows you to define dependencies between commands as a Directed Acyclic Graph (DAG) in a declarative YAML format. ([Source Code](https://github.com/dagu-org/dagu)) `GPL-3.0` `Go/Docker`\n- [Discount Bandit](https://discount-bandit.cybrarist.com/) `⚠` - Track pricing, stock status of products across multiple stores such as Amazon, Ebay, Walmart, etc. ([Source Code](https://github.com/Cybrarist/Discount-Bandit)) `GPL-3.0` `PHP/Docker`\n- [Dittofeed](https://www.dittofeed.com) - Omni-channel customer engagement and messaging automation platform (alternative to Braze, Customer.io, Iterable). ([Demo](https://demo.dittofeed.com/dashboard/journeys), [Source Code](https://github.com/dittofeed/dittofeed)) `MIT` `Docker`\n- [feedmixer](https://github.com/cristoper/feedmixer) - Micro web service which takes a list of feed URLs and returns a new feed consisting of the most recent n entries from each given feed (returns Atom, RSS, or JSON). ([Demo](https://mretc.net/feedmixer/json?f=https://hnrss.org/newest&f=https://americancynic.net/atom.xml&n=1)) `WTFPL` `Python`\n- [Github Ntfy](https://github.com/BreizhHardware/ntfy_alerts) `⚠` - Push notifications to NTFY, Gotify, Discord or Slack when a new release is available on Docker Hub or Github. ([Clients](https://github.com/binwiederhier/ntfy)) `GPL-3.0` `Rust/Docker`\n- [HandBrake Web](https://github.com/TheNickOfTime/handbrake-web) - Use one or more instances of HandBrake video transcoder on a headless device via a web interface. `AGPL-3.0` `Docker`\n- [Healthchecks](https://healthchecks.io/) - Listen for pings and sends alerts when pings are late. ([Source Code](https://github.com/healthchecks/healthchecks)) `BSD-3-Clause` `Python/Docker`\n- [Huginn](https://github.com/huginn/huginn) - Build agents that monitor and act on your behalf. `MIT` `Ruby`\n- [Kestra](https://kestra.io) - Event-driven, language-agnostic platform to create, schedule, and monitor workflows. In code. Coordinate data pipelines and tasks such as ETL and ELT. ([Source Code](https://github.com/kestra-io/kestra)) `Apache-2.0` `Docker`\n- [Kibitzr](https://kibitzr.github.io) - Lightweight personal web assistant with powerful integrations. ([Source Code](https://github.com/kibitzr/kibitzr)) `MIT` `Python`\n- [LazyLibrarian](https://gitlab.com/LazyLibrarian/LazyLibrarian) `⚠` - Follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads, Librarything and optionally GoogleBooks as sources for author info and book info. `GPL-3.0` `Python`\n- [Leon](https://getleon.ai) - Personal assistant who can live on your server. ([Source Code](https://github.com/leon-ai/leon)) `MIT` `Nodejs`\n- [Matchering](https://github.com/sergree/matchering) - Automated music mastering (alternative to LANDR, eMastered and MajorDecibel). `GPL-3.0` `Docker`\n- [Mylar3](https://mylarcomics.com/) - Automated Comic Book (cbr/cbz) downloader program for use with NZB and torrents. ([Source Code](https://github.com/mylar3/mylar3)) `GPL-3.0` `Python/Docker`\n- [OliveTin](https://www.olivetin.app/) - Web interface for running Linux shell commands. ([Source Code](https://github.com/OliveTin/OliveTin)) `AGPL-3.0` `Go`\n- [pyLoad](https://pyload.net/) - Lightweight, customizable and remotely manageable downloader for 1-click-hosting sites like rapidshare.com or uploaded.to. ([Source Code](https://github.com/pyload/pyload)) `AGPL-3.0` `Python`\n- [StackStorm](https://stackstorm.com) - StackStorm (aka _IFTTT for Ops_) is event-driven automation for auto-remediation, security responses, troubleshooting, deployments, and more. Includes rules engine, workflow, 160 integration packs with 6000+ actions and ChatOps. ([Source Code](https://github.com/StackStorm/st2)) `Apache-2.0` `Python`\n- [µTask](https://github.com/ovh/utask) - Automation engine that models and executes business processes declared in yaml. `BSD-3-Clause` `Go/Docker`\n\n\n### Backup\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Backup](https://en.wikipedia.org/wiki/Backup) software.\n\n**Please visit [awesome-sysadmin/Backups](https://github.com/awesome-foss/awesome-sysadmin#backups)**\n\n\n\n### Blogging Platforms\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [blog](https://en.wikipedia.org/wiki/Blog) is a discussion or informational website consisting of discrete, diary-style text entries (posts).\n\n_Related: [Static Site Generators](#static-site-generators), [Content Management Systems (CMS)](#content-management-systems-cms)_\n\n_See also: [WeblogMatrix](https://www.weblogmatrix.org/)_\n\n- [Antville](https://antville.org) - Free, open source project aimed at the development of a high performance, feature rich weblog hosting software. ([Source Code](https://github.com/antville/antville)) `Apache-2.0` `Javascript`\n- [Castopod](https://castopod.org) - Podcast management hosting platform that includes the latest podcast 2.0 standards, an automated Fediverse feed, analytics, an embeddable player, and more. ([Source Code](https://code.castopod.org/adaures/castopod)) `AGPL-3.0` `PHP/Docker`\n- [Chyrp Lite](https://chyrplite.net) - Extra-awesome, extra-lightweight blog engine. ([Source Code](https://github.com/xenocrat/chyrp-lite)) `BSD-3-Clause` `PHP`\n- [Dotclear](https://git.dotclear.org/dev/dotclear) - Take control over your blog. `GPL-2.0` `PHP`\n- [FlatPress](https://flatpress.org/) - A lightweight, easy-to-set-up flat-file blogging engine. ([Source Code](https://github.com/flatpressblog/flatpress)) `GPL-2.0` `PHP`\n- [Ghost](https://ghost.org/) - Just a blogging platform. ([Source Code](https://github.com/TryGhost/Ghost)) `MIT` `Nodejs`\n- [Haven](https://havenweb.org/) - Private blogging system with markdown editing and built in RSS reader. ([Demo](https://havenweb.org/demo.html), [Source Code](https://github.com/havenweb/haven)) `MIT` `Ruby`\n- [HTMLy](https://www.htmly.com/) - Databaseless PHP blogging platform. A flat-file CMS that allows you to create a fast, secure, and powerful website or blog in seconds. ([Demo](http://demo.htmly.com/), [Source Code](https://github.com/danpros/htmly)) `GPL-2.0` `PHP`\n- [Known](https://withknown.com/) - Collaborative social publishing platform. ([Source Code](https://github.com/idno/known)) `Apache-2.0` `PHP`\n- [Mataroa](https://mataroa.blog/) - Naked blogging platform for minimalists. ([Source Code](https://github.com/mataroablog/mataroa)) `MIT` `Python`\n- [PluXml](https://pluxml.org) - XML-based blog/CMS platform. ([Source Code](https://github.com/pluxml/PluXml)) `GPL-3.0` `PHP`\n- [Serendipity](https://docs.s9y.org/) - Serendipity (s9y) is a highly extensible and customizable PHP blog engine using Smarty templating. ([Source Code](https://github.com/s9y/serendipity)) `BSD-3-Clause` `PHP`\n- [WriteFreely](https://writefreely.org) - Writing software for starting a minimalist, federated blog — or an entire community. ([Source Code](https://github.com/writefreely/writefreely)) `AGPL-3.0` `Go`\n\n\n### Booking and Scheduling\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nEvent scheduling, reservation, and appointment management software.\n\n_Related: [Polls and Events](#polls-and-events)_\n\n- [Alf.io](https://alf.io/) - Ticket reservation system. ([Demo](https://demo.alf.io/authentication), [Source Code](https://github.com/alfio-event/alf.io)) `GPL-3.0` `Java`\n- [Cal.com](https://cal.com/) - Online appointment scheduling system. ([Demo](https://app.cal.com/bailey), [Source Code](https://github.com/calcom/cal.com)) `AGPL-3.0` `Nodejs`\n- [Easy!Appointments](https://easyappointments.org/) - Allows your customers to book appointments with you via the web. ([Demo](https://demo.easyappointments.org/), [Source Code](https://github.com/alextselegidis/easyappointments)) `GPL-3.0` `PHP`\n- [Hi.Events](https://hi.events) - Event management and ticketing platform for conferences, concerts, and more. Offering customizable event pages and embeddable ticket widgets. ([Demo](https://demo.hi.events/event/1/dog-conf-2030), [Source Code](https://github.com/HiEventsDev/hi.events)) `AGPL-3.0` `Docker`\n- [LibreBooking](https://librebooking.readthedocs.io/) - Resource scheduling solution offering a flexible, mobile-friendly, and extensible interface for organizations to manage resource reservations. ([Demo](https://librebooking-demo.fly.dev/), [Source Code](https://github.com/LibreBooking/app)) `GPL-3.0` `PHP/Docker`\n- [QloApps](https://qloapps.com/) - Customizable and intuitive web-based hotel reservation system and a booking engine. ([Demo](https://demo.qloapps.com/), [Source Code](https://github.com/Qloapps/QloApps)) `OSL-3.0` `PHP/Nodejs`\n- [Rallly](https://rallly.co) - Create polls to vote on dates and times (alternative to Doodle). ([Demo](https://app.rallly.co), [Source Code](https://github.com/lukevella/rallly)) `AGPL-3.0` `Nodejs/Docker`\n- [Seatsurfing](https://seatsurfing.app/) - Webbased app to book seats, desks and rooms for offices. ([Source Code](https://github.com/seatsurfing/seatsurfing)) `GPL-3.0` `Docker`\n\n\n### Bookmarks and Link Sharing\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware which allows users to add, annotate, edit, and share [bookmarks](https://en.wikipedia.org/wiki/Bookmark_(digital)) of web documents.\n\n- [Briefkasten](https://github.com/ndom91/briefkasten) - Modern app for saving and managing your own bookmarks. Includes a browser extension. ([Demo](https://briefkastenhq.com/auth/signin)) `MIT` `Nodejs/Docker`\n- [Buku](https://github.com/jarun/Buku) - Powerful bookmark manager and a personal textual mini-web. `GPL-3.0` `Python/deb`\n- [Digibunch](https://ladigitale.dev/digibunch/#/) - Create bunches of links to share with your learners or colleagues. ([Demo](https://ladigitale.dev/digibunch/#/b/5f67b12092b60), [Source Code](https://codeberg.org/ladigitale/digibunch)) `AGPL-3.0` `Nodejs/PHP`\n- [Espial](https://github.com/jonschoning/espial) - An open-source, web-based bookmarking server. `AGPL-3.0` `Haskell`\n- [Firefox Account Server](https://mozilla-services.readthedocs.io/en/latest/howtos/run-fxa.html) - Host your own Firefox accounts server. ([Source Code](https://github.com/mozilla/fxa)) `MPL-2.0` `Nodejs/Java`\n- [Grimoire](https://grimoire.pro) - Bookmark manager with a modern UI, automatic content & metadata extraction, categorization, filtering, and more. It has fully documented REST API, and Docker image for easy deployment. ([Source Code](https://github.com/goniszewski/grimoire)) `MIT` `Nodejs/Docker`\n- [Karakeep](https://karakeep.app/) - Bookmark-everything app with a touch of AI for the data hoarders out there. ([Demo](https://try.karakeep.app/signin), [Source Code](https://github.com/karakeep-app/karakeep)) `AGPL-3.0` `Docker`\n- [LinkAce](https://www.linkace.org/) - Bookmark archive with automatic backups to the Internet Archive, link monitoring, and a full REST API. Installation is done via Docker, or as a simple PHP application. ([Demo](https://demo.linkace.org/guest/links), [Source Code](https://github.com/Kovah/LinkAce/)) `GPL-3.0` `Docker/PHP`\n- [linkding](https://linkding.link/) - Minimal bookmark management with a fast and clean UI. Simple installation through Docker and can run on your Raspberry Pi. ([Demo](https://demo.linkding.link/login/), [Source Code](https://github.com/sissbruecker/linkding)) `MIT` `Docker`\n- [LinkWarden](https://linkwarden.app/) - Bookmark and archive manager to store your useful links. ([Source Code](https://github.com/linkwarden/linkwarden)) `MIT` `Docker/Nodejs`\n- [NeonLink](https://github.com/AlexSciFier/neonlink) - Bookmark service with unique design and simple installation with Docker. `MIT` `Docker`\n- [Readeck](https://readeck.org/en/) - Save the precious readable content of web pages you like and want to keep forever. See it as a bookmark manager and a read later tool. ([Source Code](https://codeberg.org/readeck/readeck), [Clients](https://codeberg.org/readeck/browser-extension)) `AGPL-3.0` `Go/Docker`\n- [Servas](https://github.com/beromir/Servas) - A self-hosted bookmark management tool. It allows organization with tags, groups, and a list specifically for later access. It supports multiple users with 2FA. Companion browser extensions are available for Firefox and Chrome. ([Clients](https://github.com/beromir/Servas#browser-extensions)) `GPL-3.0` `Docker/Nodejs/PHP`\n- [Shaarli](https://github.com/shaarli/Shaarli) - Personal, minimalist, super-fast, no-database bookmarking and link sharing platform. ([Demo](https://demo.shaarli.org)) `Zlib` `PHP/deb`\n- [Shiori](https://github.com/go-shiori/shiori) - Simple bookmark manager built with Go. `MIT` `Go/Docker`\n- [Slash](https://github.com/yourselfhosted/slash) - An open source, self-hosted bookmarks and link sharing platform. `GPL-3.0` `Docker`\n- [SyncMarks](https://codeberg.org/Offerel/SyncMarks-Webapp) - Sync and manage your browser bookmarks from Edge, Firefox and Chromium. ([Clients](https://codeberg.org/Offerel/SyncMarks-Extension)) `AGPL-3.0` `PHP`\n\n\n### Calendar & Contacts\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[CalDAV](https://en.wikipedia.org/wiki/CalDAV) and [CardDAV](https://en.wikipedia.org/wiki/CardDAV) protocol servers and web clients/interfaces for [Electronic calendar](https://en.wikipedia.org/wiki/Calendaring_software), [address book](https://en.wikipedia.org/wiki/Address_book) and [contact management](https://en.wikipedia.org/wiki/Contact_manager).\n\n_Related: [Groupware](#groupware)_\n\n_See also: [Comparison of CalDAV and CardDAV implementations - Wikipedia](https://en.wikipedia.org/wiki/Comparison_of_CalDAV_and_CardDAV_implementations)_\n\n- [Baïkal](https://sabre.io/baikal/) - Lightweight CalDAV and CardDAV server based on sabre/dav. ([Source Code](https://github.com/sabre-io/Baikal)) `GPL-3.0` `PHP`\n- [DAViCal](https://www.davical.org/) - Server for calendar sharing (CalDAV) that uses a PostgreSQL database as a data store. ([Source Code](https://gitlab.com/davical-project/davical)) `GPL-2.0` `PHP/deb`\n- [Davis](https://github.com/tchapi/davis) - A simple, dockerizable and fully translatable admin interface for sabre/dav based on Symfony 5 and Bootstrap 4, largely inspired by Baïkal. `MIT` `PHP`\n- [Manage My Damn Life](https://intri.in/manage-my-damn-life/) - Manage my Damn Life (MMDL) is a self-hosted front end for managing your CalDAV tasks and calendars. ([Source Code](https://github.com/intri-in/manage-my-damn-life-nextjs)) `GPL-3.0` `Nodejs/Docker`\n- [Radicale](https://radicale.org/) - Simple calendar and contact server with extremely low administrative overhead. ([Source Code](https://github.com/Kozea/Radicale)) `GPL-3.0` `Python/deb`\n- [SabreDAV](https://sabre.io/) - Open source CardDAV, CalDAV, and WebDAV framework and server. ([Source Code](https://github.com/sabre-io/dav)) `MIT` `PHP`\n- [Xandikos](https://github.com/jelmer/xandikos) - Open source CardDAV and CalDAV server with minimal administrative overhead, backed by a Git repository. `GPL-3.0` `Python/deb`\n\n\n### Communication - Custom Communication Systems\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Communication software](https://en.wikipedia.org/wiki/Communication_software) used to provide remote access to systems and exchange files and messages in text, audio and/or video formats between different computers or users, using their own custom protocols.\n\n- [AnyCable](https://anycable.io/) - Realtime server for reliable two-way communication over WebSockets, Server-sent events, etc. ([Demo](https://demo.anycable.io), [Source Code](https://github.com/anycable/anycable)) `MIT` `Go/Docker`\n- [Apprise](https://github.com/caronc/apprise) - Apprise allows you to send a notification to almost all of the most popular notification services available to us today such as: Telegram, Discord, Slack, Amazon SNS, Gotify, etc. `MIT` `Python/Docker/deb`\n- [Centrifugo](https://centrifugal.dev/) - Language-agnostic real-time messaging (Websocket or SockJS) server. ([Demo](https://github.com/centrifugal/centrifugo#demo), [Source Code](https://github.com/centrifugal/centrifugo)) `MIT` `Go/Docker/K8S`\n- [Chitchatter](https://chitchatter.im/) - Peer-to-peer chat app that is serverless, decentralized, and ephemeral. ([Source Code](https://github.com/jeremyckahn/chitchatter)) `GPL-2.0` `Nodejs`\n- [Conduit](https://conduit.rs/) - A simple, fast, and reliable chat server powered by Matrix. ([Source Code](https://gitlab.com/famedly/conduit)) `Apache-2.0` `Rust`\n- [Databag](https://github.com/balzack/databag) - Federated, end-to-end encrypted messaging service for the web, iOS, and Android, supporting text, photos, video, and WebRTC video and audio calls. ([Demo](https://databag.coredb.org/#/create)) `Apache-2.0` `Docker`\n- [Element](https://element.io) - Fully-featured Matrix client for Web, iOS & Android. ([Source Code](https://github.com/element-hq/element-web)) `Apache-2.0` `Nodejs`\n- [GlobaLeaks](https://www.globaleaks.org/) - Whistleblowing software enabling anyone to easily set up and maintain a secure reporting platform. ([Demo](https://demo.globaleaks.org), [Source Code](https://github.com/globaleaks/globaleaks-whistleblowing-software)) `AGPL-3.0` `Python/deb/Docker`\n- [GNUnet](https://gnunet.org/) - Software framework for decentralized, peer-to-peer networking. ([Source Code](https://gnunet.org/git/)) `GPL-3.0` `C`\n- [Gotify](https://gotify.net/) - Notification server with Android and CLI clients (alternative to PushBullet). ([Source Code](https://github.com/gotify/server), [Clients](https://github.com/gotify/android)) `MIT` `Go/Docker`\n- [Hyphanet](https://hyphanet.org/) - Anonymously share files, browse and publish _freesites_ (web sites accessible only through Hyphanet) and chat on forums. ([Source Code](https://github.com/hyphanet/fred)) `GPL-2.0` `Java`\n- [Jami](https://jami.net/) - Universal communication platform which preserves the user's privacy and freedoms. ([Source Code](https://git.jami.net/savoirfairelinux?sort=latest_activity_desc&filter=jami)) `GPL-3.0` `C++`\n- [Live Helper Chat](https://livehelperchat.com/) - Live Support chat for your website. ([Source Code](https://github.com/LiveHelperChat/livehelperchat)) `Apache-2.0` `PHP`\n- [Mattermost](https://mattermost.com/) - Platform for secure collaboration across the entire software development lifecycle, can be integrated with Gitlab (alternative to Slack). ([Source Code](https://github.com/mattermost/mattermost)) `AGPL-3.0/Apache-2.0` `Go/Docker/K8S`\n- [MiAOU](https://miaou.dystroy.org/login) - Multi-room persistent chat server. ([Source Code](https://github.com/Canop/miaou)) `MIT` `Nodejs`\n- [Mumble](https://wiki.mumble.info/wiki/Main_Page) - Low-latency, high quality voice/text chat software. ([Source Code](https://github.com/mumble-voip/mumble), [Clients](https://wiki.mumble.info/wiki/3rd_Party_Applications)) `BSD-3-Clause` `C++/deb`\n- [Notifo](https://github.com/notifo-io/notifo) - Multichannel notification server with support for Email, Mobile Push, Web Push, SMS, messaging and a javascript plugin. `MIT` `C#`\n- [Novu](https://novu.co/) - Notification infrastructure for developers. ([Source Code](https://github.com/novuhq/novu/)) `MIT` `Docker/Nodejs`\n- [ntfy](https://ntfy.sh/) - Push notifications to phone or desktop using HTTP PUT/POST, with Android app, CLI and web app, similar to Pushover and Gotify. ([Demo](https://ntfy.sh/app), [Source Code](https://github.com/binwiederhier/ntfy), [Clients](https://github.com/binwiederhier/ntfy-android)) `Apache-2.0/GPL-2.0` `Go/Docker/K8S`\n- [One Time Secret](https://docs.onetimesecret.com) - Share sensitive information securely with self-destructing links that are only viewable once. ([Demo](https://onetimesecret.com), [Source Code](https://github.com/onetimesecret/onetimesecret)) `MIT` `Docker/Ruby/Nodejs`\n- [OTS](https://ots.fyi/) - One-Time-Secret sharing platform with a symmetric 256bit AES encryption in the browser. ([Source Code](https://github.com/Luzifer/ots)) `Apache-2.0` `Go`\n- [PushBits](https://github.com/pushbits/server) - Notification server for relaying push notifications via Matrix, similar to PushBullet and Gotify. `ISC` `Go`\n- [RetroShare](https://retroshare.cc) - Secured and decentralized communication system. Offers decentralized chat, forums, messaging, file transfer. ([Source Code](https://github.com/RetroShare/RetroShare)) `GPL-2.0` `C++`\n- [Revolt](https://revolt.chat/) - Revolt is a user-first chat platform built with modern web technologies. ([Source Code](https://github.com/revoltchat/self-hosted)) `AGPL-3.0` `Rust`\n- [Rocket.Chat](https://rocket.chat/) - Communications platform that puts data protection first (alternative to Gitter.im and Slack). ([Source Code](https://github.com/RocketChat/Rocket.Chat)) `MIT` `Nodejs/Docker/K8S`\n- [SAMA](https://samacloud.io) - Next-Gen self-hosted chat server and clients. ([Demo](https://app.samacloud.io/demo), [Source Code](https://github.com/SAMA-Communications/sama-server), [Clients](https://github.com/SAMA-Communications/sama-client)) `GPL-3.0` `Nodejs/Docker`\n- [Screego](https://screego.net) - Screego is a simple tool to quickly share your screen to one or multiple people via web browser. ([Demo](https://app.screego.net/), [Source Code](https://github.com/screego/server)) `GPL-3.0` `Docker/Go`\n- [Shhh](https://github.com/smallwat3r/shhh) - Keep secrets out of emails or chat logs, share them using secure links with passphrase and expiration dates. `MIT` `Python`\n- [SimpleX Chat](https://github.com/simplex-chat/simplex-chat) - The most private and secure chat and applications platform - now with double ratchet E2E encryption. `AGPL-3.0` `Haskell`\n- [Spectrum 2](https://spectrum.im/) - Spectrum 2 is an open source instant messaging transport.  It allows users to chat together even when they are using different IM networks. ([Source Code](https://github.com/SpectrumIM/spectrum2)) `GPL-3.0` `C++`\n- [Synapse](https://element-hq.github.io/synapse/latest/index.html) - Server for [Matrix](https://matrix.org/), an open standard for decentralized persistent communication. ([Source Code](https://github.com/element-hq/synapse)) `Apache-2.0` `Python/deb`\n- [Syndie](https://syndie.de) - Syndie is a libre system for operating distributed forums. `CC0-1.0` `Java`\n- [Tailchat](https://tailchat.msgbyte.com/) - Next generation noIM application in your own workspace, not only another Slack/Discord/rocket.chat. ([Demo](https://nightly.paw.msgbyte.com/), [Source Code](https://github.com/msgbyte/tailchat)) `Apache-2.0` `Docker/K8S/Nodejs`\n- [Tiledesk](https://tiledesk.com) - All-in-one customer engagement platform from lead-gen to post-sales, from WhatsApp to your website. With omni-channel live agents and AI-powered chatbots (alternative to Intercom, Zendesk, Tawk.to and Tidio). ([Source Code](https://github.com/Tiledesk/tiledesk)) `MIT` `Docker/K8S`\n- [Tinode](https://github.com/tinode) - Instant messaging platform. Backend in Go. Clients: Swift iOS, Java Android, JS webapp, scriptable command line; chatbots. ([Demo](https://sandbox.tinode.co/), [Source Code](https://github.com/tinode/chat), [Clients](https://github.com/tinode/webapp)) `GPL-3.0` `Go`\n- [Tox](https://tox.chat/) - Distributed, secure messenger with audio and video chat capabilities. ([Source Code](https://github.com/TokTok/c-toxcore)) `GPL-3.0` `C`\n- [Typebot](https://typebot.io) - Conversational app builder (alternative to Typeform and Landbot). ([Source Code](https://github.com/baptisteArno/typebot.io)) `AGPL-3.0` `Docker`\n- [WBO](https://github.com/lovasoa/whitebophir) - Web Whiteboard to collaborate in real-time on schemas, drawings, and notes. ([Demo](https://wbo.ophir.dev/)) `AGPL-3.0` `Nodejs/Docker`\n- [Zulip](https://zulip.org) - Zulip is a powerful, open source group chat application. ([Source Code](https://github.com/zulip/zulip)) `Apache-2.0` `Python`\n\n\n### Communication - Email - Complete Solutions\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSimple deployment of [E-mail](https://en.wikipedia.org/wiki/Email) servers, e.g. for inexperienced or impatient admins.\n\n- [AnonAddy](https://anonaddy.com) - Email forwarding service for creating aliases. ([Source Code](https://github.com/anonaddy/anonaddy)) `MIT` `PHP/Docker`\n- [b1gMail](https://www.b1gmail.eu) - Complete email solution that runs on any webspace with PHP and MariaDB. It supports POP3 catchall mailboxes and can also integrate with Postfix or b1gMailServer if you're running your own server. ([Source Code](https://codeberg.org/b1gMail/b1gMail), [Clients](https://www.b1gmail.eu/en/start/addon-b1gmailserver/)) `GPL-2.0` `PHP`\n- [DebOps](https://docs.debops.org/) - Your Debian-based data center in a box. A set of general-purpose Ansible roles that can be used to manage Debian or Ubuntu hosts. ([Source Code](https://github.com/debops/debops)) `GPL-3.0` `Ansible/Python`\n- [docker-mailserver](https://docker-mailserver.github.io/docker-mailserver/edge/) - Production-ready fullstack but simple mail server (SMTP, IMAP, LDAP, Antispam, Antivirus, etc.) running inside a container. Only configuration files, no SQL database. ([Source Code](https://github.com/docker-mailserver/docker-mailserver)) `MIT` `Docker`\n- [Dovel](https://dovel.email) - SMTP server that sends and receives emails according to a simple configuration file, with an optional web interface that you can use to browse your emails. ([Source Code](https://dovel.email/server/tree.html)) `LGPL-3.0` `Go`\n- [emailwiz](https://github.com/LukeSmithxyz/emailwiz) - Luke Smith's bash script to completely automate the setup of a Postfix/Dovecot/SpamAssassin/OpenDKIM server on debian. `GPL-3.0` `Shell`\n- [Inboxen](https://inboxen.org) - Lets you have an infinite number of unique inboxes. ([Source Code](https://codeberg.org/Inboxen/Inboxen)) `GPL-3.0` `Python`\n- [iRedMail](https://www.iredmail.org/) - Full-featured mail server solution based on Postfix and Dovecot. ([Source Code](https://github.com/iredmail/iRedMail)) `GPL-3.0` `Shell`\n- [Maddy Mail Server](https://maddy.email/) - All-in-one mail server that implements SMTP (both MTA and MX) and IMAP. Replaces Postfix, Dovecot, OpenDKIM, OpenSPF, OpenDMARC with single daemon. ([Source Code](https://github.com/foxcpp/maddy)) `GPL-3.0` `Go`\n- [Mail-in-a-Box](https://mailinabox.email/) - Turns any Ubuntu server into a fully functional mail server with one command. ([Source Code](https://github.com/mail-in-a-box/mailinabox)) `CC0-1.0` `Shell`\n- [Mailcow](https://mailcow.email/) - Mail server suite based on Dovecot, Postfix and other open source software, that provides a modern Web UI for administration. ([Source Code](https://github.com/mailcow/mailcow-dockerized)) `GPL-3.0` `Docker/PHP`\n- [Mailu](https://mailu.io/) - Simple yet full-featured mail server as a set of Docker images. ([Source Code](https://github.com/Mailu/Mailu)) `MIT` `Docker/Python`\n- [Modoboa](https://modoboa.org/en/) - Mail hosting and management platform including a modern and simplified web user interface. ([Source Code](https://github.com/modoboa/modoboa)) `ISC` `Python`\n- [Mox](https://www.xmox.nl/) - Complete e-mail solution with IMAP4, SMTP, SPF, DKIM, DMARC, MTA-STS, DANE and DNSSEC, reputation-based and content-based junk filtering, Internationalization (IDNA), automatic TLS with ACME and Let's Encrypt, account autoconfiguration, and webmail. ([Source Code](https://github.com/mjl-/mox)) `MIT` `Go`\n- [Postal](https://docs.postalserver.io/) - Complete and fully featured mail server for use by websites & web servers. ([Source Code](https://github.com/postalserver/postal)) `MIT` `Docker/Ruby`\n- [Simple NixOS Mailserver](https://gitlab.com/simple-nixos-mailserver/nixos-mailserver) - Complete mailserver solution leveraging the Nix Ecosystem. `GPL-3.0` `Nix`\n- [SimpleLogin](https://simplelogin.io) - Open source email alias solution to protect your email address. Comes with browser extensions and mobile apps. ([Source Code](https://github.com/simple-login/app)) `MIT` `Docker/Python`\n- [Stalwart Mail Server](https://stalw.art) - All-in-one mail server with JMAP, IMAP4, and SMTP support and a wide range of modern features. ([Source Code](https://github.com/stalwartlabs/stalwart)) `AGPL-3.0` `Rust/Docker`\n- [wildduck](https://wildduck.email/) - Scalable no-SPOF IMAP/POP3 mail server. ([Source Code](https://github.com/zone-eu/wildduck)) `EUPL-1.2` `Nodejs/Docker`\n\n\n### Communication - Email - Mail Delivery Agents\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Mail Delivery Agents](https://en.wikipedia.org/wiki/Message_delivery_agent) (MDAs) - [IMAP](https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol)/[POP3](https://en.wikipedia.org/wiki/Post_Office_Protocol) server software.\n\n- [Cyrus IMAP](https://www.cyrusimap.org/) - Email (IMAP/POP3), contacts and calendar server. ([Source Code](https://github.com/cyrusimap/cyrus-imapd)) `BSD-3-Clause-Attribution` `C`\n- [DavMail](https://davmail.sourceforge.net/) `⚠` - POP/IMAP/SMTP/Caldav/Carddav/LDAP exchange gateway allowing users to use any mail/calendar client with an Exchange server, even from the internet or behind a firewall through Outlook Web Access. ([Source Code](https://github.com/mguessan/davmail)) `GPL-2.0` `Java`\n- [Dovecot](https://www.dovecot.org/) - IMAP and POP3 server written primarily with security in mind. ([Source Code](https://github.com/dovecot/core)) `MIT/LGPL-2.1` `C/deb`\n- [Piler](https://www.mailpiler.org/) - Feature-rich email archiving solution. ([Source Code](https://github.com/jsuto/piler/)) `GPL-3.0` `C`\n\n\n### Communication - Email - Mail Transfer Agents\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Mail Transfer Agents](https://en.wikipedia.org/wiki/Message_transfer_agent) (MTAs) - [SMTP](https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol) servers.\n\n- [chasquid](https://blitiri.com.ar/p/chasquid/) - SMTP (email) server with a focus on simplicity, security, and ease of operation. ([Source Code](https://blitiri.com.ar/git/r/chasquid/)) `Apache-2.0` `Go`\n- [Courier MTA](https://www.courier-mta.org/) - Fast, scalable, enterprise mail/groupware server providing ESMTP, IMAP, POP3, webmail, mailing list, basic web-based calendaring and scheduling services. ([Source Code](https://www.courier-mta.org/repo.html)) `GPL-3.0` `C/deb`\n- [DragonFly](https://github.com/corecode/dma) - A small MTA for home and office use. Works on Linux and FreeBSD. `BSD-3-Clause` `C`\n- [EmailRelay](https://emailrelay.sourceforge.net/) - A small and easy to configure SMTP and POP3 server for Windows and Linux. ([Source Code](https://sourceforge.net/p/emailrelay/code/HEAD/tree/)) `GPL-3.0` `C++`\n- [Exim](https://www.exim.org/) - Message transfer agent (MTA) developed at the University of Cambridge. ([Source Code](https://git.exim.org/exim.git)) `GPL-3.0` `C/deb`\n- [Haraka](https://haraka.github.io/) - Fast, highly extensible, and event driven SMTP server. ([Source Code](https://github.com/haraka/Haraka)) `MIT` `Nodejs`\n- [OpenSMTPD](https://opensmtpd.org/) - Secure SMTP server implementation from the OpenBSD project. ([Source Code](https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.sbin/smtpd/)) `ISC` `C/deb`\n- [OpenTrashmail](https://github.com/HaschekSolutions/opentrashmail) - Complete trashmail solution that exposes an SMTP server and has a web interface to manage received emails. Works with multiple and wildcard domains and is fully file based (no database needed). Includes RSS feeds and JSON API. `Apache-2.0` `Python/PHP/Docker`\n- [Postfix](http://www.postfix.org/) - Fast, easy to administer, and secure Sendmail replacement. `IPL-1.0` `C/deb`\n- [Sendmail](https://www.proofpoint.com/us/products/email-protection/open-source-email-solution) - Message transfer agent (MTA). `Sendmail` `C/deb`\n\n\n### Communication - Email - Mailing Lists and Newsletters\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Mailing list](https://en.wikipedia.org/wiki/Mailing_list) servers and mass mailing software - one message to many recipients.\n\n- [HyperKitty](https://wiki.list.org/HyperKitty) - Access GNU Mailman v3 archives. ([Demo](https://lists.mailman3.org/), [Source Code](https://gitlab.com/mailman/hyperkitty)) `GPL-3.0` `Python`\n- [Keila](https://www.keila.io) - Reliable and easy-to-use newsletter tool (alternative to Mailchimp and Sendinblue). ([Demo](https://app.keila.io), [Source Code](https://github.com/pentacent/keila)) `AGPL-3.0` `Docker`\n- [Listmonk](https://listmonk.app/) - High performance, self-hosted newsletter and mailing list manager with a modern dashboard. ([Demo](https://demo.listmonk.app/), [Source Code](https://github.com/knadh/listmonk)) `AGPL-3.0` `Go/Docker`\n- [Mailman](https://www.list.org/) - Manage electronic mail discussion and e-newsletter lists. ([Source Code](https://gitlab.com/mailman/)) `GPL-3.0` `Python`\n- [Mautic](https://www.mautic.org/) - Marketing automation software (email, social and more). ([Source Code](https://github.com/mautic/mautic)) `GPL-3.0` `PHP`\n- [phpList](https://www.phplist.org) - Newsletter and email marketing with advanced management of subscribers, bounces, and plugins. ([Source Code](https://github.com/phpList/phplist3)) `AGPL-3.0` `PHP`\n- [Postorius](https://docs.mailman3.org/projects/postorius/en/latest/) - Web user interface to access GNU Mailman. ([Source Code](https://gitlab.com/mailman/postorius/)) `GPL-3.0` `Python`\n- [Schleuder](https://schleuder.nadir.org/) - GPG-enabled mailing list manager with resending-capabilities. ([Source Code](https://0xacab.org/schleuder/schleuder/tree/master)) `GPL-3.0` `Ruby`\n- [Sympa](https://www.sympa.community/) - Mailing list manager. ([Source Code](https://github.com/sympa-community/sympa)) `GPL-2.0` `Perl`\n\n\n### Communication - Email - Webmail Clients\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Webmail](https://en.wikipedia.org/wiki/Webmail) clients.\n\n- [Cypht](https://cypht.org) - Feed reader for your email accounts. ([Source Code](https://github.com/cypht-org/cypht)) `LGPL-2.1` `PHP`\n- [Roundcube](https://roundcube.net) - Browser-based IMAP client with an application-like user interface. ([Source Code](https://github.com/roundcube/roundcubemail)) `GPL-3.0` `PHP/deb`\n- [SnappyMail](https://snappymail.eu/) - Simple, modern, lightweight & fast web-based email client (fork of RainLoop). ([Demo](https://snappymail.eu/demo/), [Source Code](https://github.com/the-djmaze/snappymail)) `AGPL-3.0` `PHP`\n- [SquirrelMail](https://squirrelmail.org) - Another browser-based IMAP client. ([Source Code](https://sourceforge.net/p/squirrelmail/code/HEAD/tree/)) `GPL-2.0` `PHP`\n\n\n### Communication - IRC\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[IRC](https://en.wikipedia.org/wiki/Internet_Relay_Chat) communication software.\n\n- [Convos](https://convos.chat/) - Always online web IRC client. ([Demo](https://convos.chat/#instant-demo), [Source Code](https://github.com/convos-chat/convos)) `Artistic-2.0` `Perl/Docker`\n- [Ergo](https://ergo.chat/) - Modern IRCv3 server written in Go, combining the features of an ircd, a services framework, and a bouncer. ([Source Code](https://github.com/ergochat/ergo)) `MIT` `Go/Docker`\n- [Glowing Bear](https://github.com/glowing-bear/glowing-bear) - A web frontend for WeeChat. ([Demo](https://www.glowing-bear.org)) `GPL-3.0` `Nodejs`\n- [InspIRCd](https://www.inspircd.org/) - Modular IRC server written in C++ for Linux, BSD, Windows, and macOS. ([Source Code](https://github.com/inspircd/inspircd)) `GPL-2.0` `C++/Docker`\n- [Kiwi IRC](https://kiwiirc.com/) - Responsive web IRC client with theming support. ([Demo](https://kiwiirc.com/nextclient/), [Source Code](https://github.com/kiwiirc/kiwiirc)) `Apache-2.0` `Nodejs`\n- [ngircd](https://ngircd.barton.de/) - Portable and lightweight Internet Relay Chat server for small or private networks. ([Source Code](https://github.com/ngircd/ngircd)) `GPL-2.0` `C/deb`\n- [Quassel IRC](https://quassel-irc.org/) - Distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. ([Source Code](https://github.com/quassel/quassel)) `GPL-2.0` `C++`\n- [Robust IRC](https://robustirc.net/) - IRC without netsplits. Distributed IRC server, based on RobustSession protocol. ([Source Code](https://github.com/robustirc/robustirc)) `BSD-3-Clause` `Go`\n- [The Lounge](https://thelounge.chat/) - Self-hosted web IRC client. ([Demo](https://demo.thelounge.chat/), [Source Code](https://github.com/thelounge/thelounge)) `MIT` `Nodejs/Docker`\n- [UnrealIRCd](https://www.unrealircd.org/) - Modular, advanced and highly configurable IRC server written in C for Linux, BSD, Windows, and macOS. ([Source Code](https://github.com/unrealircd/unrealircd)) `GPL-2.0` `C`\n- [Weechat](https://weechat.org/) - Fast, light and extensible chat client. ([Source Code](https://github.com/weechat/weechat)) `GPL-3.0` `C/Docker/deb`\n- [ZNC](https://wiki.znc.in/ZNC) - Advanced IRC bouncer. ([Source Code](https://github.com/znc/znc)) `Apache-2.0` `C++/deb`\n\n\n### Communication - SIP\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[SIP](https://en.wikipedia.org/wiki/Session_Initiation_Protocol)/[IPBX](https://en.wikipedia.org/wiki/IP_PBX) telephony software.\n\n- [Asterisk](https://www.asterisk.org/) - Easy to use but advanced IP PBX system, VoIP gateway and conference server. ([Source Code](https://github.com/asterisk/asterisk)) `GPL-2.0` `C/deb`\n- [Flexisip](https://www.linphone.org/en/flexisip-sip-server/) - Complete, modular and scalable SIP server, includes a push gateway, to deliver SIP incoming calls or text messages on mobile device platforms where push notifications are required to receive information when the app is not active in the foreground. ([Source Code](https://github.com/BelledonneCommunications/flexisip)) `AGPL-3.0` `C/Docker`\n- [Freepbx](https://www.freepbx.org) - Web-based open source GUI that controls and manages Asterisk. ([Source Code](https://git.freepbx.org/projects/FREEPBX)) `GPL-2.0` `PHP`\n- [FreeSWITCH](https://freeswitch.org/) - Scalable open source cross-platform telephony platform. ([Source Code](https://github.com/signalwire/freeswitch)) `MPL-2.0` `C`\n- [FusionPBX](https://www.fusionpbx.com/) - Web interface for multi-platform voice switch called FreeSWITCH. ([Source Code](https://github.com/fusionpbx/fusionpbx)) `MPL-1.1` `PHP`\n- [Kamailio](https://www.kamailio.org/w/) - Modular SIP server (registrar/proxy/router/etc). ([Source Code](https://github.com/kamailio/kamailio)) `GPL-2.0` `C/deb`\n- [openSIPS](https://opensips.org/) - SIP proxy/server for voice, video, IM, presence and any other SIP extensions. ([Source Code](https://github.com/OpenSIPS/opensips)) `GPL-2.0` `C`\n- [Routr](https://routr.io) - Lightweight SIP proxy, location server, and registrar for a reliable and scalable SIP infrastructure. ([Source Code](https://github.com/fonoster/routr)) `MIT` `Docker/K8S`\n- [SIP3](https://sip3.io/) - VoIP troubleshooting and monitoring platform. ([Demo](https://demo.sip3.io), [Source Code](https://github.com/sip3io/)) `Apache-2.0` `Java`\n- [SIPCAPTURE Homer](https://www.sipcapture.org/) - Troubleshooting and monitoring VoIP calls. ([Source Code](https://github.com/sipcapture/homer)) `AGPL-3.0` `Nodejs/Go/Docker`\n- [Wazo](https://wazo-platform.org/) - Full-featured IPBX solution built atop Asterisk with integrated Web administration interface and REST-ful API. ([Source Code](https://github.com/wazo-platform)) `GPL-3.0` `Python`\n- [Yeti-Switch](https://yeti-switch.org/) - Transit class4 softswitch(SBC) with integrated billing and routing engine and REST API. ([Demo](https://yeti-switch.org/demo.html), [Source Code](https://github.com/yeti-switch)) `GPL-2.0` `C++/Ruby`\n\n\n### Communication - Social Networks and Forums\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Social Networking](https://en.wikipedia.org/wiki/Social_networking_service) and [Forum](https://en.wikipedia.org/wiki/Internet_forum) software.\n\n- [Akkoma](https://akkoma.social/) - Federated microblogging server with Mastodon, GNU social, and ActivityPub compatibility. ([Source Code](https://akkoma.dev/AkkomaGang/akkoma)) `AGPL-3.0` `Elixir/Docker`\n- [Answer](https://answer.dev/) - Knowledge-based community software. You can use it to quickly build your Q&A community for product technical support, customer support, user communication, and more. ([Source Code](https://github.com/apache/answer)) `Apache-2.0` `Docker/Go`\n- [Artalk](https://artalk.js.org/) - Comment system built in Golang, providing a lightweight and highly customizable solution for adding comments to your website. ([Source Code](https://github.com/ArtalkJS/Artalk)) `MIT` `Go/Docker`\n- [AsmBB](https://board.asm32.info) - Fast, SQLite-powered forum engine written in ASM. ([Source Code](https://asm32.info/fossil/asmbb/index)) `EUPL-1.2` `Assembly`\n- [BuddyPress](https://buddypress.org/about/) - Powerful plugin that takes your WordPress.org powered site beyond the blog with social-network features like user profiles, activity streams, user groups, and more. ([Source Code](https://github.com/buddypress/BuddyPress)) `GPL-2.0` `PHP`\n- [Chirpy](https://chirpy.dev) - Privacy-friendly and customizable Disqus (comment system) alternate. ([Demo](https://chirpy.dev/play), [Source Code](https://github.com/devrsi0n/chirpy)) `AGPL-3.0` `Docker/Nodejs`\n- [Coral](https://coralproject.net/) - A better commenting experience from Vox Media. ([Source Code](https://github.com/coralproject/talk)) `Apache-2.0` `Docker/Nodejs`\n- [diaspora*](https://diasporafoundation.org/) - Distributed social networking server. ([Source Code](https://github.com/diaspora/diaspora)) `AGPL-3.0` `Ruby`\n- [Discourse](https://www.discourse.org/) - Advanced forum / community solution based on Ruby and JS. ([Demo](https://try.discourse.org/), [Source Code](https://github.com/discourse/discourse)) `GPL-2.0` `Docker`\n- [Elgg](https://elgg.org/) - Powerful open source social networking engine. ([Source Code](https://github.com/Elgg/Elgg)) `GPL-2.0` `PHP`\n- [Enigma 1/2 BBS](https://nuskooler.github.io/enigma-bbs/) - Enigma 1/2 is a modern, multi-platform BBS engine with unlimited \"callers\" and legacy DOS door game support. ([Source Code](https://github.com/NuSkooler/enigma-bbs)) `BSD-2-Clause` `Shell/Docker/Nodejs`\n- [Flarum](https://flarum.org) - Delightfully simple forums. Flarum is the next-generation forum software that makes online discussion fun again. ([Source Code](https://github.com/flarum/flarum)) `MIT` `PHP`\n- [Friendica](https://friendi.ca/) - Social Communication Server. ([Source Code](https://github.com/friendica/friendica)) `AGPL-3.0` `PHP`\n- [GoToSocial](https://docs.gotosocial.org/en/latest/) - ActivityPub federated social network server implementing the Mastodon client API. ([Source Code](https://github.com/superseriousbusiness/gotosocial)) `AGPL-3.0` `Docker/Go`\n- [Hatsu](https://hatsu.cli.rs/) - Bridge that interacts with Fediverse on behalf of your static site. ([Source Code](https://github.com/importantimport/hatsu)) `AGPL-3.0` `Docker/Rust`\n- [Hubzilla](https://hubzilla.org) - Decentralized identity, privacy, publishing, sharing, cloud storage, and communications/social platform. ([Source Code](https://framagit.org/hubzilla/core)) `MIT` `PHP`\n- [HumHub](https://www.humhub.org/) - Flexible kit for private social networks. ([Source Code](https://github.com/humhub/humhub)) `AGPL-3.0` `PHP`\n- [Isso](https://isso-comments.de/) - Lightweight commenting server written in Python and Javascript. It aims to be a drop-in replacement for Disqus. ([Source Code](https://github.com/isso-comments/isso)) `MIT` `Python/Docker`\n- [Lemmy](https://join-lemmy.org/) - Link aggregator for the fediverse (alternative to Reddit). ([Source Code](https://github.com/LemmyNet/lemmy)) `AGPL-3.0` `Docker/Rust`\n- [Loomio](https://www.loomio.org/) - Collaborative decision-making tool that makes it easy for anyone to participate in decisions which affect them. ([Source Code](https://github.com/loomio/loomio)) `AGPL-3.0` `Docker`\n- [Mastodon](https://joinmastodon.org/) - Federated microblogging server. ([Source Code](https://github.com/mastodon/mastodon), [Clients](https://github.com/hyperupcall/awesome-mastodon)) `AGPL-3.0` `Ruby`\n- [Misago](https://misago-project.org/) - Fully featured modern forum application that is fast, scalable and responsive. ([Source Code](https://github.com/rafalp/Misago)) `GPL-2.0` `Docker`\n- [Misskey](https://misskey.io/) - Decentralized app-like microblogging server/SNS for the Fediverse, using the ActivityPub protocol like GNU social and Mastodon. ([Source Code](https://github.com/misskey-dev/misskey)) `AGPL-3.0` `Nodejs/Docker`\n- [Movim](https://movim.eu/) - Modern, federated social network based on XMPP, with a fully featured group-chat, subscriptions and microblogging. ([Source Code](https://github.com/movim/movim)) `AGPL-3.0` `PHP/Docker`\n- [MyBB](https://mybb.com/) - Free, extensible forum software package. ([Source Code](https://github.com/mybb/mybb)) `LGPL-3.0` `PHP`\n- [NodeBB](https://nodebb.org/) - Forum software built for the modern web. ([Demo](https://try.nodebb.org/), [Source Code](https://github.com/NodeBB/NodeBB)) `GPL-3.0` `Nodejs/Docker`\n- [OSSN](https://www.opensource-socialnetwork.org/) - Social networking software that allows you to make a social networking website and helps your members build social relationships, with people who share similar professional or personal interests. ([Source Code](https://github.com/opensource-socialnetwork/opensource-socialnetwork)) `CAL-1.0` `PHP`\n- [phpBB](https://www.phpbb.com/) - Flat-forum bulletin board software solution that can be used to stay in touch with a group of people or can power your entire website. ([Source Code](https://github.com/phpbb/phpbb)) `GPL-2.0` `PHP`\n- [PixelFed](https://pixelfed.social) - Ethical photo sharing platform, powered by ActivityPub federation (alternative to Instagram). ([Source Code](https://github.com/pixelfed/pixelfed)) `AGPL-3.0` `PHP`\n- [Pleroma](https://pleroma.social) - Federated microblogging server, Mastodon, GNU social, & ActivityPub compatible. ([Source Code](https://git.pleroma.social/pleroma/pleroma)) `AGPL-3.0` `Elixir`\n- [qpixel](https://codidact.com/) - Q&A-based community knowledge-sharing software. ([Source Code](https://github.com/codidact/qpixel)) `AGPL-3.0` `Ruby`\n- [Redlib](https://github.com/redlib-org/redlib) `⚠` - An alternative private front-end to Reddit, with its origins in Libreddit. `AGPL-3.0` `Rust`\n- [remark42](https://remark42.com/) - Lightweight and simple comment engine, which doesn't spy on users. It can be embedded into blogs, articles or any other place where readers add comments. ([Demo](https://remark42.com/demo/), [Source Code](https://github.com/umputun/remark42)) `MIT` `Docker/Go`\n- [Scoold](https://scoold.com) - Stack Overflow in a JAR. An enterprise-ready Q&A platform with full-text search, SAML, LDAP integration and social login support. ([Demo](https://live.scoold.com), [Source Code](https://github.com/Erudika/scoold)) `Apache-2.0` `Java/Docker/K8S`\n- [Simple Machines Forum](https://www.simplemachines.org/) - Free, professional grade software package that allows you to set up your own online community within minutes. ([Source Code](https://github.com/SimpleMachines/SMF)) `BSD-3-Clause` `PHP`\n- [Socialhome](https://socialhome.network) - Federated and decentralized profile builder and social network engine. ([Demo](https://socialhome.network/), [Source Code](https://github.com/jaywink/socialhome)) `AGPL-3.0` `Docker/Python`\n- [Talkyard](https://www.talkyard.io/) - Create a community, where your users can suggest ideas and get questions answered. And have friendly open-ended discussions and chat (Slack/StackOverflow/Discourse/Reddit/Disqus hybrid). ([Demo](https://www.talkyard.io/forum/latest), [Source Code](https://github.com/debiki/talkyard)) `AGPL-3.0` `Docker/Scala`\n- [yarn.social](https://yarn.social) - Self-Hosted, Twitter™-like Decentralised micro-logging platform. No ads, no tracking, your content, your data. ([Source Code](https://git.mills.io/yarnsocial/yarn)) `MIT` `Go`\n- [Zusam](https://github.com/zusam/zusam) - Free and open-source way to self-host private forums for groups of friends or family. ([Demo](https://demo.zusam.org)) `AGPL-3.0` `PHP`\n\n\n### Communication - Video Conferencing\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Video/Web Conferencing](https://en.wikipedia.org/wiki/Web_conferencing) tools and software.\n\n_Related: [Conference Management](#conference-management)_\n\n- [BigBlueButton](https://bigbluebutton.org/) - Supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, and breakout rooms. ([Source Code](https://github.com/bigbluebutton/bigbluebutton)) `LGPL-3.0` `Java`\n- [Galene](https://galene.org/) - Video conferencing server that is easy to deploy and that requires moderate server resources. ([Source Code](https://github.com/jech/galene)) `MIT` `Go`\n- [Janus](https://janus.conf.meetecho.com/) - General-purpose, lightweight, minimalist WebRTC Server. ([Demo](https://janus.conf.meetecho.com/demos/), [Source Code](https://github.com/meetecho/janus-gateway)) `GPL-3.0` `C`\n- [Jitsi Meet](https://jitsi.org/Projects/JitsiMeet) - WebRTC application that uses Jitsi Videobridge to provide high quality, scalable video conferences. ([Demo](https://meet.jit.si), [Source Code](https://github.com/jitsi/jitsi-meet)) `Apache-2.0` `Nodejs/Docker/deb`\n- [Jitsi Video Bridge](https://jitsi.org/Projects/JitsiVideobridge) - WebRTC compatible Selective Forwarding Unit (SFU) that allows for multiuser video communication. ([Source Code](https://github.com/jitsi/jitsi-videobridge)) `Apache-2.0` `Java/deb`\n- [MiroTalk C2C](https://c2c.mirotalk.com) - Real-time cam-2-cam video calls & screen sharing, end-to-end encrypted, to embed in any website with a simple iframe. ([Source Code](https://github.com/miroslavpejic85/mirotalkc2c)) `AGPL-3.0` `Nodejs/Docker`\n- [MiroTalk P2P](https://p2p.mirotalk.com) - Simple, secure, fast real-time video conferences up to 4k and 60fps, compatible with all browsers and platforms. ([Demo](https://p2p.mirotalk.com/newcall), [Source Code](https://github.com/miroslavpejic85/mirotalk)) `AGPL-3.0` `Nodejs/Docker`\n- [MiroTalk SFU](https://sfu.mirotalk.com) - Simple, secure, scalable real-time video conferences up to 4k, compatible with all browsers and platforms. ([Demo](https://sfu.mirotalk.com/newroom), [Source Code](https://github.com/miroslavpejic85/mirotalksfu)) `AGPL-3.0` `Nodejs/Docker`\n- [plugNmeet](https://www.plugnmeet.org/) - Scalable and high performance web conferencing system. ([Demo](https://demo.plugnmeet.com/login.html), [Source Code](https://github.com/mynaparrot/plugNmeet-server)) `MIT` `Docker/Go`\n\n\n### Communication - XMPP - Servers\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Extensible Messaging and Presence Protocol](https://en.wikipedia.org/wiki/XMPP) servers.\n\n- [ejabberd](https://www.ejabberd.im/) - XMPP instant messaging server. ([Source Code](https://github.com/processone/ejabberd)) `GPL-2.0` `Erlang/Docker`\n- [MongooseIM](https://www.erlang-solutions.com/products/mongooseim.html) - Mobile messaging platform with a focus on performance and scalability. ([Source Code](https://github.com/esl/MongooseIM)) `GPL-2.0` `Erlang/Docker/K8S`\n- [Openfire](https://www.igniterealtime.org/projects/openfire/) - Real time collaboration (RTC) server. ([Source Code](https://github.com/igniterealtime/Openfire)) `Apache-2.0` `Java`\n- [Prosody IM](https://prosody.im/) - Feature-rich and easy to configure XMPP server. ([Source Code](https://hg.prosody.im/)) `MIT` `Lua`\n- [Snikket](https://snikket.org/) - All-in-one Dockerized easy XMPP solution, including web admin and clients. ([Source Code](https://github.com/snikket-im/snikket-server), [Clients](https://snikket.org/app/)) `Apache-2.0` `Docker`\n- [Tigase](https://tigase.net/xmpp-server) - XMPP server implementation in Java. ([Source Code](https://github.com/tigase/tigase-server)) `GPL-3.0` `Java`\n\n\n### Communication - XMPP - Web Clients\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Extensible Messaging and Presence Protocol](https://en.wikipedia.org/wiki/XMPP) Web clients/interfaces.\n\n- [Converse.js](https://conversejs.org/) - XMPP chat client in your browser. ([Source Code](https://github.com/conversejs/converse.js)) `MPL-2.0` `Javascript`\n- [Libervia](https://repos.goffi.org/libervia-web) - Web frontend from Salut à Toi. `AGPL-3.0` `Python`\n- [Salut à Toi](https://www.salut-a-toi.org/) - Multipurpose, multi frontend, libre and decentralized communication tool. ([Source Code](https://repos.goffi.org/libervia-backend)) `AGPL-3.0` `Python`\n\n\n### Community-Supported Agriculture (CSA)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nManagement and administration tools for community supported agriculture and food cooperatives.\n\n_Related: [E-commerce](#e-commerce)_\n\n- [ACP Admin](https://acp-admin.ch/) - CSA administration. Manage members, subscriptions, deliveries, drop-off locations, member participation, invoices and emails (documentation in French). ([Source Code](https://github.com/csa-admin-org/csa-admin)) `MIT` `Ruby`\n- [E-Label](https://filipecarneiro.github.io/ELabel/) - Solution for electronic labels, with QR Codes, on wine bottles sold within the European Union. ([Source Code](https://github.com/filipecarneiro/ELabel)) `MIT` `Docker`\n- [FoodCoopShop](https://www.foodcoopshop.com/) - User-friendly software for food-coops. ([Source Code](https://github.com/foodcoopshop/foodcoopshop)) `AGPL-3.0` `PHP/Docker`\n- [Foodsoft](https://foodcoops.net/) - Manage a non-profit food coop (product catalog, ordering, accounting, job scheduling). ([Source Code](https://github.com/foodcoops/foodsoft)) `AGPL-3.0` `Docker/Ruby`\n- [juntagrico](https://juntagrico.org/) - Management platform for community gardens and vegetable cooperatives. ([Source Code](https://github.com/juntagrico/juntagrico)) `LGPL-3.0` `Python`\n- [Open Food Network](https://www.openfoodnetwork.org/) - Online marketplace for local food. It enables a network of independent online food stores that connect farmers and food hubs with individuals and local businesses. ([Source Code](https://github.com/openfoodfoundation/openfoodnetwork)) `AGPL-3.0` `Ruby`\n- [OpenOlitor](https://openolitor.org/) - Administration platform for Community Supported Agriculture groups. ([Source Code](https://github.com/OpenOlitor/openolitor-server)) `AGPL-3.0` `Scala`\n- [teikei](https://github.com/teikei/teikei) - A web application that maps out community-supported agriculture based on crowdsourced data. ([Demo](https://ernte-teilen.org/karte/#/)) `AGPL-3.0` `Nodejs`\n\n\n### Conference Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware for submission of [abstracts](https://en.wikipedia.org/wiki/Abstract_management) and preparation/management of academic conferences.\n\n- [indico](https://getindico.io/) - Feature-rich event management system, made @ CERN, the place where the Web was born. ([Demo](https://sandbox.getindico.io/), [Source Code](https://github.com/indico/indico)) `MIT` `Python`\n- [motion.tools (Antragsgrün)](https://motion.tools/) - Manage motions and amendments for (political) conventions. ([Demo](https://sandbox.motion.tools/createsite), [Source Code](https://github.com/CatoTH/antragsgruen)) `AGPL-3.0` `PHP/Docker`\n- [OpenSlides](https://openslides.com/) - Presentation and assembly system for managing and projecting agenda, motions and elections of an assembly. ([Demo](https://demo.os4.openslides.com/login), [Source Code](https://github.com/OpenSlides/OpenSlides)) `MIT` `Docker`\n- [osem](https://osem.io/) - Event management tailored to free Software conferences. ([Source Code](https://github.com/openSUSE/osem)) `MIT` `Ruby/Docker`\n- [pretalx](https://pretalx.org) - Web-based event management, including running a Call for Papers, reviewing submissions, and scheduling talks. Exports and imports for various related tools. ([Source Code](https://github.com/pretalx/pretalx)) `Apache-2.0` `Python`\n\n\n### Content Management Systems (CMS)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Content Management Systems](https://en.wikipedia.org/wiki/Content_management_system) offer a practical way to setup a website with many features, using third party plugins, themes and functionality that are easy to add and customize.\n\n_Related: [Blogging Platforms](#blogging-platforms), [Static Site Generators](#static-site-generators), [Photo Galleries](#photo-galleries)_\n\n- [Alfresco Community Edition](https://www.alfresco.com/products/community/download) - The open source Enterprise Content Management software that handles any type of content, allowing users to easily share and collaborate on content. ([Source Code](https://github.com/Alfresco/alfresco-community-repo)) `LGPL-3.0` `Java`\n- [Apostrophe](https://apostrophecms.com/) - CMS with a focus on extensible in-context editing tools. ([Demo](https://apostrophecms.com/demo), [Source Code](https://github.com/apostrophecms/apostrophe)) `MIT` `Nodejs`\n- [Backdrop CMS](https://backdropcms.org/) - Comprehensive CMS for small to medium sized businesses and non-profits. ([Source Code](https://github.com/backdrop/backdrop)) `GPL-2.0` `PHP`\n- [BigTree CMS](https://www.bigtreecms.org/) - Straightforward, well documented, and capable CMS. ([Source Code](https://github.com/bigtreecms/BigTree-CMS)) `LGPL-2.1` `PHP`\n- [Bludit](https://www.bludit.com/) `⚠` - Build a site or blog in seconds. Bludit uses flat-files (text files in JSON format) to store posts and pages. ([Source Code](https://github.com/bludit/bludit)) `MIT` `PHP`\n- [CMS Made Simple](https://www.cmsmadesimple.org/) - Faster and easier management of website contents, scalable for small businesses to large corporations. ([Source Code](http://svn.cmsmadesimple.org/svn/cmsmadesimple/trunk/)) `GPL-2.0` `PHP`\n- [Cockpit](https://getcockpit.com) - Simple content platform to manage any structured content. ([Source Code](https://github.com/Cockpit-HQ/Cockpit)) `MIT` `PHP`\n- [Concrete 5 CMS](https://www.concretecms.com) - Open source content management system. ([Source Code](https://github.com/concretecms/concretecms)) `MIT` `PHP`\n- [Contao](https://contao.org/) - Powerful CMS that allows you to create professional websites and scalable web applications. ([Demo](https://demo.contao.org/contao), [Source Code](https://github.com/contao/contao/)) `LGPL-3.0` `PHP`\n- [CouchCMS](https://www.couchcms.com/) - CMS for designers. ([Source Code](https://github.com/CouchCMS/CouchCMS)) `CPAL-1.0` `PHP`\n- [Drupal](https://www.drupal.org/) - Advanced open source content management platform. ([Source Code](https://git.drupalcode.org/project/drupal)) `GPL-2.0` `PHP`\n- [eLabFTW](https://www.elabftw.net) - Online lab notebook for research labs. Store experiments, use a database to find reagents or protocols, use trusted timestamping to legally timestamp an experiment, export as pdf or zip archive, share with collaborators…. ([Demo](https://demo.elabftw.net), [Source Code](https://github.com/elabftw/elabftw)) `AGPL-3.0` `PHP`\n- [Expressa](https://github.com/thomas4019/expressa) - Content Management System for powering database driven websites using JSON schemas. Provides permission management and automatic REST APIs. `MIT` `Nodejs`\n- [Joomla!](https://www.joomla.org/) - Advanced Content Management System (CMS). ([Source Code](https://github.com/joomla/joomla-cms)) `GPL-2.0` `PHP`\n- [KeystoneJS](https://keystonejs.com/) - CMS and web application platform. ([Source Code](https://github.com/keystonejs/keystone)) `MIT` `Nodejs`\n- [Localess](https://localess.org/home) `⚠` - Powerful translation management and content management system. Manage and translate your website or app content into multiple languages, using AI to translate faster. ([Source Code](https://github.com/Lessify/localess)) `MIT` `Docker`\n- [MODX](https://modx.com/) - Advanced content management and publishing platform. The current version is called 'Revolution'. ([Source Code](https://github.com/modxcms/revolution)) `GPL-2.0` `PHP`\n- [Neos](https://www.neos.io) - Neos or TYPO3 Neos (for version 1) is a modern, open source CMS. ([Source Code](https://github.com/neos)) `GPL-3.0` `PHP`\n- [Noosfero](https://gitlab.com/noosfero/noosfero) - Platform for social and solidarity economy networks with blog, e-Portfolios, CMS, RSS, thematic discussion, events agenda and collective intelligence for solidarity economy in the same system. `AGPL-3.0` `Ruby`\n- [Omeka](https://omeka.org) - Create complex narratives and share rich collections, adhering to Dublin Core standards with Omeka on your server, designed for scholars, museums, libraries, archives, and enthusiasts. ([Demo](https://omeka.org/classic/showcase/), [Source Code](https://github.com/omeka/Omeka)) `GPL-3.0` `PHP`\n- [Payload CMS](https://payloadcms.com/) - Developer-first headless CMS and application framework. ([Source Code](https://github.com/payloadcms/payload)) `MIT` `Nodejs`\n- [Pimcore](http://www.pimcore.com/) - Multi-channel experience and engagement management platform. ([Source Code](https://github.com/pimcore/pimcore)) `GPL-3.0` `PHP/Docker`\n- [Plone](https://plone.org/) - Powerful open-source CMS system. ([Source Code](https://github.com/plone)) `ZPL-2.0` `Python/Docker`\n- [Publify](https://publify.github.io/) - Simple but full featured web publishing software. ([Source Code](https://github.com/publify/publify)) `MIT` `Ruby`\n- [REDAXO](https://www.redaxo.org) - Simple, flexible and useful content management system (documentation in German). ([Source Code](https://github.com/redaxo/redaxo)) `MIT` `PHP/Docker`\n- [Roadiz](https://www.roadiz.io/) - Modern CMS based on a node system which can handle many types of services. ([Source Code](https://github.com/roadiz/roadiz)) `MIT` `PHP`\n- [SilverStripe](https://www.silverstripe.org) - Easy to use CMS with powerful MVC framework underlying. ([Demo](https://demo.silverstripe.org/), [Source Code](https://github.com/silverstripe)) `BSD-3-Clause` `PHP`\n- [SPIP](https://www.spip.net/fr) - Publication system for the Internet aimed at collaborative work, multilingual environments, and simplicity of use for web authors. ([Source Code](https://git.spip.net/)) `GPL-3.0` `PHP`\n- [Squidex](https://squidex.io) - Headless CMS, based on MongoDB, CQRS and Event Sourcing. ([Demo](https://cloud.squidex.io), [Source Code](https://github.com/Squidex/squidex)) `MIT` `.NET`\n- [Strapi](https://strapi.io/) - The most advanced open-source Content Management Framework (headless-CMS) to build powerful API with no effort. ([Source Code](https://github.com/strapi/strapi)) `MIT` `Nodejs`\n- [Superdesk](https://superdesk.org/) `⚠` - End-to-end news creation, production, curation, distribution, and publishing platform. ([Source Code](https://github.com/superdesk/superdesk)) `AGPL-3.0` `Docker/Python/PHP`\n- [Textpattern](https://textpattern.com/) - Flexible, elegant and easy-to-use CMS. ([Demo](https://textpattern.co/demo), [Source Code](https://github.com/textpattern/textpattern)) `GPL-2.0` `PHP`\n- [Typemill](https://typemill.net/) - Author-friendly flat-file-cms with a visual markdown editor based on vue.js. ([Source Code](https://github.com/typemill/typemill)) `MIT` `PHP`\n- [TYPO3](https://typo3.org/) - Powerful and advanced CMS with a large community. ([Source Code](https://github.com/TYPO3/typo3)) `GPL-2.0` `PHP`\n- [Umbraco](https://umbraco.com/) - The friendly CMS. Free and open source with an amazing community. ([Source Code](https://github.com/umbraco/Umbraco-CMS)) `MIT` `.NET`\n- [Vvveb CMS](https://www.vvveb.com) - Powerful and easy to use CMS to build websites, blogs or e-commerce stores. ([Demo](https://demo.vvveb.com), [Source Code](https://github.com/givanz/Vvveb)) `AGPL-3.0` `PHP/Docker`\n- [Wagtail](https://wagtail.io/) - Django content management system focused on flexibility and user experience. ([Source Code](https://github.com/wagtail/wagtail)) `BSD-3-Clause` `Python`\n- [WinterCMS](https://wintercms.com/) - Speedy and secure content management system built on the Laravel PHP framework. ([Source Code](https://github.com/wintercms/winter)) `MIT` `PHP`\n- [WonderCMS](https://www.wondercms.com) - WonderCMS is the smallest flat file CMS since 2008. ([Demo](https://www.wondercms.com/demo), [Source Code](https://github.com/WonderCMS/wondercms)) `MIT` `PHP`\n- [WordPress](https://wordpress.org/) - World's most-used blogging and CMS engine. ([Source Code](https://github.com/WordPress/WordPress)) `GPL-2.0` `PHP`\n\n\n### Customer Relationship Management (CRM)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Customer relationship management (CRM)](https://en.wikipedia.org/wiki/Customer_relationship_management) is a strategic process that organizations use to manage, analyze, and improve their interactions with customers.\n\n_Related: [Communication - Email - Mailing Lists and Newsletters](#communication---email---mailing-lists-and-newsletters), [Analytics](#analytics), [Calendar & Contacts](#calendar--contacts)_\n\n- [Corteza](https://docs.cortezaproject.org) - CRM including a unified workspace, enterprise messaging and a low code environment for rapidly and securely delivering records-based management solutions. ([Demo](https://latest.cortezaproject.org), [Source Code](https://github.com/cortezaproject/corteza)) `Apache-2.0` `Go`\n- [Django-CRM](https://DjangoCRM.github.io/info/) - Analytical CRM with tasks management, email marketing and many more. Django CRM is built for individual use, businesses of any size or freelancers and is designed to provide easy customization and quick development. ([Source Code](https://github.com/DjangoCRM/django-crm)) `AGPL-3.0` `Python`\n- [EspoCRM](https://www.espocrm.com/) - CRM with a frontend designed as a single page application, and a REST API. ([Demo](https://demo.espocrm.com/), [Source Code](https://github.com/espocrm/espocrm)) `AGPL-3.0` `PHP`\n- [Krayin](https://krayincrm.com/) - CRM solution for SMEs and Enterprises for complete customer lifecycle management. ([Demo](https://demo.krayincrm.com/), [Source Code](https://github.com/krayin/laravel-crm)) `MIT` `PHP`\n- [Monica](https://monicahq.com/) - Personal relationship manager, and a new kind of CRM to organize interactions with your friends and family. ([Source Code](https://github.com/monicahq/monica)) `AGPL-3.0` `PHP/Docker`\n- [SuiteCRM](https://suitecrm.com) - The award-winning, enterprise-class open source CRM. ([Source Code](https://github.com/SuiteCRM/SuiteCRM)) `AGPL-3.0` `PHP`\n- [Twenty](https://twenty.com) - A modern CRM offering the flexibility of open source, advanced features, and a sleek design. ([Source Code](https://github.com/twentyhq/twenty)) `AGPL-3.0` `Docker`\n\n\n### Database Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nWeb interfaces for [database](https://en.wikipedia.org/wiki/Database) management. Includes tools for database analytics and visualization.\n\n_Related: [Analytics](#analytics), [Automation](#automation)_\n\n_See also: [dbdb.io - Database of Databases](https://dbdb.io/)_\n\n- [Adminer](https://www.adminer.org/) - Database management in a single PHP file. Available for MySQL, MariaDB, PostgreSQL, SQLite, MS SQL, Oracle, Elasticsearch, MongoDB and others. ([Source Code](https://github.com/vrana/adminer)) `Apache-2.0/GPL-2.0` `PHP`\n- [Azimutt](https://azimutt.app) - Visual database exploration made for real world databases (big and messy). Explore your database schema as well as data, document them, extend them and even get analysis and guidelines. ([Demo](https://azimutt.app/gallery/gospeak), [Source Code](https://github.com/azimuttapp/azimutt)) `MIT` `Elixir/Nodejs/Docker`\n- [Baserow](https://baserow.io/) - Create your own database without technical experience (alternative to Airtable). ([Source Code](https://gitlab.com/baserow/baserow)) `MIT` `Docker`\n- [Bytebase](https://www.bytebase.com/) - Safe database schema change and version control for DevOps teams, supports MySQL, PostgreSQL, TiDB, ClickHouse, and Snowflake. ([Demo](https://demo.bytebase.com), [Source Code](https://github.com/bytebase/bytebase)) `MIT` `Docker/K8S/Go`\n- [Chartbrew](https://chartbrew.com) - Connect directly to databases and APIs and use the data to create beautiful charts. ([Demo](https://app.chartbrew.com/live-demo), [Source Code](https://github.com/chartbrew/chartbrew)) `MIT` `Nodejs/Docker`\n- [ChartDB](https://chartdb.io/) - Database diagrams editor that allows you to visualize and design your DB with a single query. ([Demo](https://app.chartdb.io), [Source Code](https://github.com/chartdb/chartdb)) `AGPL-3.0` `Nodejs/Docker`\n- [CloudBeaver](https://dbeaver.com/) - Manage databases, supports PostgreSQL, MySQL, SQLite and more. A web/hosted version of DBeaver. ([Source Code](https://github.com/dbeaver/cloudbeaver)) `Apache-2.0` `Docker`\n- [Databunker](https://databunker.org/) - Network-based, self-hosted, GDPR compliant, secure database for personal data or PII. ([Source Code](https://github.com/securitybunker/databunker)) `MIT` `Docker`\n- [Datasette](https://datasette.io/) - Explore and publish data with easy import and export and database management. ([Demo](https://global-power-plants.datasettes.com/global-power-plants/global-power-plants), [Source Code](https://github.com/simonw/datasette)) `Apache-2.0` `Python/Docker`\n- [Evidence](https://evidence.dev) - Code-based BI tool. Write reports using SQL and markdown and they render as a website. ([Source Code](https://github.com/evidence-dev/evidence)) `MIT` `Nodejs`\n- [Kottster](https://kottster.app/) - Low-code admin panel that connects to your database and automatically generates pages to view and manage your data. ([Demo](https://demo.kottster.app/), [Source Code](https://github.com/kottster/kottster)) `Apache-2.0` `Nodejs/Docker`\n- [Limbas](https://www.limbas.com/en/) - Database framework for creating database-driven business applications. As a graphical database frontend, it enables the efficient processing of data stocks and the flexible development of comfortable database applications. ([Source Code](https://github.com/limbas/limbas)) `GPL-2.0` `PHP`\n- [Mathesar](https://mathesar.org/) - Intuitive UI to manage data collaboratively, for users of all technical skill levels. Built on Postgres – connect an existing DB or set up a new one. ([Source Code](https://github.com/mathesar-foundation/mathesar)) `GPL-3.0` `Docker/Python`\n- [NocoDB](https://www.nocodb.com/) - No-code platform that turns any database into a smart spreadsheet (alternative to Airtable and Smartsheet). ([Source Code](https://github.com/nocodb/nocodb)) `AGPL-3.0` `Nodejs/Docker`\n- [WebDB](https://webdb.app) - Efficient database IDE. ([Demo](https://demo.webdb.app/), [Source Code](https://gitlab.com/web-db/app)) `AGPL-3.0` `Docker`\n\n\n### DNS\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[DNS](https://en.wikipedia.org/wiki/Domain_Name_System) servers and management tools with advertisement blocking functionality, primarily aimed at home or small networks.\n\n_See also: [awesome-sysadmin/DNS - Servers](https://github.com/awesome-foss/awesome-sysadmin#dns---servers), [awesome-sysadmin/DNS - Control Panels & Domain Management](https://github.com/awesome-foss/awesome-sysadmin#dns---control-panels--domain-management)_\n\n- [AdGuard Home](https://adguard.com/en/adguard-home/overview.html) - User-friendly ads & trackers blocking DNS server. ([Source Code](https://github.com/AdguardTeam/AdGuardHome)) `GPL-3.0` `Docker`\n- [blocky](https://0xerr0r.github.io/blocky/latest/) - Fast and lightweight DNS proxy as ad-blocker for local network with many features (alternative to Pi-hole). ([Source Code](https://github.com/0xERR0R/blocky)) `Apache-2.0` `Go/Docker`\n- [Maza ad blocking](https://maza-ad-blocking.andros.dev/) - Local ad blocker. Like Pi-hole but local and using your operating system. ([Source Code](https://github.com/tanrax/maza-ad-blocking)) `Apache-2.0` `Shell`\n- [Pi-hole](https://pi-hole.net/) - Blackhole for Internet advertisements with a GUI for management and monitoring. ([Source Code](https://github.com/pi-hole/pi-hole)) `EUPL-1.2` `Shell/PHP/Docker`\n- [Technitium DNS Server](https://technitium.com/dns/) - Authoritative/recursive DNS server with ad blocking functionality. ([Source Code](https://github.com/TechnitiumSoftware/DnsServer)) `GPL-3.0` `Docker/C#`\n\n\n### Document Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [document management system](https://en.wikipedia.org/wiki/Document_management_system) (DMS) is a system used to receive, track, manage and store documents and reduce paper.\n\n- [Docspell](https://docspell.org) - Auto-tagging document organizer and archive. ([Source Code](https://github.com/eikek/docspell)) `GPL-3.0` `Scala/Java/Docker`\n- [Documenso](https://documenso.com) - Digital document signing platform (alternative to DocuSign). ([Source Code](https://github.com/documenso/documenso)) `AGPL-3.0` `Nodejs/Docker`\n- [Docuseal](https://www.docuseal.co) - Create, fill, and sign digital documents (alternative to DocuSign). ([Demo](https://demo.docuseal.tech/), [Source Code](https://github.com/docusealco/docuseal)) `AGPL-3.0` `Docker`\n- [EveryDocs](https://github.com/jonashellmann/everydocs-core) - Simple Document Management System for private use with basic functionality to organize your documents digitally. `GPL-3.0` `Docker/Ruby`\n- [Gotenberg](https://gotenberg.dev) - Developer-friendly API to interact with powerful tools like Chromium and LibreOffice for converting numerous document formats (HTML, Markdown, Word, Excel, etc.) into PDF files, and more. ([Source Code](https://github.com/gotenberg/gotenberg)) `MIT` `Docker`\n- [I, Librarian](https://i-librarian.net) - Organize PDF papers and office documents. It provides a lot of extra features for students and research groups both in industry and academia. ([Demo](https://i-librarian.net/demo/), [Source Code](https://github.com/mkucej/i-librarian-free)) `GPL-3.0` `PHP`\n- [Mayan EDMS](https://www.mayan-edms.com) - Electronic document management system for your documents with preview generation, OCR, and automatic categorization among other features. ([Source Code](https://gitlab.com/mayan-edms/mayan-edms)) `GPL-2.0` `Docker/K8S`\n- [OpenSign](https://www.opensignlabs.com) `⚠` - Document signing software (alternative to DocuSign). ([Source Code](https://github.com/opensignlabs/opensign)) `AGPL-3.0` `Nodejs/Docker`\n- [Paperless-ngx](https://docs.paperless-ngx.com/) - Scan, index, and archive all of your paper documents with an improved interface (fork of Paperless). ([Demo](https://demo.paperless-ngx.com/), [Source Code](https://github.com/paperless-ngx/paperless-ngx)) `GPL-3.0` `Python/Docker`\n- [Papermerge](https://papermerge.com) - Document management system focused on scanned documents (electronic archives). Features file browsing in similar way to dropbox/google drive. OCR, full text search, text overlay/selection. ([Source Code](https://github.com/papermerge/papermerge-core)) `Apache-2.0` `Docker/K8S`\n- [Papra](https://papra.app) - Minimalist document storage, management and archiving platform designed to be simple to use and accessible to everyone. ([Demo](https://demo.papra.app/), [Source Code](https://github.com/papra-hq/papra/)) `AGPL-3.0` `Docker`\n- [PdfDing](https://github.com/mrmn2/PdfDing) - PDF manager, viewer and editor offering a seamless user experience on multiple devices. It's designed to be minimal, fast, and easy to set up using Docker. `AGPL-3.0` `Docker`\n- [SeedDMS](https://www.seeddms.org) - Document Management System with workflows, access rights, fulltext search, and more. ([Demo](https://www.seeddms.org/about/), [Source Code](https://sourceforge.net/p/seeddms/code/ci/master/tree/)) `GPL-2.0` `PHP`\n- [Signature PDF](https://github.com/24eme/signaturepdf) - Sign and manipulate PDFs with collaboration, organization, compression and metadata editing. ([Demo](https://pdf.24eme.fr/)) `AGPL-3.0` `PHP/deb/Docker`\n- [Stirling-PDF](https://github.com/Stirling-Tools/Stirling-PDF) - Local hosted web application that allows you to perform various operations on PDF files, such as merging, splitting, file conversions and OCR. `Apache-2.0` `Docker/Java`\n\n\n### Document Management - E-books\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Ebook](https://en.wikipedia.org/wiki/Ebook) library management software.\n\n- [Atsumeru](https://atsumeru.xyz) - Manga/comic/light novel media server with clients for Windows, Linux, macOS and Android. ([Source Code](https://github.com/Atsumeru-xyz/Atsumeru), [Clients](https://atsumeru.xyz/guides/#how-does-it-work)) `MIT` `Java/Docker`\n- [BookLogr](https://github.com/Mozzo1000/booklogr) - Manage your personal book library with ease. ([Demo](https://demo.booklogr.app/)) `Apache-2.0` `Docker`\n- [BookLore](https://github.com/booklore-app/booklore) - Host and manage books, with support for PDFs, eBooks, reading progress, metadata, and stats. `GPL-3.0` `Docker`\n- [Calibre Web](https://github.com/janeczku/calibre-web) - Browse, read and download eBooks using an existing Calibre database. `GPL-3.0` `Python`\n- [Calibre](https://calibre-ebook.com/) - E-book library manager that can view, convert, and catalog e-books in most of the major e-book formats and provides a built-in Web server for remote clients. ([Demo](https://calibre-ebook.com/demo), [Source Code](https://github.com/kovidgoyal/calibre)) `GPL-3.0` `Python/deb`\n- [Kapowarr](https://casvt.github.io/Kapowarr/) - Build and manage a comic book library. Download, rename, move and convert issues of the volume to your liking. ([Source Code](https://github.com/Casvt/Kapowarr)) `GPL-3.0` `Docker/Python`\n- [Kavita](https://www.kavitareader.com/) - Cross-platform e-book/manga/comic/pdf server and web reader with user management, ratings and reviews, and metadata support. ([Demo](https://www.kavitareader.com/#demo), [Source Code](https://github.com/Kareadita/Kavita)) `GPL-3.0` `.NET/Docker`\n- [kiwix-serve](https://www.kiwix.org/en/downloads/kiwix-serve/) - HTTP daemon for serving wikis from ZIM files. ([Source Code](https://github.com/kiwix/kiwix-tools)) `GPL-3.0` `C++`\n- [Komga](https://komga.org) - Media server for comics/mangas/BDs with API and OPDS support, a modern web interface for exploring your libraries, as well as a web reader. ([Source Code](https://github.com/gotson/komga)) `MIT` `Java/Docker`\n- [Stump](https://www.stumpapp.dev) - A fast, free and open source comics, manga and digital book server with OPDS support. ([Source Code](https://github.com/stumpapp/stump)) `MIT` `Rust`\n- [The Epube](https://tt-rss.org/ZeEpube/) - Self-hosted web EPUB reader using EPUB.js, Bootstrap, and Calibre. ([Source Code](https://gitlab.tt-rss.org/main/the-epube)) `GPL-3.0` `PHP`\n\n\n### Document Management - Institutional Repository and Digital Library Software\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Institutional repository](https://en.wikipedia.org/wiki/Institutional_repository) and [digital library](https://en.wikipedia.org/wiki/Digital_library) management software.\n\n- [DSpace](http://www.dspace.org/) - Turnkey repository application providing durable access to digital resources. ([Source Code](https://github.com/DSpace/DSpace)) `BSD-3-Clause` `Java`\n- [EPrints](https://www.eprints.org/) - Digital document management system with a flexible metadata and workflow model primarily aimed at academic institutions. ([Demo](http://tryme.demo.eprints-hosting.org/), [Source Code](https://github.com/eprints/eprints3.4)) `GPL-3.0` `Perl`\n- [Fedora Commons Repository](https://wiki.lyrasis.org/display/FF/Fedora+Repository+Home) - Robust and modular repository system for the management and dissemination of digital content especially suited for digital libraries and archives, both for access and preservation. ([Source Code](https://github.com/fcrepo/fcrepo)) `Apache-2.0` `Java`\n- [InvenioRDM](https://inveniordm.docs.cern.ch/) - Highly scalable turn-key research data management platform with a beautiful user experience. ([Demo](https://inveniordm.web.cern.ch/), [Source Code](https://github.com/inveniosoftware/invenio-app-rdm), [Clients](https://inveniosoftware.org/products/rdm/)) `MIT` `Python`\n- [Islandora](https://www.islandora.ca/) - Drupal module for browsing and managing Fedora-based digital repositories. ([Demo](https://sandbox.islandora.ca/), [Source Code](https://github.com/Islandora/islandora)) `GPL-3.0` `PHP`\n- [Samvera Hyrax](https://samvera.org/) - Front-end for the Samvera framework, which itself is a Ruby on Rails application for browsing and managing Fedora-based digital repositories. ([Source Code](https://github.com/samvera/hyrax)) `Apache-2.0` `Ruby`\n\n\n### Document Management - Integrated Library Systems (ILS)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nAn [integrated library system](https://en.wikipedia.org/wiki/Integrated_library_system) is an enterprise resource planning system for a library, used to track items owned, orders made, bills paid, and patrons who have borrowed.\n\n_Related: [Content Management Systems (CMS)](#content-management-systems-cms), [Archiving and Digital Preservation (DP)](#archiving-and-digital-preservation-dp)_\n\n- [Evergreen](https://evergreen-ils.org) - Highly-scalable software for libraries that helps library patrons find library materials, and helps libraries manage, catalog, and circulate those materials. ([Source Code](https://github.com/evergreen-library-system/Evergreen)) `GPL-2.0` `PLpgSQL`\n- [Koha](https://koha-community.org/) - Enterprise-class ILS with modules for acquisitions, circulation, cataloging, label printing, offline circulation for when Internet access is not available, and much more. ([Demo](https://koha-community.org/demo/), [Source Code](https://github.com/Koha-Community/Koha)) `GPL-3.0` `Perl`\n- [RERO ILS](https://rero21.ch/) - Large-scale ILS that can be run as a service with consortial features, intended primarily for library networks. Includes most standard modules (circulation, acquisitions, cataloging,...) and a web-based public and professional interface. ([Demo](https://ils.test.rero.ch/), [Source Code](https://github.com/rero/rero-ils)) `AGPL-3.0` `Python/Docker`\n\n\n### E-commerce\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[E-commerce](https://en.wikipedia.org/wiki/E-commerce) software.\n\n_Related: [Community-Supported Agriculture (CSA)](#community-supported-agriculture-csa)_\n\n- [Aimeos](https://aimeos.org/) - E-commerce framework for building custom online shops, market places and complex B2B applications scaling to billions of items with Laravel. ([Demo](https://demo.aimeos.org/), [Source Code](https://github.com/aimeos/aimeos)) `LGPL-3.0/MIT` `PHP`\n- [Bagisto](https://bagisto.com/en/) - Leading Laravel open source e-commerce framework with multi-inventory sources, taxation, localization, dropshipping and more exciting features. ([Demo](https://demo.bagisto.com/), [Source Code](https://github.com/bagisto/bagisto)) `MIT` `PHP`\n- [CoreShop](https://www.coreshop.org) - E-commerce plugin for Pimcore. ([Source Code](https://github.com/coreshop/CoreShop)) `GPL-3.0` `PHP`\n- [Drupal Commerce](https://drupalcommerce.org) - Popular e-commerce module for Drupal CMS, with support for dozens of payment, shipping, and shopping related modules. ([Source Code](https://git.drupalcode.org/project/commerce)) `GPL-2.0` `PHP`\n- [EverShop](https://evershop.io/) `⚠` - E-commerce platform with essential commerce features. Modular architecture and fully customizable. ([Demo](https://demo.evershop.io/), [Source Code](https://github.com/evershopcommerce/evershop)) `GPL-3.0` `Docker/Nodejs`\n- [Litecart](https://github.com/shurco/litecart) `⚠` - Shopping cart in 1 file (with support for payment by card or cryptocurrency). `MIT` `Go/Docker`\n- [Magento Open Source](https://business.adobe.com/products/magento/magento-commerce.html) - Leading provider of open omnichannel innovation. ([Source Code](https://github.com/magento/magento2)) `OSL-3.0` `PHP`\n- [MedusaJs](https://medusajs.com/) - Headless commerce engine that enables developers to create amazing digital commerce experiences. ([Demo](https://next.medusajs.com/), [Source Code](https://github.com/medusajs/medusa)) `MIT` `Nodejs`\n- [Microweber](https://microweber.com/) - Drag and Drop CMS and online shop. ([Source Code](https://github.com/microweber/microweber)) `MIT` `PHP`\n- [Open Source POS](https://github.com/opensourcepos/opensourcepos) - Open Source Point of Sale is a web based point of sale system. `MIT` `PHP`\n- [OpenCart](https://www.opencart.com) - Shopping cart solution. ([Source Code](https://github.com/opencart/opencart)) `GPL-3.0` `PHP`\n- [PrestaShop](https://www.prestashop.com/) - Fully scalable e-commerce solution. ([Demo](https://demo.prestashop.com/), [Source Code](https://github.com/PrestaShop/PrestaShop)) `OSL-3.0` `PHP`\n- [Pretix](https://pretix.eu/) - Ticket sales platform for events. ([Source Code](https://github.com/pretix/pretix)) `AGPL-3.0` `Python/Docker`\n- [s-cart](https://s-cart.org/) - E-commerce website for individuals and businesses, built on top of Laravel Framework. ([Demo](https://demo.s-cart.org/), [Source Code](https://github.com/gp247net/s-cart)) `MIT` `PHP`\n- [Saleor](https://saleor.io) - Django based open-sourced e-commerce storefront. ([Demo](https://demo.saleor.io/), [Source Code](https://github.com/saleor/saleor)) `BSD-3-Clause` `Docker/Python`\n- [Shopware Community Edition](https://www.shopware.com/en/community/community-edition/) - PHP based open source e-commerce software made in Germany. ([Demo](https://www.shopware.com/en/test-demo/), [Source Code](https://github.com/shopware/shopware)) `MIT` `PHP`\n- [Solidus](https://solidus.io/) - A free, open-source ecommerce platform that gives you complete control over your store. ([Source Code](https://github.com/solidusio/solidus)) `BSD-3-Clause` `Ruby/Docker`\n- [Spree Commerce](https://spreecommerce.org) - Spree is a complete, modular & API-driven open source e-commerce solution for Ruby on Rails. ([Demo](https://demo.spreecommerce.org/), [Source Code](https://github.com/spree/spree)) `BSD-3-Clause` `Ruby`\n- [Sylius](https://sylius.com) - Symfony2 powered open source full-stack platform for eCommerce. ([Demo](https://sylius.com/try/), [Source Code](https://github.com/Sylius/Sylius)) `MIT` `PHP`\n- [Thelia](https://thelia.net/) - Thelia is an open source and flexible e-commerce solution. ([Demo](https://demo.thelia.net/), [Source Code](https://github.com/thelia/thelia)) `LGPL-3.0` `PHP`\n- [Vendure](https://www.vendure.io) - A headless commerce framework. ([Demo](https://demo.vendure.io), [Source Code](https://github.com/vendure-ecommerce/vendure)) `MIT` `Nodejs`\n- [WooCommerce](https://woocommerce.com/) - WordPress based e-commerce solution. ([Source Code](https://github.com/woocommerce/woocommerce)) `GPL-3.0` `PHP`\n\n\n### Federated Identity & Authentication\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Federated identity](https://en.wikipedia.org/wiki/Federated_identity) and [authentication](https://en.wikipedia.org/wiki/Electronic_authentication) software.\n\n**Please visit [awesome-sysadmin/Identity Management](https://github.com/awesome-foss/awesome-sysadmin#identity-management)**\n\n\n\n### Feed Readers\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [news aggregator](https://en.wikipedia.org/wiki/News_aggregator), also termed a feed aggregator, feed reader, news reader, [RSS](https://en.wikipedia.org/wiki/RSS) reader, is an application that aggregates web content such as newspapers/blogs/vlogs/podcasts in one location for easy viewing.\n\n- [Bubo Reader](https://github.com/georgemandis/bubo-rss) - Irrationally minimal RSS feed reader. ([Demo](https://bubo-rss-demo.netlify.app/)) `MIT` `Nodejs`\n- [CommaFeed](https://www.commafeed.com/) - Google Reader inspired self-hosted RSS reader. ([Demo](https://www.commafeed.com/#/app/category/all), [Source Code](https://github.com/Athou/commafeed)) `Apache-2.0` `Java/Docker`\n- [FeedCord](https://github.com/Qolors/FeedCord) `⚠` - Simple, lightweight & customizable RSS News Feed for your Discord Server. `MIT` `Docker`\n- [Feedpushr](https://github.com/ncarlier/feedpushr) - Powerful RSS aggregator, able to transform and send articles to many outputs. Single binary, extensible with plugins. `GPL-3.0` `Go/Docker`\n- [Feeds Fun](https://feeds.fun/) - News reader with tags, scoring, and AI. ([Source Code](https://github.com/Tiendil/feeds.fun)) `BSD-3-Clause` `Python`\n- [FreshRSS](https://freshrss.org/) - Self-hostable RSS feed aggregator. ([Demo](https://demo.freshrss.org/i/), [Source Code](https://github.com/FreshRSS/FreshRSS)) `AGPL-3.0` `PHP/Docker`\n- [Fusion](https://github.com/0x2E/fusion) - Lightweight RSS aggregator and reader. `MIT` `Go/Docker`\n- [JARR](https://1pxsolidblack.pl/jarr-en.html) - JARR (Just Another RSS Reader) is a web-based news aggregator and reader (fork of Newspipe). ([Demo](https://www.jarr.info/), [Source Code](https://github.com/jaesivsm/JARR)) `AGPL-3.0` `Docker/Python`\n- [Kriss Feed](https://github.com/tontof/kriss_feed) - Simple and smart (or stupid) feed reader. `CC0-1.0` `PHP`\n- [Leed](https://github.com/LeedRSS/Leed) - Leed (for Light Feed) is a Free and minimalist RSS aggregator. `AGPL-3.0` `PHP`\n- [Miniflux](https://miniflux.app/) - Minimalist news reader. ([Source Code](https://github.com/miniflux/v2)) `Apache-2.0` `Go/deb/Docker`\n- [NewsBlur](https://www.newsblur.com/) - Personal news reader that brings people together to talk about the world. A new sound of an old instrument. ([Source Code](https://github.com/samuelclay/NewsBlur)) `MIT` `Python`\n- [Newspipe](https://git.sr.ht/~cedric/newspipe) - Web news reader. ([Demo](https://www.newspipe.org/signup)) `AGPL-3.0` `Python`\n- [Precis](https://github.com/leozqin/precis) - Extensibility-oriented RSS reader that can use LLMs (including local LLMs) to summarize RSS entries with built-in notification support. `MIT` `Python/Docker`\n- [reader](https://github.com/lemon24/reader) - Feed reader web app and library (so you can use it to build your own), with only standard library and pure-Python dependencies. `BSD-3-Clause` `Python`\n- [Readflow](https://readflow.app) - Lightweight news reader with modern interface and features: full-text search, automatic categorization, archiving, offline support, notifications. ([Source Code](https://github.com/ncarlier/readflow)) `AGPL-3.0` `Go/Docker`\n- [RSS-Bridge](https://github.com/RSS-Bridge/rss-bridge) - Generate RSS/ATOM feeds for websites which don't have one. `Unlicense` `PHP/Docker`\n- [RSS Monster](https://github.com/pietheinstrengholt/rssmonster) - Easy to use web-based RSS aggregator and reader compatible with the Fever API (alternative to Google Reader). `MIT` `PHP`\n- [RSS2EMail](https://github.com/rss2email/rss2email) - Fetches RSS/Atom-feeds and pushes new content to any email-receiver, supports OPML. `GPL-2.0` `Python/deb`\n- [RSSHub](https://docs.rsshub.app) - Easy to use, and extensible RSS feed aggregator capable of generating RSS feeds from pretty much everything ranging from social media to university departments. ([Demo](https://rsshub.app), [Source Code](https://github.com/DIYgod/RSSHub)) `MIT` `Nodejs/Docker`\n- [Selfoss](https://selfoss.aditu.de/) - New multipurpose rss reader, live stream, mashup, aggregation web application. ([Source Code](https://github.com/fossar/selfoss)) `GPL-3.0` `PHP`\n- [Stringer](https://github.com/stringer-rss/stringer) - Work-in-progress self-hosted, anti-social RSS reader. `MIT` `Ruby`\n- [Tiny Tiny RSS](https://tt-rss.org) - Open source web-based news feed (RSS/Atom) reader and aggregator. ([Demo](https://demo.tt-rss.org/), [Source Code](https://git.tt-rss.org/fox/tt-rss)) `GPL-3.0` `Docker/PHP`\n- [TinyFeed](https://feed.lovergne.dev/) - Generate a static HTML page from a collection of feeds wtih a simple CLI. ([Demo](https://feed.lovergne.dev/demo), [Source Code](https://github.com/TheBigRoomXXL/tinyfeed)) `MIT` `Go/Docker`\n- [Yarr](https://github.com/nkanaev/yarr) - Yarr (yet another rss reader) is a web-based feed aggregator which can be used both as a desktop application and a personal self-hosted server. `MIT` `Go`\n\n\n### File Transfer & Synchronization\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[File transfer](https://en.wikipedia.org/wiki/File_transfer), [sharing](https://en.wikipedia.org/wiki/File_sharing) and [synchronization software](https://en.wikipedia.org/wiki/File_synchronization) software.\n\n_Related: [Groupware](#groupware)_\n\n- [bewCloud](https://bewcloud.com) - File sharing + sync, notes, and photos (alternative to Nextcloud and ownCloud's RSS reader). ([Source Code](https://github.com/bewcloud/bewcloud), [Clients](https://github.com/bewcloud)) `AGPL-3.0` `Docker`\n- [Cloudreve](https://cloudreve.org/) - File management and sharing system, supports multiple storage providers. ([Demo](https://demo.cloudreve.org), [Source Code](https://github.com/cloudreve/cloudreve)) `GPL-3.0` `Docker/Go`\n- [Git Annex](https://git-annex.branchable.com/) - File synchronization between computers, servers, external drives. ([Source Code](https://git.joeyh.name/index.cgi/git-annex.git/)) `GPL-3.0` `Haskell`\n- [Kinto](https://kinto.readthedocs.org) - Minimalist JSON storage service with synchronisation and sharing abilities. ([Source Code](https://github.com/Kinto/kinto)) `Apache-2.0` `Python`\n- [Nextcloud](https://nextcloud.com/) - Access and share your files, calendars, contacts, mail and [more](https://apps.nextcloud.com/) from any device, on your terms. ([Demo](https://try.nextcloud.com/), [Source Code](https://github.com/nextcloud/server)) `AGPL-3.0` `PHP/deb`\n- [OpenSSH SFTP server](https://www.openssh.com/) - Secure File Transfer Program. ([Source Code](https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/)) `BSD-2-Clause` `C/deb`\n- [ownCloud](https://owncloud.org/) - All-in-one solution for saving, synchronizing, viewing, editing and sharing files, calendars, address books and more. ([Source Code](https://github.com/owncloud/core), [Clients](https://github.com/owncloud/core/wiki/Apps)) `AGPL-3.0` `PHP/Docker/deb`\n- [Peergos](https://peergos.org) - Secure and private space online where you can store, share and view your photos, videos, music and documents. Also includes a calendar, news feed, task lists, chat and email client. ([Source Code](https://github.com/Peergos/Peergos)) `AGPL-3.0` `Java`\n- [Puter](https://puter.com/) - Web-based operating system designed to be feature-rich, exceptionally fast, and highly extensible. ([Demo](https://puter.com/), [Source Code](https://github.com/heyputer/puter)) `AGPL-3.0` `Nodejs/Docker`\n- [Pydio](https://pydio.com/) - Turn any web server into a powerful file management system and an alternative to mainstream cloud storage providers. ([Demo](https://pydio.com/en/demo), [Source Code](https://github.com/pydio/cells)) `AGPL-3.0` `Go`\n- [Samba](https://www.samba.org/) - Samba is the standard Windows interoperability suite of programs for Linux and Unix. It provides secure, stable and fast file and print services for all clients using the SMB/CIFS protocol. ([Source Code](https://git.samba.org/samba.git/)) `GPL-3.0` `C`\n- [Seafile](https://www.seafile.com/en/home/) - File hosting and sharing solution primary for teams and organizations. ([Source Code](https://github.com/haiwen/seafile)) `GPL-2.0/GPL-3.0/AGPL-3.0/Apache-2.0` `C`\n- [Sync-in](https://sync-in.com) - File storage, syncing, sharing, and collaboration with real-time editing, permission management, and desktop/CLI clients. ([Demo](https://sync-in.com/docs/demo), [Source Code](https://github.com/Sync-in/server), [Clients](https://github.com/Sync-in/desktop)) `AGPL-3.0` `Nodejs/Docker`\n- [Syncthing](https://syncthing.net/) - Syncthing is an open source peer-to-peer file synchronisation tool. ([Source Code](https://github.com/syncthing/syncthing)) `MPL-2.0` `Go/Docker/deb`\n- [Unison](https://www.cis.upenn.edu/~bcpierce/unison/) - Unison is a file-synchronization tool for OSX, Unix, and Windows. ([Source Code](https://github.com/bcpierce00/unison)) `GPL-3.0` `deb/OCaml`\n\n\n### File Transfer - Distributed Filesystems\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nNetwork distributed filesystems.\n\n**Please visit [awesome-sysadmin/Distributed Filesystems](https://github.com/awesome-foss/awesome-sysadmin#distributed-filesystems)**\n\n\n\n### File Transfer - Object Storage & File Servers\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Object storage](https://en.wikipedia.org/wiki/Object_storage) is a computer data storage that manages data as objects, as opposed to other storage architectures like file systems which manages data as a file hierarchy, and block storage which manages data as blocks within sectors and tracks.\n\n- [GarageHQ](https://garagehq.deuxfleurs.fr/) - Geo-distributed, S3‑compatible storage service that can fulfill many needs. ([Source Code](https://git.deuxfleurs.fr/Deuxfleurs/garage)) `AGPL-3.0` `Docker/Rust`\n- [Harbor](https://goharbor.io/) - Cloud native image registry that stores, signs, and scans content. ([Source Code](https://github.com/goharbor/harbor)) `Apache-2.0` `Docker/K8S`\n- [Minio](https://min.io/) - Object storage server compatible with Amazon S3 APIs. ([Source Code](https://github.com/minio/minio)) `AGPL-3.0` `Go/Docker/K8S`\n- [SeaweedFS](https://github.com/seaweedfs/seaweedfs) - SeaweedFS is an open source distributed file system supporting WebDAV, S3 API, FUSE mount, HDFS, etc, optimized for lots of small files, and easy to add capacity. `Apache-2.0` `Go`\n- [SFTPGo](https://github.com/drakkan/sftpgo) - Flexible, fully featured and highly configurable SFTP server with optional FTP/S and WebDAV support. `AGPL-3.0` `Go/deb/Docker`\n- [Zenko CloudServer](https://www.zenko.io/cloudserver) - Zenko CloudServer, an open-source implementation of a server handling the Amazon S3 protocol. ([Source Code](https://github.com/scality/cloudserver)) `Apache-2.0` `Docker/Nodejs`\n- [ZOT OCI Registry](https://zotregistry.dev) - A production-ready vendor-neutral OCI-native container image registry. ([Demo](https://zothub.io), [Source Code](https://github.com/project-zot/zot)) `Apache-2.0` `Go/Docker`\n\n\n### File Transfer - Peer-to-peer Filesharing\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Peer-to-peer file sharing](https://en.wikipedia.org/wiki/Peer-to-peer_file_sharing) is the distribution and [sharing](https://en.wikipedia.org/wiki/File_sharing) of digital media using [peer-to-peer](https://en.wikipedia.org/wiki/Peer-to-peer) (P2P) networking technology.\n\n- [bittorrent-tracker](https://webtorrent.io/) - Simple, robust, BitTorrent tracker (client and server) implementation. ([Source Code](https://github.com/webtorrent/bittorrent-tracker)) `MIT` `Nodejs`\n- [Deluge](https://deluge-torrent.org/) - Lightweight, cross-platform BitTorrent client. ([Source Code](https://git.deluge-torrent.org/deluge/tree/?h=develop)) `GPL-3.0` `Python/deb`\n- [qBittorrent](https://www.qbittorrent.org/) - Free cross-platform bittorrent client with a feature rich Web UI for remote access. ([Source Code](https://github.com/qbittorrent/qBittorrent)) `GPL-2.0` `C++`\n- [Send](https://gitlab.com/timvisee/send) - Simple, private, end to end encrypted temporary file sharing, originally built by Mozilla. ([Demo](https://send.vis.ee/), [Clients](https://gitlab.com/timvisee/send#clients)) `MPL-2.0` `Nodejs/Docker`\n- [slskd](https://github.com/slskd/slskd) `⚠` - A modern client-server application for the Soulseek file sharing network. `AGPL-3.0` `Docker/C#`\n- [Transmission](https://transmissionbt.com/) - Fast, easy, free Bittorrent client. ([Source Code](https://github.com/transmission/transmission)) `GPL-3.0` `C++/deb`\n- [Webtor](https://github.com/webtor-io/self-hosted) - Web-based torrent client with instant audio/video streaming. ([Demo](https://webtor.io)) `MIT` `Docker`\n\n\n### File Transfer - Single-click & Drag-n-drop Upload\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSimplified file servers for sharing of one-time/short-lived/temporary files, providing single-click or [drag-and-drop](https://en.wikipedia.org/wiki/Drag_and_drop) upload functionality.\n\n- [Chibisafe](https://chibisafe.app) - File uploader service that aims to to be easy to use and set up. It accepts files, photos, documents, anything you imagine and gives you back a shareable link for you to send to others. ([Source Code](https://github.com/chibisafe/chibisafe)) `MIT` `Docker/Nodejs`\n- [Digirecord](https://ladigitale.dev/digirecord/) - Record and share audio files (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digirecord)) `AGPL-3.0` `Nodejs/PHP`\n- [elixire](https://gitlab.com/elixire/elixire) - Simple yet advanced screenshot uploading and link shortening service. ([Clients](https://gitlab.com/elixire/elixiremanager)) `AGPL-3.0` `Python`\n- [Enclosed](https://enclosed.cc/) - Minimalistic web application designed for sending private and secure notes. ([Demo](https://enclosed.cc/), [Source Code](https://github.com/CorentinTh/enclosed)) `Apache-2.0` `Docker/Nodejs`\n- [Files Sharing](https://github.com/axeloz/filesharing) - File sharing application based on unique and temporary links. `GPL-3.0` `PHP/Docker`\n- [Flare](https://github.com/FlintSH/Flare) - A nonbloated, modern, and highly configurable file/screenshot vault server with support for ShareX, Flameshot, and Spectacle. Offers OCR search and more. `MIT` `Docker/Nodejs`\n- [Gokapi](https://github.com/Forceu/gokapi) - Lightweight server to share files, which expire after a set amount of downloads or days. Similar to the discontinued Firefox Send, with the difference that only the admin is allowed to upload files. `GPL-3.0` `Go/Docker`\n- [goploader](https://depado.github.io/goploader/) - Easy file sharing with server-side encryption, curl/httpie/wget compliant. ([Source Code](https://github.com/Depado/goploader)) `MIT` `Go`\n- [GoSƐ](https://github.com/stv0g/gose) - Modern file-uploader focusing on scalability and simplicity. It only depends on a S3 storage backend and hence scales horizontally without the need for additional databases or caches. `Apache-2.0` `Go/Docker`\n- [OnionShare](https://github.com/onionshare/onionshare) - Securely and anonymously share a file of any size. `GPL-3.0` `Python/deb`\n- [Pairdrop](https://pairdrop.net/) - Local file sharing in your browser, inspired by Apple's AirDrop (fork of Snapdrop). ([Source Code](https://github.com/schlagmichdoch/pairdrop)) `GPL-3.0` `Docker`\n- [PicoShare](https://pico.rocks) - Minimalist, easy-to-host service for sharing images and other files. ([Demo](https://demo.pico.rocks), [Source Code](https://github.com/mtlynch/picoshare)) `AGPL-3.0` `Go/Docker`\n- [Picsur](https://github.com/CaramelFur/Picsur) - Simple imaging hosting platform that allows you to easily host, edit, and share images. ([Demo](https://picsur.org/upload)) `AGPL-3.0` `Docker`\n- [PictShare](https://www.pictshare.net/) - Multi lingual image hosting service with a simple resizing and upload API. ([Source Code](https://github.com/HaschekSolutions/pictshare)) `Apache-2.0` `PHP/Docker`\n- [Plik](https://github.com/root-gg/plik) - Scalable and friendly temporary file upload system. ([Demo](https://plik.root.gg/)) `MIT` `Go/Docker`\n- [ProjectSend](https://www.projectsend.org/) - Upload files and assign them to specific clients you create. Give access to those files to your clients. ([Source Code](https://github.com/projectsend/projectsend)) `GPL-2.0` `PHP`\n- [PsiTransfer](https://github.com/psi-4ward/psitransfer) - Simple file sharing solution with robust up-/download-resume and password protection. `BSD-2-Clause` `Nodejs`\n- [QuickShare](https://ihexxa.github.io/quickshare.site/) - Quick and simple file sharing between different devices. ([Source Code](https://github.com/ihexxa/quickshare)) `LGPL-3.0` `Docker/Go`\n- [Sharry](https://github.com/eikek/sharry) - Share files easily over the internet between authenticated and anonymous users (both ways) with resumable up- and downloads. `GPL-3.0` `Scala/Java/deb/Docker`\n- [Shifter](https://github.com/TobySuch/Shifter) - A simple, self-hosted file-sharing web app, powered by Django. `MIT` `Docker`\n- [Slink](https://docs.slinkapp.io/) - Image sharing platform designed to give users complete control over their media sharing experience. ([Source Code](https://github.com/andrii-kryvoviaz/slink)) `AGPL-3.0` `Docker`\n- [transfer.sh](https://github.com/dutchcoders/transfer.sh) - Easy file sharing from the command line. `MIT` `Go`\n- [Uguu](https://github.com/nokonoko/uguu) - Stores files and deletes after X amount of time. `MIT` `PHP`\n- [Uploady](https://github.com/farisc0de/Uploady) - Uploady is a simple file uploader script with multi file upload support. `MIT` `PHP`\n- [XBackBone](https://xbackbone.app/) - A simple, fast and lightweight file manager with instant sharing tools integration, like ShareX (a free and open-source screenshot utility for Windows). ([Source Code](https://github.com/SergiX44/XBackBone)) `AGPL-3.0` `PHP/Docker`\n- [Zipline](https://github.com/diced/zipline) - A lightweight, fast and reliable file sharing server that is commonly used with ShareX, offering a react-based Web UI and fast API. `MIT` `Docker/Nodejs`\n\n\n### File Transfer - Web-based File Managers\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nWeb-based [file managers](https://en.wikipedia.org/wiki/File_manager).\n\n_Related: [Groupware](#groupware)_\n\n- [Apaxy](https://oupala.github.io/apaxy/) - Theme built to enhance the experience of browsing web directories, using the mod_autoindex Apache module and some CSS to override the default style of a directory listing. ([Source Code](https://github.com/oupala/apaxy)) `GPL-3.0` `Javascript`\n- [copyparty](https://github.com/9001/copyparty) - Portable file server with accelerated resumable uploads, deduplication, WebDAV, FTP, zeroconf, media indexer, video thumbnails, audio transcoding, and write-only folders, in a single file with no mandatory dependencies. ([Demo](https://a.ocv.me/pub/demo/)) `MIT` `Python`\n- [Directory Lister](https://www.directorylister.com/) - Simple PHP based directory lister that lists a directory and all its sub-directories and allows you to navigate there within. ([Source Code](https://github.com/DirectoryLister/DirectoryLister)) `MIT` `PHP/Docker`\n- [filebrowser](https://filebrowser.org/) - Web File Browser with a Material Design web interface. ([Source Code](https://github.com/filebrowser/filebrowser)) `Apache-2.0` `Go`\n- [FileGator](https://filegator.io/) - FileGator is a powerful multi-user file manager with a single page front-end. ([Demo](https://demo.filegator.io), [Source Code](https://github.com/filegator/filegator)) `MIT` `PHP/Docker`\n- [Filestash](https://www.filestash.app/) - Web file manager that lets you manage your data anywhere it is located: FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox, or Google Drive. ([Demo](https://demo.filestash.app/), [Source Code](https://github.com/mickael-kerjean/filestash)) `AGPL-3.0` `Docker`\n- [Gossa](https://github.com/pldubouilh/gossa) - Light and simple webserver for your files. `MIT` `Go`\n- [IFM](https://github.com/misterunknown/ifm) - Single script file manager. `MIT` `PHP`\n- [mikochi](https://github.com/zer0tonin/Mikochi) - Browse remote folders, upload files, delete, rename, download and stream files to VLC/mpv. `MIT` `Go/Docker/K8S`\n- [miniserve](https://github.com/svenstaro/miniserve) - CLI tool to serve files and dirs over HTTP. `MIT` `Rust`\n- [ResourceSpace](https://www.resourcespace.com) - Simple, fast, and free way to organise your digital assets. ([Demo](https://www.resourcespace.com/trial), [Source Code](https://www.resourcespace.com/svn)) `BSD-4-Clause` `PHP`\n- [Surfer](https://git.cloudron.io/cloudron/surfer) - Simple static file server with webui to manage files. `MIT` `Nodejs`\n- [TagSpaces](https://www.tagspaces.org/) - TagSpaces is an offline, cross-platform file manager and organiser that also can function as a note taking app. The WebDAV version of the application can be installed on top of a WebDAV servers such as Nextcloud or ownCloud. ([Demo](https://demo.tagspaces.com), [Source Code](https://github.com/tagspaces/tagspaces)) `AGPL-3.0` `Nodejs`\n- [Tiny File Manager](https://tinyfilemanager.github.io) - Web based File Manager in PHP, simple, fast and small file manager with a single file. ([Demo](https://tinyfilemanager.github.io/demo/), [Source Code](https://github.com/prasathmani/tinyfilemanager)) `GPL-3.0` `PHP`\n\n\n### Games\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nMultiplayer game servers and [browser games](https://en.wikipedia.org/wiki/Browser_game).\n\n_Related: [Games - Administrative Utilities & Control Panels](#games---administrative-utilities--control-panels)_\n\n- [0 A.D.](https://play0ad.com/) - Cross-platform real-time strategy game of ancient warfare. ([Source Code](https://gitea.wildfiregames.com/0ad/0ad)) `MIT/GPL-2.0/Zlib` `C++/C/deb`\n- [A Dark Room](https://github.com/doublespeakgames/adarkroom) - Minimalist text adventure game for your browser. ([Demo](https://adarkroom.doublespeakgames.com/)) `MPL-2.0` `Javascript`\n- [Digibuzzer](https://digibuzzer.app/) - Create a virtual game room around a connected buzzer (documentation in French). ([Demo](https://digibuzzer.app/), [Source Code](https://codeberg.org/ladigitale/digibuzzer)) `AGPL-3.0` `Nodejs`\n- [Hypersomnia](https://github.com/TeamHypersomnia/Hypersomnia) - Competitive top-down shooter blending Counter-Strike with Hotline Miami. Runs on Linux, Windows, MacOS and the Web. ([Demo](https://hypersomnia.io)) `AGPL-3.0` `C++/Docker`\n- [Lila](https://lichess.org/) - Ad-less chess server powering lichess.org, with official iOS and Android client apps. ([Source Code](https://github.com/lichess-org/lila)) `AGPL-3.0` `Scala`\n- [Luanti](https://www.luanti.org/) - Voxel game engine (formerly Minetest). Play one of our many games, mod a game to your liking, make your own game, or play on a multiplayer server. ([Source Code](https://github.com/luanti-org/luanti)) `LGPL-2.1/MIT/Zlib` `C++/Lua/deb`\n- [Mindustry](https://mindustrygame.github.io/) - Factorio-like tower defense game. Build production chains to gather more resources, and build complex facilities. ([Source Code](https://github.com/Anuken/Mindustry)) `GPL-3.0` `Java`\n- [MTA:SA](https://multitheftauto.com/) `⚠` - Add network play functionality to Rockstar North's Grand Theft Auto game series, in which this functionality is not originally found. ([Source Code](https://github.com/multitheftauto/mtasa-blue)) `GPL-3.0` `C++`\n- [OpenTTD](https://www.openttd.org/) - Transport tycoon simulation game. ([Source Code](https://github.com/OpenTTD/OpenTTD), [Clients](https://bananas.openttd.org/)) `GPL-2.0` `C++/Docker`\n- [piqueserver](https://github.com/piqueserver/piqueserver) - Server for openspades, the first-person shooter in a destructible voxel world. ([Clients](https://github.com/yvt/openspades)) `GPL-3.0` `Python/C++`\n- [Posio](https://github.com/abrenaut/posio) - Geography multiplayer game. `MIT` `Python`\n- [Quizmaster](https://github.com/nymanjens/quizmaster) - Web application for conducting a quiz, including a page for players to enter their answers. `Apache-2.0` `Scala`\n- [Red Eclipse 2](https://redeclipse.net) - Arena first-person shooter similar to Unreal Tournament. ([Source Code](https://github.com/redeclipse/base)) `Zlib/MIT/CC-BY-SA-4.0` `C/C++/deb`\n- [Scribble.rs](https://github.com/scribble-rs/scribble.rs) - A web-based pictionary game. ([Demo](https://scribblers.fly.dev)) `BSD-3-Clause` `Go/Docker`\n- [Suroi](https://suroi.io/) - An open-source 2D battle royale game inspired by surviv.io. ([Demo](https://suroi.io/), [Source Code](https://github.com/HasangerGames/suroi)) `GPL-3.0` `Nodejs`\n- [The Battle for Wesnoth](https://github.com/wesnoth/wesnoth) - The Battle for Wesnoth is an Open Source, turn-based tactical strategy game with a high fantasy theme, featuring both singleplayer and online/hotseat multiplayer combat. `GPL-2.0` `C++/deb`\n- [Veloren](https://veloren.net/) - Multiplayer RPG. Open-source game inspired by Cube World, Legend of Zelda, Dwarf Fortress and Minecraft. ([Source Code](https://gitlab.com/veloren/veloren)) `GPL-3.0` `Rust`\n- [Word Mastermind](https://github.com/clupasq/word-mastermind) - Wordle clone. A Mastermind-like game, but instead of colors you need to guess words. ([Demo](https://word-mastermind.glitch.me/)) `MIT` `Nodejs`\n- [Zero-K](https://zero-k.info/) - Open Source on Springrts engine. Zero-K is a traditional real time strategy game with a focus on player creativity through terrain manipulation, physics, and a large roster of unique units - all while being balanced to support competitive play. ([Source Code](https://github.com/ZeroK-RTS/Zero-K)) `GPL-2.0` `Lua`\n\n\n### Games - Administrative Utilities & Control Panels\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nUtilities for managing game servers.\n\n_Related: [Games](#games)_\n\n- [auto-mcs](https://www.auto-mcs.com) - Cross-platform Minecraft server manager. ([Source Code](https://github.com/macarooni-man/auto-mcs)) `AGPL-3.0` `Python`\n- [Crafty Controller](https://craftycontrol.com/) - Minecraft launcher and manager that allows users to start and administer Minecraft servers from a user-friendly interface. ([Source Code](https://gitlab.com/crafty-controller/crafty-4)) `GPL-3.0` `Docker/Python`\n- [Drop](https://droposs.org) - Game distribution platform, designed for distributing and sharing DRM-free games efficiently (alternative to Steam, GameVault). ([Source Code](https://github.com/Drop-OSS/drop), [Clients](https://github.com/Drop-OSS/drop-app)) `AGPL-3.0` `Docker`\n- [EasyWI](https://easy-wi.com) - Easy-Wi is a Web-interface that allows you to manage server daemons like gameservers. In addition it provides you with a CMS which includes a fully automated game- and voiceserver lending service. ([Source Code](https://github.com/easy-wi/developer/)) `GPL-3.0` `PHP/Shell`\n- [Gaseous Server](https://github.com/gaseous-project/gaseous-server) `⚠` - Game ROM manager with a built-in web-based emulator using multiple sources to identify and provide metadata. `AGPL-3.0` `Docker/.NET`\n- [Kubek](https://kubek.seeeroy.ru) - Web management panel for Minecraft servers. ([Source Code](https://github.com/seeroy/kubek-minecraft-dashboard)) `GPL-3.0` `Nodejs`\n- [Lancache](https://lancache.net) `⚠` - LAN Party game caching made easy. ([Source Code](https://github.com/lancachenet/monolithic)) `MIT` `Docker/Shell`\n- [LinuxGSM](https://linuxgsm.com/) - CLI tool for deployment and management of dedicated game servers on Linux: more than 120 games are supported. ([Source Code](https://github.com/GameServerManagers/LinuxGSM)) `MIT` `Shell`\n- [Minus Games](https://accessory.github.io/minus_games_user_guide) - Sync games and save files across multiple devices. ([Source Code](https://github.com/Accessory/minus_games)) `MIT` `Rust`\n- [Pelican Panel](https://pelican.dev/) - Web application for easy management of game servers, offering a user-friendly interface for deploying, configuring, and managing servers, server monitoring tools, and extensive customization options (fork of Pterodactyl). ([Source Code](https://github.com/pelican-dev/panel)) `AGPL-3.0` `PHP/Docker`\n- [Pterodactyl](https://pterodactyl.io/) - Management panel for game servers, with an intuitive UI for end users. ([Source Code](https://github.com/pterodactyl/panel)) `MIT` `PHP`\n- [PufferPanel](https://www.pufferpanel.com/) - Game server management panel designed for both small networks and game server providers. ([Source Code](https://github.com/pufferpanel/pufferpanel)) `Apache-2.0` `Go`\n- [RconCli](https://github.com/gorcon/rcon-cli) - CLI for executing queries on a remote Valve Source dedicated server using the RCON Protocol. `MIT` `Go`\n- [Retrom](https://github.com/JMBeresford/retrom) - Private cloud game library distribution server + frontend/launcher. `GPL-3.0` `Docker/Rust`\n- [RomM](https://romm.app/) `⚠` - ROM manager for organizing, enriching, and playing retro games, with support for 400+ platforms. ([Demo](https://demo.romm.app/), [Source Code](https://github.com/rommapp/romm)) `AGPL-3.0` `Docker`\n- [SourceBans++](https://sbpp.github.io/) - Admin, ban, and communication management system for games running on the Source engine. ([Source Code](https://github.com/sbpp/sourcebans-pp)) `CC-BY-SA-4.0` `PHP`\n- [Sunshine](https://app.lizardbyte.dev/Sunshine/) - Remote game stream host for Moonlight with support up to 120 frames per second and 4K resolution. ([Source Code](https://github.com/LizardByte/Sunshine)) `GPL-3.0` `C++/deb/Docker`\n\n\n### Genealogy\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Genealogy software](https://en.wikipedia.org/wiki/Genealogy_software) used to record, organize, and publish genealogical data.\n\n- [Genea.app](https://www.genea.app/) - Genealogy tool designed with privacy in mind that anyone can use to author or edit their family tree. Data is stored in the GEDCOM format and all processing is done in the browser. ([Source Code](https://github.com/genea-app/genea-app)) `MIT` `Javascript`\n- [GeneWeb](https://geneweb.tuxfamily.org/wiki/GeneWeb) - Genealogy software that can be used offline or as a Web service. ([Source Code](https://github.com/geneweb/geneweb)) `GPL-2.0` `OCaml`\n- [Gramps Web](https://www.grampsweb.org/) - Web app for collaborative genealogy, based on and interoperable with Gramps, the open source genealogy desktop application. ([Demo](https://gramps-project.github.io/gramps-web-api/), [Source Code](https://github.com/gramps-project/gramps-web-api)) `AGPL-3.0` `Docker`\n- [webtrees](https://www.webtrees.net) - Webtrees is the web's leading online collaborative genealogy application. ([Demo](https://dev.webtrees.net/demo-stable/index.php?ctype=gedcom&ged=demo), [Source Code](https://github.com/fisharebest/webtrees)) `GPL-3.0` `PHP`\n\n\n### Generative Artificial Intelligence (GenAI)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Generative Artificial Intelligence (GenAI)](https://en.wikipedia.org/wiki/Generative_artificial_intelligence) is a subset of [artificial intelligence](https://en.wikipedia.org/wiki/Artificial_intelligence) that uses generative models to produce text, images, videos, or other forms of data.\n\n- [Agenta](https://agenta.ai/) - LLMOps platform for prompt management, LLM evaluation, and observability. Build, evaluate, and monitor production-grade LLM applications with collaborative prompt engineering. ([Source Code](https://github.com/agenta-ai/agenta)) `MIT` `Docker`\n- [AnythingLLM](https://anythingllm.com/) - All-in-one desktop & Docker AI application with built-in RAG, AI agents, No-code agent builder, MCP compatibility, and more. ([Source Code](https://github.com/Mintplex-Labs/anything-llm)) `MIT` `Nodejs/Docker`\n- [Khoj](https://khoj.dev/) - Your AI second brain. Get answers from the web or your docs. Build custom agents, schedule automations, do deep research. Turn any online or local LLM into your personal, autonomous AI. ([Demo](https://app.khoj.dev/), [Source Code](https://github.com/khoj-ai/khoj)) `AGPL-3.0` `Python/Docker`\n- [Ollama](https://ollama.com/) - Get up and running with Llama 3.3, DeepSeek-R1, Phi-4, Gemma 3, and other large language models. ([Source Code](https://github.com/ollama/ollama)) `MIT` `Docker/Python`\n- [Open-WebUI](https://openwebui.com) - User-friendly AI Interface, supports Ollama, OpenAI API. ([Source Code](https://github.com/open-webui/open-webui)) `BSD-3-Clause` `Docker/Python`\n- [Perplexica](https://github.com/ItzCrazyKns/Perplexica) - AI-powered search engine (alternative to Perplexity AI). `MIT` `Docker`\n\n\n### Groupware\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nCollaborative software or [groupware](https://en.wikipedia.org/wiki/Collaborative_software) is designed to help people working on a common task to attain their goals. Groupware often regroups multiple services such as file sharing, calendar/events management, address books... in a single, integrated application.\n\n- [Citadel](https://www.citadel.org/) - Groupware including email, calendar/scheduling, address books, forums, mailing lists, IM, wiki and blog engines, RSS aggregation and more. ([Source Code](https://www.citadel.org/source.html)) `GPL-3.0` `C/Docker/Shell`\n- [Colanode](https://colanode.com) - Collaboration suite with real-time messaging, rich text pages, file management, and dynamic databases - built for offline work (alternative to Slack, Notion). ([Source Code](https://github.com/colanode/colanode)) `Apache-2.0` `K8S/Docker`\n- [Cozy Cloud](https://cozy.io/) - Personal cloud where you can manage and sync your files, notes, contacts, passwords, and documents. ([Source Code](https://github.com/cozy/), [Clients](https://github.com/cozy/cozy-store)) `GPL-3.0` `Nodejs`\n- [Digipad](https://digipad.app/) - An online self-hosted application for creating collaborative digital notepads (Documentation in french). ([Source Code](https://codeberg.org/ladigitale/digipad)) `AGPL-3.0` `Nodejs`\n- [Digistorm](https://digistorm.app/) - Create collaborative surveys, quizzes, brainstorms, and word clouds (documentation in French). ([Demo](https://digistorm.app/), [Source Code](https://codeberg.org/ladigitale/digistorm)) `AGPL-3.0` `Nodejs`\n- [Digiwall](https://digiwall.app/) - Create multimedia collaborative walls for in-person or remote work (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digiwall)) `AGPL-3.0` `Nodejs`\n- [egroupware](https://www.egroupware.org/) - Software suite including calendars, address books, notepad, project management tools, client relationship management tools (CRM), knowledge management tools, a wiki and a CMS. ([Source Code](https://github.com/EGroupware/egroupware)) `GPL-2.0` `PHP`\n- [Group Office](https://www.group-office.com) - Enterprise CRM and groupware tool. Share projects, calendars, files and e-mail online with co-workers and clients. ([Source Code](https://github.com/Intermesh/groupoffice/)) `AGPL-3.0` `PHP`\n- [Openmeetings](https://openmeetings.apache.org/index.html) - Video conferencing, instant messaging, whiteboard, collaborative document editing and other groupware tools using API functions of the Red5 Streaming Server for Remoting and Streaming. ([Source Code](https://github.com/apache/openmeetings)) `Apache-2.0` `Java`\n- [SOGo](https://www.sogo.nu/) - SOGo offers multiple ways to access the calendaring and messaging data. CalDAV, CardDAV, GroupDAV, as well as ActiveSync, including native Outlook compatibility and Web interface. ([Demo](https://demo.sogo.nu/SOGo/), [Source Code](https://github.com/Alinto/sogo)) `LGPL-2.1` `Objective-C`\n- [Tine](https://www.tine-groupware.de/) - Software for digital collaboration in companies and organizations. From powerful groupware functionalities to clever add-ons, tine combines everything to make daily team collaboration easier. ([Source Code](https://github.com/tine-groupware/tine)) `AGPL-3.0` `Docker`\n- [Tracim](https://github.com/tracim/tracim) - Collaborative Platform for team collaboration: file,threads,notes,agenda,etc. `AGPL-3.0/LGPL-3.0/MIT` `Python`\n- [Zimbra Collaboration](https://www.zimbra.com/) - Email, calendar, collaboration server with Web interface and lots of integrations. ([Source Code](https://github.com/zimbra)) `GPL-2.0/CPAL-1.0` `Java`\n\n\n### Health and Fitness\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Medical](https://en.wikipedia.org/wiki/Medical_software), [Health](https://en.wikipedia.org/wiki/Health_information_technology) and [Fitness](https://en.wikipedia.org/wiki/Fitness_tracker) software.\n\n- [Endurain](https://docs.endurain.com/) - Fitness tracking service designed to give users full control over their data and hosting environment. ([Source Code](https://github.com/joaovitoriasilva/endurain)) `AGPL-3.0` `Docker`\n- [Fasten Health](https://github.com/fastenhealth/fasten-onprem/) `⚠` - Personal/family electronic medical record aggregator, designed to integrate with hundreds of thousands of insurances/hospitals/clinics in the United States. `GPL-3.0` `Go/Docker`\n- [Mere Medical](https://meremedical.co/) `⚠` - Manage all of your medical records from Epic MyChart, Cerner, and OnPatient patient portals in one place. Privacy-focused, self-hosted, and offline-first. ([Demo](https://demo.meremedical.co), [Source Code](https://github.com/cfu288/mere-medical)) `GPL-3.0` `Docker/Nodejs`\n- [OpenEMR](https://www.open-emr.org/) - Electronic health records and medical practice management solution. ([Demo](https://www.open-emr.org/demo/), [Source Code](https://github.com/openemr/openemr)) `GPL-3.0` `PHP/Docker`\n- [wger](https://wger.de/) - Web-based personal workout, fitness and weight logger/tracker. It can also be used as a simple gym management utility and offers a full REST API as well. ([Demo](https://wger.de/en/dashboard), [Source Code](https://github.com/wger-project/wger)) `AGPL-3.0` `Python/Docker`\n- [Wingfit](https://wingfit.fr) - Minimalist fitness app to plan your workouts, track your personal records and leverage smartwatch data. ([Demo](https://wingfit.fr/home), [Source Code](https://github.com/itskovacs/wingfit)) `CC-BY-SA-4.0` `Python/Docker`\n\n\n### Human Resources Management (HRM)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [human resources management system](https://en.wikipedia.org/wiki/Human_resource_management_system) combines a number of systems and processes to ensure the easy management of [human resources](https://en.wikipedia.org/wiki/Human_resources), business processes and data.\n\n- [admidio](https://www.admidio.org/) - User management system for websites of organizations and groups. The system has a flexible role model so that it’s possible to reflect the structure and permissions of your organization. ([Demo](https://www.admidio.org/demo/), [Source Code](https://github.com/Admidio/admidio)) `GPL-2.0` `PHP/Docker`\n- [Frappe HR](https://frappe.io/hr) - Complete HRMS solution with over 13 different modules right from employee management, onboarding, leaves, to payroll, taxation, and more. ([Source Code](https://github.com/frappe/hrms)) `GPL-3.0` `Docker/Python/Nodejs`\n- [MintHCM](https://minthcm.org/) - Tool for Human Capital Management based on two popular, well-known business applications SugarCRM Community Edition and SuiteCRM. ([Source Code](https://github.com/minthcm/minthcm)) `AGPL-3.0` `PHP`\n\n\n### Identity Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Identity management](https://en.wikipedia.org/wiki/Identity_management) (IdM), also known as identity and access management (IAM or IdAM), is a framework of policies and technologies to ensure that the right users have the appropriate access to technology resources.\n\n**Please visit [awesome-sysadmin/Identity Management](https://github.com/awesome-foss/awesome-sysadmin#identity-management)**\n\n\n\n### Internet of Things (IoT)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Internet of Things](https://en.wikipedia.org/wiki/Internet_of_things) describes physical objects with sensors, processing ability, software, and other technologies that connect and exchange data with other devices over the Internet.\n\n- [Domoticz](https://www.domoticz.com/) - Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. ([Source Code](https://github.com/domoticz/domoticz), [Clients](https://github.com/domoticz/domoticz-android)) `GPL-3.0` `C/C++/Docker/Shell`\n- [EMQX](https://www.emqx.io/) - Scalable MQTT broker. Connect 100M+ IoT devices in one single cluster, move and process real-time IoT data with 1M msg/s throughput at 1ms latency. ([Demo](https://www.emqx.com/en/mqtt/public-mqtt5-broker), [Source Code](https://github.com/emqx/emqx)) `Apache-2.0` `Docker/Erlang`\n- [evcc](https://evcc.io/) - Extensible Electric Vehicle Charge Controller and home energy management system. ([Source Code](https://github.com/evcc-io/evcc)) `MIT` `deb/Docker/Go`\n- [FHEM](https://fhem.de/fhem.html) - Automate common tasks in the household like switching lamps and heating. It can also be used to log events like temperature or power consumption. You can control it via web or smartphone frontends, telnet or TCP/IP directly. ([Source Code](https://svn.fhem.de/trac)) `GPL-3.0` `Perl`\n- [FlowForge](https://flowforge.com/) - Deploy Node-RED applications in a reliable, scalable and secure manner. The FlowForge platform provides DevOps capabilities for Node-RED development teams. ([Source Code](https://github.com/FlowFuse/flowfuse)) `Apache-2.0` `Nodejs/Docker/K8S`\n- [Gladys](https://gladysassistant.com/) - Privacy-first home assistant. ([Source Code](https://github.com/GladysAssistant/Gladys)) `Apache-2.0` `Nodejs/Docker`\n- [Home Assistant](https://home-assistant.io/) - Home automation platform. ([Demo](https://home-assistant.io/demo/), [Source Code](https://github.com/home-assistant/core)) `Apache-2.0` `Python/Docker`\n- [ioBroker](https://www.iobroker.net/) - Integration platform for the Internet of Things, focused on building automation, smart metering, ambient assisted living, process automation, visualization and data logging. ([Source Code](https://github.com/ioBroker/ioBroker)) `MIT` `Nodejs`\n- [LHA](https://github.com/javalikescript/lha) - Light Home Automation application that is fully extensible using Blockly, HTML or Lua. It includes extensions such as ConBee, Philips Hue or Z-Wave JS. `MIT` `Lua`\n- [Node RED](https://nodered.org/) - Browser-based flow editor that helps you wiring hardware devices, APIs and online services to create IoT solutions. ([Source Code](https://github.com/node-red/node-red)) `Apache-2.0` `Nodejs/Docker`\n- [openHAB](https://www.openhab.org) - Vendor and technology agnostic open source software for home automation. ([Source Code](https://github.com/openhab/openhab-core)) `EPL-2.0` `Java`\n- [OpenRemote](https://openremote.io) - IoT Asset management, Flow Rules and WHEN-THEN rules, Data visualization, Edge Gateway. ([Demo](https://demo.openremote.io/), [Source Code](https://github.com/openremote/openremote)) `AGPL-3.0` `Java`\n- [SIP Irrigation Control](https://dan-in-ca.github.io/SIP/) - Open source software for sprinkler/irrigation control. ([Source Code](https://github.com/Dan-in-CA/SIP)) `GPL-3.0` `Python`\n- [Tasmota](https://tasmota.com) - Open source firmware for ESP devices. Total local control with quick setup and updates. Control using MQTT, Web UI, HTTP or serial. Automate using timers, rules or scripts. Integration with home automation solutions. ([Source Code](https://github.com/arendst/Tasmota)) `GPL-3.0` `C/C++`\n- [Thingsboard](https://thingsboard.io/) - Open-source IoT Platform - Device management, data collection, processing and visualization. ([Demo](https://demo.thingsboard.io/signup), [Source Code](https://github.com/thingsboard/thingsboard)) `Apache-2.0` `Java/Docker/K8S`\n- [WebThings Gateway](https://webthings.io/gateway/) - WebThings is an open source implementation of the Web of Things, including the WebThings Gateway and the WebThings Framework. ([Source Code](https://github.com/WebThingsIO/gateway)) `MPL-2.0` `Nodejs`\n\n\n### Inventory Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Inventory management software](https://en.wikipedia.org/wiki/Inventory_management_software).\n\n_Related: [Money, Budgeting & Management](#money-budgeting--management), [Resource Planning](#resource-planning)_\n\n_See also: [awesome-sysadmin/IT Asset Management](https://github.com/awesome-foss/awesome-sysadmin#it-asset-management)_\n\n- [Cannery](https://cannery.app) - Firearm and ammunition tracker app. ([Source Code](https://gitea.bubbletea.dev/shibao/cannery)) `AGPL-3.0` `Docker`\n- [HomeBox (SysAdminsMedia)](https://homebox.software/) - Inventory and organization system built for the home user. ([Demo](https://demo.homebox.software/), [Source Code](https://github.com/sysadminsmedia/homebox)) `AGPL-3.0` `Docker/Go`\n- [Inventaire](https://inventaire.io/welcome) - Collaborative resources mapper project, while yet only focused on exploring books mapping with wikidata and ISBNs. ([Source Code](https://codeberg.org/inventaire/inventaire)) `AGPL-3.0` `Nodejs`\n- [Inventree](https://docs.inventree.org/en/latest/) - Inventory management system which provides intuitive parts management and stock control. ([Demo](https://inventree.org/demo), [Source Code](https://github.com/inventree/InvenTree)) `MIT` `Python`\n- [Open QuarterMaster](https://openquartermaster.com/) - Powerful inventory management system, designed to be flexible and scalable. ([Source Code](https://github.com/Epic-Breakfast-Productions/OpenQuarterMaster)) `GPL-3.0` `deb/Docker`\n- [Part-DB](https://docs.part-db.de/) - Inventory management system for your electronic components. ([Demo](https://demo.part-db.de/en/), [Source Code](https://github.com/Part-DB/Part-DB-server)) `AGPL-3.0` `Docker/PHP/Nodejs`\n- [Shelf](https://www.shelf.nu) - Asset and equipment tracking software used by teams who value clarity. Shelf is an asset database and QR asset label generator that lets you create, manage and overview your assets across locations. Unlimited assets, free forever. ([Source Code](https://github.com/Shelf-nu/shelf.nu)) `AGPL-3.0` `Nodejs`\n- [Spoolman](https://github.com/Donkie/Spoolman) - Keep track of your inventory of 3D-printer filament spools. `MIT` `Docker/Python`\n\n\n### Knowledge Management Tools\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Knowledge management](https://en.wikipedia.org/wiki/Knowledge_management) is the collection of methods relating to creating, sharing, using and managing the knowledge and information.\n\n_Related: [Note-taking & Editors](#note-taking--editors), [Wikis](#wikis), [Database Management](#database-management)_\n\n- [AFFiNE Community Edition](https://affine.pro/) - Next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, customizable and ready to use (alternative to Notion and Miro). ([Demo](https://app.affine.pro/), [Source Code](https://github.com/toeverything/AFFiNE)) `MIT/AGPL-3.0` `Docker`\n- [Atomic Server](https://github.com/atomicdata-dev/atomic-server) - Knowledge graph database with documents (similar to Notion), tables, search, and a powerful linked data API. Lightweight, very fast and no runtime dependencies. ([Demo](https://atomicdata.dev/)) `MIT` `Docker/Rust`\n- [Digimindmap](https://ladigitale.dev/digimindmap/#/) - Create simple mindmaps (documentation in French). ([Demo](https://ladigitale.dev/digimindmap/#/), [Source Code](https://codeberg.org/ladigitale/digimindmap)) `AGPL-3.0` `Nodejs/PHP`\n- [LibreKB](https://librekb.com/) - Web-based knowledge base solution. A simple web app, it runs on pretty much any web server or hosting provider with PHP and MySQL. ([Source Code](https://github.com/michaelstaake/LibreKB/)) `GPL-3.0` `PHP`\n- [memEx](https://gitea.bubbletea.dev/shibao/memEx) - Structured personal knowledge base, inspired by zettlekasten and org-mode. `AGPL-3.0` `Docker`\n- [SiYuan](https://b3log.org/siyuan/) - A privacy-first personal knowledge management software, written in typescript and golang. ([Source Code](https://github.com/siyuan-note/siyuan)) `AGPL-3.0` `Docker/Go`\n- [TeamMapper](https://github.com/b310-digital/teammapper) - Host and create your own mindmaps. Share your mindmap sessions with your team and collaborate live on mindmaps. ([Demo](https://map.kits.blog)) `MIT` `Docker/Nodejs`\n\n\n### Learning and Courses\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nTools and software to help with education and learning.\n\n- [Canvas LMS](https://www.instructure.com/canvas/) - Learning management system (LMS) that is revolutionizing the way we educate. ([Demo](https://canvas.instructure.com/register), [Source Code](https://github.com/instructure/canvas-lms)) `AGPL-3.0` `Ruby`\n- [Chamilo LMS](https://chamilo.org/) - Create a virtual campus for the provision of online or semi-online training. ([Source Code](https://github.com/chamilo/chamilo-lms)) `GPL-3.0` `PHP`\n- [Digiscreen](https://ladigitale.dev/digiscreen/) - Interactive whiteboard/wallpaper for the classroom, in person or remotely (documentation in French). ([Demo](https://ladigitale.dev/digiscreen/), [Source Code](https://codeberg.org/ladigitale/digiscreen)) `AGPL-3.0` `Nodejs/PHP`\n- [Digitools](https://ladigitale.dev/digitools) - A set of simple tools to accompany the animation of courses in person or remotely. (documentation in French). ([Demo](https://ladigitale.dev/digitools/), [Source Code](https://codeberg.org/ladigitale/digitools)) `AGPL-3.0` `PHP`\n- [edX](https://www.edx.org/) - The Open edX platform is open-source code that powers edX.org. ([Source Code](https://github.com/edx/)) `AGPL-3.0` `Python`\n- [Gibbon](https://gibbonedu.org/) - Flexible school management platform designed to make life better for teachers, students, parents and leaders. ([Source Code](https://github.com/GibbonEdu/core)) `GPL-3.0` `PHP`\n- [ILIAS](https://www.ilias.de) - Learning management system that can cope with anything you throw at it. ([Demo](https://demo.ilias.de), [Source Code](https://github.com/ILIAS-eLearning/ILIAS)) `GPL-3.0` `PHP`\n- [INGInious](https://inginious.org/?lang=en) - Intelligent grader that allows secured and automated testing of code made by students. ([Source Code](https://github.com/INGInious/INGInious), [Clients](https://github.com/INGInious/plugins)) `AGPL-3.0` `Python/Docker`\n- [Moodle](https://moodle.org/) - Learning and courses platform with one of the largest open source communities worldwide. ([Demo](https://moodle.org/demo/), [Source Code](https://git.moodle.org/gw)) `GPL-3.0` `PHP`\n- [Open eClass](https://www.openeclass.org/) - Open eClass is an advanced e-learning solution that can enhance the teaching and learning process. ([Demo](https://demo.openeclass.org/), [Source Code](https://github.com/gunet/openeclass)) `GPL-2.0` `PHP`\n- [OpenOLAT](https://www.openolat.com/?lang=en) - Learning management system for teaching, education, assessment and communication. ([Demo](https://learn.olat.com), [Source Code](https://github.com/OpenOLAT/OpenOLAT)) `Apache-2.0` `Java`\n- [QST](https://qstonline.org) - Online assessment software. From a quick quiz on your phone to large scale, high stakes, proctored desktop testing, easy, secure and economical. ([Demo](https://qstonline.org/free_account.htm), [Source Code](https://sourceforge.net/projects/qstonline/)) `GPL-2.0` `Perl`\n- [RELATE](https://documen.tician.de/relate/) - Courseware package that includes features such as: flexible rules, statistics, multi-course support, class calendar. ([Source Code](https://github.com/inducer/relate)) `MIT` `Python`\n- [RosarioSIS](https://www.rosariosis.org/) - Student Information System for school management. Features students demographics, grades, scheduling, attendance, student billing, discipline & food service modules. ([Demo](https://www.rosariosis.org/demo/), [Source Code](https://gitlab.com/francoisjacquet/rosariosis/)) `GPL-2.0` `PHP`\n- [Schoco](https://github.com/PhiTux/schoco) - Online IDE for learning Java programming at school, including automatic JUnit tests. Designed to give coding homework/assignments. `MIT` `Docker`\n\n\n### Manufacturing\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware to manage [3D printers](https://en.wikipedia.org/wiki/3D_printing), [CNC machines](https://en.wikipedia.org/wiki/Numerical_control) and other physical manufacturing tools.\n\n- [CNCjs](https://cnc.js.org/) - Web interface for CNC milling controllers running Grbl, Smoothieware, or TinyG. ([Source Code](https://github.com/cncjs/cncjs/)) `MIT` `Nodejs`\n- [Fluidd](https://docs.fluidd.xyz/) - Lightweight & responsive user interface for Klipper, the 3D printer firmware. ([Source Code](https://github.com/fluidd-core/fluidd)) `GPL-3.0` `Docker/Nodejs`\n- [Mainsail](https://docs.mainsail.xyz/) - Modern and responsive user interface for the Klipper 3D printer firmware. Control and monitor your printer from everywhere, from any device. ([Source Code](https://github.com/mainsail-crew/mainsail)) `GPL-3.0` `Docker/Python`\n- [Manyfold](https://manyfold.app) - Digital asset manager for 3d print files; STL, OBJ, 3MF and more. ([Source Code](https://github.com/manyfold3d/manyfold)) `MIT` `Docker`\n- [Octoprint](https://octoprint.org/) - Snappy web interface for controlling consumer 3D printers. ([Source Code](https://github.com/OctoPrint/OctoPrint)) `AGPL-3.0` `Docker/Python`\n\n\n### Maps and Global Positioning System (GPS)\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Maps](https://en.wikipedia.org/wiki/Map), [cartography](https://en.wikipedia.org/wiki/Cartography), [GIS](https://en.wikipedia.org/wiki/Geographic_information_system) and [GPS](https://en.wikipedia.org/wiki/Global_Positioning_System) software.\n\n_See also: [awesome-openstreetmap](https://github.com/osmlab/awesome-openstreetmap), [awesome-gis](https://github.com/sshuair/awesome-gis)_\n\n- [AdventureLog](https://adventurelog.app) - Travel tracker and trip planner. ([Demo](https://adventurelog.app), [Source Code](https://github.com/seanmorley15/AdventureLog)) `GPL-3.0` `Docker`\n- [AirTrail](https://airtrail.johan.ohly.dk) - Personal flight tracking system. ([Source Code](https://github.com/johanohly/AirTrail)) `GPL-3.0` `Docker/Nodejs`\n- [Bicimon](https://github.com/knrdl/bicimon) - Bike Speedometer as Progressive Web App. ([Demo](https://knrdl.github.io/bicimon/)) `MIT` `Javascript`\n- [Dawarich](https://dawarich.app/) - Visualize your location history, track your movements, and analyze your travel patterns with complete privacy and control (alternative to Google Timeline a.k.a. Google Location History). ([Source Code](https://github.com/Freika/dawarich)) `AGPL-3.0` `Docker`\n- [Geo2tz](https://github.com/noandrea/geo2tz) - Get the timezone from geo coordinates (lat, lon). `MIT` `Go/Docker`\n- [GraphHopper](https://graphhopper.com/) - Fast routing library and server using OpenStreetMap. ([Source Code](https://github.com/graphhopper/graphhopper)) `Apache-2.0` `Java`\n- [Nominatim](https://nominatim.org/) - Server application for geocoding (address -> coordinates) and reverse geocoding (coordinates -> address) on OpenStreetMap data. ([Source Code](https://github.com/osm-search/Nominatim)) `GPL-2.0` `C`\n- [Open Source Routing Machine (OSRM)](http://project-osrm.org/) - High performance routing engine designed to run on OpenStreetMap data and offering an HTTP API, C++ library interface, and Nodejs wrapper. ([Demo](https://map.project-osrm.org/), [Source Code](https://github.com/Project-OSRM/osrm-backend)) `BSD-2-Clause` `C++`\n- [OpenRouteService](https://openrouteservice.org/) - Route service with directions, isochrones, time-distance matrix, route optimization, etc. ([Demo](https://openrouteservice.org/dev/#/api-docs/introduction), [Source Code](https://github.com/GIScience/openrouteservice)) `GPL-3.0` `Docker/Java`\n- [OpenStreetMap](https://www.openstreetmap.org/) - Collaborative project to create a free editable map of the world. ([Source Code](https://github.com/openstreetmap/openstreetmap-website), [Clients](https://wiki.openstreetmap.org/wiki/Software)) `GPL-2.0` `Ruby`\n- [OpenTripPlanner](https://www.opentripplanner.org/) - Multimodal trip planning software based on OpenStreetMap data and consuming published GTFS-formatted data to suggest routes using local public transit systems. ([Source Code](https://github.com/opentripplanner/OpenTripPlanner)) `LGPL-3.0` `Java/Javascript`\n- [OwnTracks Recorder](https://github.com/owntracks/recorder) `⚠` - Store and access data published by [OwnTracks](https://owntracks.org/) location tracking apps. `GPL-2.0` `C/Lua/deb/Docker`\n- [TileServer GL](https://tileserver.readthedocs.io/) - Vector and raster maps with GL styles. Server side rendering by Mapbox GL Native. Map tile server for Mapbox GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc. ([Source Code](https://github.com/maptiler/tileserver-gl)) `BSD-2-Clause` `Nodejs/Docker`\n- [Traccar](https://www.traccar.org/) - Java application to track GPS positions. Supports loads of tracking devices and protocols, has an Android and iOS App. Has a web interface to view your trips. ([Demo](https://demo.traccar.org/), [Source Code](https://github.com/traccar)) `Apache-2.0` `Java`\n- [wanderer](https://github.com/Flomp/wanderer) - Trail database where you can upload your recorded tracks or create new ones and add various metadata to build an easily searchable catalogue. ([Demo](https://demo.wanderer.to)) `AGPL-3.0` `Docker/Go/Nodejs`\n\n\n### Media Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Digital media](https://en.wikipedia.org/wiki/Digital_media) management tools and software.\n\n_Related: [Automation](#automation), [Media Streaming](#media-streaming), [Media Streaming - Audio Streaming](#media-streaming---audio-streaming), [Media Streaming - Multimedia Streaming](#media-streaming---multimedia-streaming), [Media Streaming - Video Streaming](#media-streaming---video-streaming)_\n\n- [ChannelTube](https://github.com/TheWicklowWolf/ChannelTube) `⚠` - Download video or audio from YouTube channels on a schedule via yt-dlp. `AGPL-3.0` `Docker`\n- [Headphones](https://github.com/rembo10/headphones) - Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent, Deluge and Blackhole. `GPL-3.0` `Python`\n- [Jellyseerr](https://github.com/Fallenbagel/jellyseerr) - Manage requests for your media library, supports Plex, Jellyfin and Emby media servers (fork of Overseerr). `MIT` `Docker/Nodejs`\n- [Lidarr](https://lidarr.audio/) - Music collection manager for Usenet and BitTorrent users. ([Source Code](https://github.com/Lidarr/Lidarr)) `GPL-3.0` `C#/Docker`\n- [LidaTube](https://github.com/TheWicklowWolf/LidaTube) `⚠` - Finding and fetch missing Lidarr albums via yt-dlp. `GPL-3.0` `Docker`\n- [Lidify](https://github.com/TheWicklowWolf/Lidify) `⚠` - Music discovery tool that provides recommendations based on selected Lidarr artists, using Spotify or LastFM. `MIT` `Docker`\n- [Medusa](https://github.com/pymedusa/Medusa) - Automatic Video library manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. ([Clients](https://github.com/medusajs/nextjs-starter-medusa)) `GPL-3.0` `Python`\n- [MetaTube](https://github.com/JVT038/MetaTube) `⚠` - Automatically download music from YouTube add metadata from Spotify, Deezer or Musicbrainz. `GPL-3.0` `Python`\n- [MeTube](https://github.com/alexta69/metube) - Web GUI for youtube-dl, with playlist support. Allows downloading videos from dozens of websites. `AGPL-3.0` `Python/Nodejs/Docker`\n- [nefarious](https://lardbit.github.io/nefarious/) - Automate downloading Movies and TV Shows. ([Source Code](https://github.com/lardbit/nefarious)) `GPL-3.0` `Python`\n- [Ombi](https://ombi.io/) - Content request system for Plex/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. ([Demo](https://app.ombi.io/), [Source Code](https://github.com/Ombi-app/Ombi)) `GPL-2.0` `C#/deb`\n- [Overseerr](https://overseerr.dev/) `⚠` - Manage requests for your media library. It integrates with your existing services, such as Sonarr, Radarr, and Plex!. ([Source Code](https://github.com/sct/overseerr)) `MIT` `Docker`\n- [Pinchflat](https://github.com/kieraneglin/pinchflat) `⚠` - Download YouTube content built using yt-dlp. `AGPL-3.0` `Docker`\n- [PodFetch](https://samtv12345.github.io/PodFetch) - Sleek and efficient podcast downloader. ([Source Code](https://github.com/SamTV12345/PodFetch)) `Apache-2.0` `Docker/Rust`\n- [Radarr](https://radarr.video/) - Automatically download movies via Usenet and BitTorrent (fork of Sonarr). ([Source Code](https://github.com/Radarr/Radarr)) `GPL-3.0` `C#/Docker`\n- [Reaparr](https://www.reaparr.rocks/) `⚠` - Cross-platform Plex media downloader that seamlessly adds media from other Plex servers to your own. ([Source Code](https://github.com/Reaparr/Reaparr)) `GPL-3.0` `Docker`\n- [Reiverr](https://github.com/aleksilassila/reiverr) `⚠` - Clean combined interface for Jellyfin, TMDB, Radarr and Sonarr, as well as a replacement to Overseerr. `AGPL-3.0` `Docker`\n- [Sonarr](https://sonarr.tv/) - Automatic TV Shows downloader and manager for Usenet and BitTorrent. It can grab, sort and rename new episodes and automatically upgrade the quality of files already downloaded when a better quality format becomes available. ([Source Code](https://github.com/Sonarr/Sonarr)) `GPL-3.0` `C#/Docker`\n- [Spooty](https://github.com/Raiper34/spooty) `⚠` - Download tracks/playlists/albums from Spotify. It can also subscribe to a playlist or author page and download new songs upon release. `MIT` `Docker/Nodejs`\n- [tubesync](https://github.com/meeb/tubesync) `⚠` - Syncs YouTube channels and playlists to a locally hosted media server. `AGPL-3.0` `Docker/Python`\n- [Watcharr](https://github.com/sbondCo/Watcharr) - Add and track all the shows and movies you are watching. Comes with user authentication, modern and clean UI and a very simple setup. ([Demo](https://beta.watcharr.app/)) `MIT` `Docker`\n- [ydl_api_ng](https://github.com/Totonyus/ydl_api_ng) - Simple youtube-dl REST API to launch downloads on a distant server. `GPL-3.0` `Python`\n- [YoutubeDL-Server](https://github.com/nbr23/youtube-dl-server) - Web and REST interface to Youtube-DL for downloading videos onto a server. `MIT` `Python/Docker`\n- [yt-dlp Web UI](https://github.com/marcopiovanello/yt-dlp-web-ui) - Web GUI for yt-dlp. `MPL-2.0` `Docker/Go/Nodejs`\n\n\n### Media Streaming\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Streaming media](https://en.wikipedia.org/wiki/Streaming_media) is multimedia that is delivered and consumed in a continuous manner from a source, with little or no intermediate storage in network elements.\n\n**Please visit [Media streaming - Audio Streaming](#media-streaming---audio-streaming), [Media streaming - Multimedia Streaming](#media-streaming---multimedia-streaming), [Media streaming - Video Streaming](#media-streaming---video-streaming), [Media Management](#media-management)**\n\n_See also: [List of streaming media systems - Wikipedia](https://en.wikipedia.org/wiki/List_of_streaming_media_systems), [Comparison of streaming media systems - Wikipedia](https://en.wikipedia.org/wiki/Comparison_of_streaming_media_systems)_\n\n\n\n### Media Streaming - Audio Streaming\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Audio](https://en.wikipedia.org/wiki/Audio) streaming tools and software.\n\n_Related: [Media Management](#media-management)_\n\n- [Ampache](https://ampache.org/) - Web based audio/video streaming application. ([Demo](https://play.dogmazic.net/), [Source Code](https://github.com/ampache/ampache)) `AGPL-3.0` `PHP`\n- [Audiobookshelf](https://www.audiobookshelf.org/) - Audiobook and podcast server. It streams all audio formats, keeps and syncs progress across devices. Comes with open-source apps for Android and iOS. ([Source Code](https://github.com/advplyr/audiobookshelf), [Clients](https://github.com/advplyr/audiobookshelf-app)) `GPL-3.0` `Docker/deb/Nodejs`\n- [Audioserve](https://github.com/izderadicka/audioserve) - Simple personal server to serve audio files from directories (audiobooks, music, podcasts...). Focused on simplicity and supports sync of play position between clients. `MIT` `Rust`\n- [AzuraCast](https://www.azuracast.com/) - Modern and accessible web radio management suite. ([Source Code](https://github.com/AzuraCast/AzuraCast)) `Apache-2.0` `Docker`\n- [Beets](https://beets.io/) - Music library manager and MusicBrainz tagger (command-line and Web interface). ([Source Code](https://github.com/beetbox/beets)) `MIT` `Python/deb`\n- [Black Candy](https://github.com/blackcandy-org/blackcandy) - Music streaming server. `MIT` `Docker/Ruby`\n- [Funkwhale](https://dev.funkwhale.audio/funkwhale) - Modern, web-based, convivial, multi-user and free music server. `BSD-3-Clause` `Python/Django`\n- [gonic](https://github.com/sentriz/gonic) - Lightweight music streaming server. Subsonic compatible. `GPL-3.0` `Go/Docker`\n- [koel](https://koel.dev/) - Personal music streaming server that works. ([Demo](https://demo.koel.dev/), [Source Code](https://github.com/koel/koel)) `MIT` `PHP`\n- [LibreTime](https://libretime.org) - Broadcast streaming radio on the web (fork of [Airtime](https://github.com/sourcefabric/Airtime)). ([Source Code](https://github.com/LibreTime/libretime)) `AGPL-3.0` `Docker/PHP`\n- [LMS](https://github.com/epoupon/lms) - Access your self-hosted music using a web interface. `GPL-3.0` `Docker/deb/C++`\n- [Maloja](https://github.com/krateng/maloja) - Music scrobble database (alternative to Last.fm). ([Demo](https://maloja.krateng.ch/)) `GPL-3.0` `Python/Docker`\n- [moOde Audio](https://moodeaudio.org/) - Audiophile-quality music playback for the wonderful Raspberry Pi family of single board computers. ([Source Code](https://github.com/moode-player/moode)) `GPL-3.0` `PHP`\n- [Mopidy](https://docs.mopidy.com/) `⚠` - Extensible music server. Offers a superset of the mpd API, as well as integration with 3rd party services like Spotify, SoundCloud etc. ([Source Code](https://github.com/mopidy/mopidy)) `Apache-2.0` `Python/deb`\n- [mpd](https://www.musicpd.org/) - Daemon to remotely play music, stream music, handle and organize playlists. Many clients available. ([Source Code](https://github.com/MusicPlayerDaemon/MPD), [Clients](https://www.musicpd.org/clients/)) `GPL-2.0` `C++`\n- [mStream](https://mstream.io/) - Music streaming server with GUI management tools. Runs on Mac, Windows, and Linux. ([Source Code](https://github.com/IrosTheBeggar/mStream)) `GPL-3.0` `Nodejs`\n- [multi-scrobbler](https://foxxmd.github.io/multi-scrobbler) - Scrobble plays from multiple sources to multiple scrobbling services. ([Source Code](https://github.com/FoxxMD/multi-scrobbler)) `MIT` `Nodejs/Docker`\n- [musikcube](https://musikcube.com/) - Streaming audio server with Linux/macOS/Windows/Android clients. ([Source Code](https://github.com/clangen/musikcube)) `BSD-3-Clause` `C++/deb`\n- [Navidrome Music Server](https://www.navidrome.org) - Modern Music Server and Streamer, compatible with Subsonic/Airsonic. ([Demo](https://www.navidrome.org/demo), [Source Code](https://github.com/navidrome/navidrome), [Clients](https://www.navidrome.org/docs/overview/#apps)) `GPL-3.0` `Docker/Go`\n- [Pinepods](https://www.pinepods.online/) - Podcast management system with multi-user support. Pinepods utilizes a central database so aspects like listen time and themes follow from device to device. ([Demo](https://try.pinepods.online), [Source Code](https://github.com/madeofpendletonwool/PinePods)) `GPL-3.0` `Docker`\n- [Polaris](https://github.com/agersant/polaris) - Music browsing and streaming application optimized for large music collections, ease of use and high performance. `MIT` `Rust/Docker`\n- [Snapcast](https://github.com/badaix/snapcast) - Synchronous multiroom audio server. `GPL-3.0` `C++/deb`\n- [Stretto](https://github.com/benkaiser/stretto) `⚠` - Music player with Youtube/Soundcloud import and iTunes/Spotify discovery. ([Demo](https://next.kaiserapps.com), [Clients](https://github.com/benkaiser/stretto-mobile-next)) `MIT` `Nodejs`\n- [Supysonic](https://github.com/spl0k/supysonic) - Python implementation of the Subsonic server API. `AGPL-3.0` `Python/deb`\n- [SwingMusic](https://swingmusic.vercel.app/) - Swing Music is a beautiful, self-hosted music player and streaming server for your local audio files. Like a cooler Spotify ... but bring your own music. ([Source Code](https://github.com/swingmx/swingmusic)) `MIT` `Python/Docker`\n- [vod2pod-rss](https://github.com/madiele/vod2pod-rss) `⚠` - Convert YouTube and Twitch channels to podcasts, no storage required. Transcodes VoDs to MP3 192k on the fly, generates an RSS feed to use in podcast clients. `MIT` `Docker`\n\n\n### Media Streaming - Multimedia Streaming\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Multimedia](https://en.wikipedia.org/wiki/Multimedia) streaming tools and software.\n\n_Related: [Media Streaming - Video Streaming](#media-streaming---video-streaming), [Media Streaming - Audio Streaming](#media-streaming---audio-streaming), [Media Management](#media-management)_\n\n- [ClipBucket](https://clipbucket.fr/) - Start your own video sharing website (YouTube/Netflix Clone) in a matter of minutes. ([Demo](https://demo.clipbucket.oxygenz.fr/), [Source Code](https://github.com/MacWarrior/clipbucket-v5)) `AAL` `Docker/PHP`\n- [cmyflix](https://github.com/farfalleflickan/cmyflix) - Minimalist Plex/Jellyfin alternative to stream video. `AGPL-3.0` `C/deb`\n- [Gerbera](https://gerbera.io/) - UPnP Media Server, which allows you to stream your digital media throughout your home network and listen to/watch it on a variety of UPnP compatible devices. ([Source Code](https://github.com/gerbera/gerbera)) `GPL-2.0` `Docker/deb/C++`\n- [Icecast 2](https://icecast.org) - Streaming audio/video server which can be used to create an Internet radio station or a privately running jukebox and many things in between. ([Source Code](https://gitlab.xiph.org/xiph/icecast-server), [Clients](https://icecast.org/apps/)) `GPL-2.0` `C`\n- [Jellyfin](https://jellyfin.org) - Media server for audio, video, books, comics, and photos with a sleek interface and robust transcoding capabilities. Almost all modern platforms have clients, including Roku, Android TV, iOS, and Kodi. ([Demo](https://demo.jellyfin.org/stable), [Source Code](https://github.com/jellyfin/jellyfin), [Clients](https://github.com/awesome-jellyfin/awesome-jellyfin)) `GPL-2.0` `C#/deb/Docker`\n- [Karaoke Eternal](https://www.karaoke-eternal.com) - Host awesome karaoke parties where everyone can easily find and queue songs from their phone's browser. The player is also fully browser-based with support for MP3+G, MP4 and WebGL visualizations. ([Source Code](https://www.karaoke-eternal.com/repo)) `ISC` `Docker/Nodejs`\n- [Kodi](https://kodi.tv/) - Multimedia/Entertainment center, formerly known as XBMC. Runs on Android, BSD, Linux, macOS, iOS and Windows. ([Source Code](https://github.com/xbmc/xbmc)) `GPL-2.0` `C++/deb`\n- [Kyoo](https://github.com/zoriya/kyoo) - Innovative media browser designed for seamless streaming of anime, series and movies, offering advanced features like dynamic transcoding, auto watch history and intelligent metadata retrieval. ([Demo](https://kyoo.zoriya.dev)) `GPL-3.0` `Docker`\n- [Meelo](https://github.com/Arthi-chaud/Meelo) - Personal Music Server, designed for collectors and music maniacs. `GPL-3.0` `Docker`\n- [MistServer](https://mistserver.org/) - Public domain streaming media server that works with any device and any format. ([Source Code](https://github.com/DDVTECH/mistserver)) `Unlicense` `C++`\n- [NymphCast](http://nyanko.ws/nymphcast.php) - Turn your choice of Linux-capable hardware into an audio and video source for a television or powered speakers (alternative to Chromecast). ([Source Code](https://github.com/MayaPosch/NymphCast)) `BSD-3-Clause` `C++`\n- [Rygel](https://gnome.pages.gitlab.gnome.org/rygel/) - UPnP AV MediaServer that allows you to easily share audio, video, and pictures. Media player software may use Rygel to become a MediaRenderer that may be controlled remotely by a UPnP or DLNA Controller. ([Source Code](https://gitlab.gnome.org/GNOME/rygel/)) `LGPL-2.1` `C`\n- [Stash](https://stashapp.cc) - A web-based library organizer and player for your adult media stash, with auto-tagging and metadata scraping support. ([Source Code](https://github.com/stashapp/stash)) `AGPL-3.0` `Docker/Go`\n- [µStreamer](https://github.com/pikvm/ustreamer) - Lightweight and very quick server to stream MJPEG video from any V4L2 device to the net. `GPL-3.0` `C/deb`\n- [üWave](https://u-wave.net/) `⚠` - Self-hosted collaborative listening platform. Users take turns playing media—songs, talks, gameplay videos, or anything else—from a variety of media sources like YouTube and SoundCloud. ([Demo](https://wlk.yt/), [Source Code](https://github.com/u-wave)) `MIT` `Nodejs`\n\n\n### Media Streaming - Video Streaming\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Video](https://en.wikipedia.org/wiki/Video) streaming tools and software.\n\n_Related: [Video Surveillance](#video-surveillance), [Media Streaming - Multimedia Streaming](#media-streaming---multimedia-streaming), [Photo Galleries](#photo-galleries), [Media Management](#media-management)_\n\n- [CyTube](https://github.com/calzoneman/sync) - Synchronize media, chat, and more for an arbitrary number of channels. ([Demo](https://cytu.be)) `MIT` `Nodejs`\n- [Invidious](https://github.com/iv-org/invidious) `⚠` - Alternative YouTube front-end. ([Demo](https://docs.invidious.io/instances/)) `AGPL-3.0` `Docker/Crystal`\n- [MediaCMS](https://mediacms.io) - Modern, fully featured open source video and media CMS, written in Python/Django/React, featuring a REST API. ([Source Code](https://github.com/mediacms-io/mediacms)) `AGPL-3.0` `Python/Docker`\n- [OvenMediaEngine](https://github.com/AirenSoft/OvenMediaEngine) - Streaming Server with Sub-Second Latency. ([Demo](https://demo.ovenplayer.com)) `AGPL-3.0` `C++/Docker`\n- [Owncast](https://owncast.online/) - Decentralized single-user live video streaming and chat server for running your own live streams similar in style to the large mainstream options. ([Source Code](https://github.com/owncast/owncast)) `MIT` `Go`\n- [PeerTube](https://joinpeertube.org/en/) - Decentralized video streaming platform using P2P (BitTorrent) directly in the web browser. ([Source Code](https://github.com/Chocobozzz/PeerTube)) `AGPL-3.0` `Nodejs`\n- [Rapidbay](https://github.com/hauxir/rapidbay/) - Videostreaming service/torrent client that allows searching and playing videos from torrents in the browser or from a Chromecast/AppleTV/Smart TV. `MIT` `Python/Docker`\n- [Restreamer](https://datarhei.github.io/restreamer/) - Access H.264 real-time video streaming on your website without a streaming provider. ([Source Code](https://github.com/datarhei/restreamer)) `Apache-2.0` `Nodejs/Docker`\n- [SRS](https://ossrs.io/) - A simple, high efficiency and real-time video server, supports RTMP, WebRTC, HLS, HTTP-FLV and SRT. ([Source Code](https://github.com/ossrs/srs)) `MIT` `Docker/C++`\n- [SyncTube](https://github.com/RblSb/SyncTube) - Lightweight and very simple to setup CyTube alternative to watch videos with friends and chat. `MIT` `Nodejs/Haxe`\n- [Tube Archivist](https://tubearchivist.com/) `⚠` - Organize, search, and enjoy your YouTube collection. Subscribe, download, and track viewed content with metadata indexing and a user-friendly interface. ([Source Code](https://github.com/tubearchivist/tubearchivist), [Clients](https://docs.tubearchivist.com/faq/#how-do-i-import-my-videos-to-emby-plex-jellyfin-kodi)) `GPL-3.0` `Docker`\n- [Tube](https://git.mills.io/prologic/tube) - Youtube-like (_without censorship and features you don't need!_) video sharing app written in Go which also supports automatic transcoding to MP4 H.265 AAC, multiple collections and RSS feed. ([Demo](https://tube.mills.io)) `MIT` `Go`\n- [VideoLAN Client (VLC)](https://www.videolan.org/) - Cross-platform multimedia player client and server supporting most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. ([Source Code](https://code.videolan.org/videolan/vlc)) `GPL-2.0` `C/deb`\n\n\n### Miscellaneous\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware that does not fit in another section.\n\n- [2FAuth](https://github.com/Bubka/2FAuth) - Manage your Two-Factor Authentication (2FA) accounts and generate their security codes. ([Demo](https://demo.2fauth.app/)) `AGPL-3.0` `PHP/Docker`\n- [AlertHub](https://github.com/Ardakilic/alerthub) `⚠` - Get alerts from GitHub releases. `MIT` `Nodejs/Docker`\n- [Anchr](https://anchr.io) - Toolbox for tiny tasks on the internet, including bookmark collections, URL shortening and (encrypted) image uploads. ([Source Code](https://github.com/muety/anchr)) `GPL-3.0` `Nodejs`\n- [Anubis](https://anubis.techaro.lol/) - Web AI firewall utility which protects upstream resources from scraper bots. ([Source Code](https://github.com/TecharoHQ/anubis)) `MIT` `Docker/deb/Go`\n- [asciinema](https://asciinema.org/) - Web app for hosting asciicasts. ([Demo](https://asciinema.org/explore), [Source Code](https://github.com/asciinema/asciinema-server)) `Apache-2.0` `Elixir/Docker`\n- [Baby Buddy](https://github.com/babybuddy/babybuddy) - Helps caregivers track baby sleep, feedings, diaper changes, and tummy time. ([Demo](https://github.com/babybuddy/babybuddy#-demo)) `BSD-2-Clause` `Python`\n- [beelzebub](https://beelzebub-honeypot.com/) `⚠` - Honeypot framework designed to provide a highly secure environment for detecting and analyzing cyber attacks. ([Source Code](https://github.com/mariocandela/beelzebub)) `MIT` `Docker/K8S/Go`\n- [Canary Tokens](https://canarytokens.org) - Generates lightweight, embedded honeypot triggers called canary tokens for detecting unauthorized access. ([Source Code](https://github.com/thinkst/opencanary)) `BSD-3-Clause` `Docker/Python`\n- [ClipCascade](https://github.com/Sathvik-Rao/ClipCascade) - Syncs your clipboard across multiple devices instantly, without any button press. Available on Windows, macOS, Linux, and Android, it provides seamless and secure clipboard sharing with end-to-end data encryption. `GPL-3.0` `Java/Docker`\n- [Cloudlog](https://magicbug.co.uk/cloudlog/) - Log your amateur radio contacts anywhere. ([Source Code](https://github.com/magicbug/cloudlog)) `MIT` `PHP/Docker`\n- [ConvertX](https://github.com/C4illin/ConvertX) - Online file converter which supports over a thousand different formats. `AGPL-3.0` `Docker`\n- [CUPS](https://www.cups.org/) - The Common Unix Print System uses Internet Printing Protocol (IPP) to support printing to local and network printers. ([Source Code](https://github.com/OpenPrinting/cups)) `GPL-2.0` `C`\n- [CyberChef](https://github.com/gchq/CyberChef) - Perform all manner of operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. ([Demo](https://gchq.github.io/CyberChef)) `Apache-2.0` `Javascript`\n- [Digiboard](https://digiboard.app/) - Create collaborative whiteboards (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digiboard)) `AGPL-3.0` `Nodejs`\n- [Digicard](https://codeberg.org/ladigitale/digicard) - Create simple graphic compositions (documentation in French). ([Demo](https://ladigitale.dev/digicard/)) `AGPL-3.0` `Nodejs`\n- [Digicut](https://ladigitale.dev/digicut/) - Cut audio and video files using FFMPEG.wasm (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digicut)) `AGPL-3.0` `Nodejs`\n- [Digiface](https://ladigitale.dev/digiface/) - Create avatars using the Avataaars library (documentation in French). ([Demo](https://ladigitale.dev/digiface/), [Source Code](https://codeberg.org/ladigitale/digiface)) `AGPL-3.0` `Nodejs`\n- [Digiflashcards](https://ladigitale.dev/digiflashcards/) - An online application to create flashcards (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digiflashcards)) `AGPL-3.0` `Nodejs/PHP`\n- [Digimerge](https://ladigitale.dev/digimerge/) - Assemble audio and video files directly in your browser (documentation in French). ([Demo](https://ladigitale.dev/digimerge/), [Source Code](https://codeberg.org/ladigitale/Digimerge)) `AGPL-3.0` `Nodejs`\n- [Digiquiz](https://ladigitale.dev/digiquiz/) - An online application to publish content created with H5P (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digiquiz)) `AGPL-3.0` `Nodejs`\n- [Digiread](https://ladigitale.dev/digiread/) `⚠` - Clean up online pages and articles using Mozilla's Readability (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digiread)) `AGPL-3.0` `Nodejs/PHP`\n- [Digisteps](https://ladigitale.dev/digisteps/) - A simple application for creating online educational paths (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digisteps)) `AGPL-3.0` `Nodejs/PHP`\n- [Digitranscode](https://ladigitale.dev/digitranscode) - Convert audio files and videos directly in the browser (documentation in French). ([Demo](https://ladigitale.dev/digitranscode), [Source Code](https://codeberg.org/ladigitale/digitranscode)) `AGPL-3.0` `Nodejs`\n- [Digiview](https://ladigitale.dev/digiview/) `⚠` - View YouTube videos in a distraction-free interface (documentation in French). ([Demo](https://ladigitale.dev/digiview/), [Source Code](https://codeberg.org/ladigitale/digiview)) `AGPL-3.0` `Nodejs/PHP`\n- [Digiwords](https://ladigitale.dev/digiwords/) - A simple online application for creating word clouds (documentation in French). ([Source Code](https://codeberg.org/ladigitale/digiwords)) `AGPL-3.0` `Nodejs/PHP`\n- [DOCAT](https://github.com/docat-org/docat) - Host your docs. Simple. Versioned. Fancy. `MIT` `Python/Docker`\n- [Domain Locker](https://domain-locker.com) - Domain name portfolio management and tracker. ([Demo](https://demo.domain-locker.com), [Source Code](https://github.com/lissy93/domain-locker)) `MIT` `Deno/Docker`\n- [DOMJudge](https://www.domjudge.org/) - System for running a programming contest, like the ICPC regional and world championship programming contests. ([Demo](https://www.domjudge.org/demo), [Source Code](https://github.com/DOMjudge/domjudge)) `GPL-2.0/BSD-3-Clause/MIT` `PHP`\n- [ESMira](https://esmira.kl.ac.at) - Run longitudinal studies (ESM, AA, EMA) with data collection and communication with participants being completely anonymous. ([Demo](https://demo-esmira.kl.ac.at/#admin,username:demo,password:demodemodemo), [Source Code](https://github.com/KL-Psychological-Methodology/ESMira)) `AGPL-3.0` `PHP`\n- [F-Droid](https://f-droid.org) - Server tools for maintaining an F-Droid repository system. ([Source Code](https://gitlab.com/fdroid/fdroidserver)) `AGPL-3.0` `Python/Docker/deb`\n- [Flyimg](https://flyimg.io) - Resize and crop images on the fly. Get optimised images with MozJPEG, WebP or PNG using ImageMagick, with an efficient caching system. ([Demo](https://demo.flyimg.io), [Source Code](https://github.com/flyimg/flyimg)) `MIT` `Docker`\n- [Geeftlist](https://codeberg.org/nanawel/geeftlist) - Collaborative platform for managing, sharing and reserving gifts between friends and family. `GPL-3.0` `Docker`\n- [google-webfonts-helper](https://github.com/majodev/google-webfonts-helper) `⚠` - Hassle-Free Way to Self-Host Google Fonts. Get eot, ttf, svg, woff and woff2 files + CSS snippets. ([Demo](https://gwfh.mranftl.com/fonts)) `MIT` `Nodejs`\n- [graph-vl](https://github.com/verifid/graph-vl) - Identity document verification using Machine Learning and GraphQL. `MIT` `Python/Docker/K8S`\n- [Habitica](https://habitica.com/) - Habit tracker app which treats your goals like a Role Playing Game. ([Source Code](https://github.com/HabitRPG/habitica)) `GPL-3.0/CC-BY-SA-3.0` `Nodejs/Docker`\n- [HortusFox](https://hortusfox.github.io) - Collaborative plant management and tracking system for plant enthusiasts. ([Source Code](https://github.com/danielbrendel/hortusfox-web)) `MIT` `PHP/Docker`\n- [iSponsorBlockTV](https://github.com/dmunozv04/iSponsorBlockTV) `⚠` - Block and skip sponsors, while also muting and skipping ads on YouTube. `GPL-3.0` `Docker/Python`\n- [Jelu](https://bayang.github.io/jelu-web) - Read and to-read list book tracker. ([Source Code](https://github.com/bayang/jelu)) `MIT` `Java/Docker`\n- [Kasm Workspaces](https://kasmweb.com/) - Streaming containerized apps and desktops to end-users. Examples include Ubuntu in your browser, or simply single apps such as Chrome, OpenOffice, Gimp, Filezilla etc. ([Demo](https://www.kasmweb.com/#demo), [Source Code](https://github.com/kasmtech)) `GPL-3.0` `Docker`\n- [Koillection](https://koillection.github.io/) - Koillection is a service allowing users to manage any kind of collections. ([Source Code](https://github.com/benjaminjonard/koillection)) `MIT` `Docker/PHP`\n- [LanguageTool](https://languagetool.org/) - Proofread more than 20 languages. It finds many errors that a simple spell checker cannot detect. ([Source Code](https://github.com/languagetool-org/languagetool), [Clients](https://languagetool.org/insights/post/product-windows-app/)) `LGPL-2.1` `Java/Docker`\n- [Libre Translate](https://libretranslate.com/) - Machine Translation API. ([Source Code](https://github.com/LibreTranslate/LibreTranslate)) `AGPL-3.0` `Docker/Python`\n- [LubeLogger](https://lubelogger.com) - Web-based vehicle maintenance and fuel mileage tracker. ([Demo](https://github.com/hargata/lubelog?tab=readme-ov-file#demo), [Source Code](https://github.com/hargata/lubelog)) `MIT` `Docker/K8S/C#`\n- [mosparo](https://mosparo.io/) - The modern spam protection tool. It replaces other captcha methods with a simple and easy to use spam protection solution. ([Source Code](https://github.com/mosparo/mosparo)) `MIT` `PHP`\n- [MyIP](https://ipcheck.ing) `⚠` - All in one IP Toolbox. Easy to check what's your IPs, IP geolocation, check for DNS leaks, examine WebRTC connections, speed test, ping test, MTR test, check website availability and more. ([Demo](https://ipcheck.ing), [Source Code](https://github.com/jason5ng32/MyIP)) `MIT` `Nodejs/Docker`\n- [MySpeed](https://myspeed.dev/) - Speed test analysis software that shows your internet speed for up to 30 days. ([Source Code](https://github.com/gnmyt/myspeed)) `MIT` `Docker/Nodejs`\n- [Neko](https://neko.m1k1o.net) - Virtual browser that runs in docker and uses WebRTC. ([Source Code](https://github.com/m1k1o/neko)) `Apache-2.0` `Docker/Go`\n- [Open-Meteo](https://open-meteo.com/) - Weather API with open-data forecasts, historical and climate data from all major national weather services. ([Demo](https://open-meteo.com/en/docs), [Source Code](https://github.com/open-meteo/open-meteo)) `AGPL-3.0` `Docker`\n- [OpenZiti](https://openziti.github.io/) - Fully-featured, zero trust, full mesh overlay network. Includes a 2FA support out of the box, clients for all major desktop/mobile OS'es. ([Source Code](https://github.com/openziti/ziti)) `Apache-2.0` `Go`\n- [Operational.co](https://operational.co) - Receive alerts in a live timeline from your product. ([Demo](https://app.operational.co/?signinas=kevin), [Source Code](https://github.com/operational-co/operational.co)) `AGPL-3.0` `Nodejs/Docker`\n- [penpot](https://penpot.app/) - Web-based design and prototyping platform meant for cross-domain teams. ([Source Code](https://github.com/penpot/penpot)) `MPL-2.0` `Docker`\n- [POMjs](https://password.oppetmoln.se/) - Random password generator. ([Source Code](https://github.com/joho1968/POMjs)) `GPL-2.0` `Javascript`\n- [Reactive Resume](https://rxresu.me/) - One-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. ([Demo](https://rxresu.me/app/dashboard/), [Source Code](https://github.com/AmruthPillai/Reactive-Resume)) `MIT` `Docker/Nodejs`\n- [revealjs](https://revealjs.com) - Framework for easily creating beautiful presentations using HTML. ([Demo](https://revealjs.com/), [Source Code](https://github.com/hakimel/reveal.js)) `MIT` `Javascript`\n- [Revive Adserver](https://www.revive-adserver.com/) - Ad serving system. Formerly known as OpenX Adserver and phpAdsNew. ([Source Code](https://github.com/revive-adserver/revive-adserver)) `GPL-2.0` `PHP`\n- [SANE Network Scanning](http://sane-project.org/) - Allow remote clients to access image acquisition devices (scanners) available on the local host. ([Source Code](http://www.sane-project.org/cvs.html)) `GPL-2.0` `C`\n- [Speed Test by OpenSpeedTest™](https://openspeedtest.com/) - Free & Open-Source HTML5 Network Performance Estimation Tool. ([Source Code](https://github.com/openspeedtest/Speed-Test)) `MIT` `Docker`\n- [Speedtest Tracker](https://docs.speedtest-tracker.dev/) - Monitor the performance and uptime of your internet connection. ([Source Code](https://github.com/alexjustesen/speedtest-tracker)) `MIT` `Docker/K8S`\n- [string.is](https://string.is/) - An open-source, privacy-friendly online string toolkit for developers. ([Source Code](https://github.com/recurser/string-is)) `AGPL-3.0` `Nodejs`\n- [Teleport](https://goteleport.com/) - Certificate authority and access plane for SSH, Kubernetes, web applications, and databases. ([Source Code](https://github.com/gravitational/teleport)) `Apache-2.0` `Go/Docker/K8S`\n- [TeslaMate](https://github.com/teslamate-org/teslamate) - A powerful data logger for Tesla vehicles. `MIT` `Elixir/Docker`\n- [Upsnap](https://github.com/seriousm4x/UpSnap) - A simple Wake on LAN (WOL) dashboard app. Wake up devices on your network and see current status. `MIT` `Go/Docker`\n- [URL-to-PNG](https://github.com/jasonraimondi/url-to-png) - URL to PNG utility featuring parallel rendering using Playwright for screenshots and with storage caching via Local, S3, or CouchDB. `MIT` `Nodejs/Docker`\n- [Usertour](https://www.usertour.io/) - User onboarding platform allowing you to create in-app product tours, checklists, and surveys in minutes effortlessly. ([Source Code](https://github.com/usertour/usertour/)) `AGPL-3.0` `Docker`\n- [Wakupator](https://github.com/Gibus21250/Wakupator) - Wake On LAN Machine Manager based on network traffic. `MIT` `C`\n- [Warracker](https://warracker.com) - Warranty tracker that lets you monitor expiry dates, upload receipts/files, and get alerts before warranties expire. ([Source Code](https://github.com/sassanix/Warracker)) `AGPL-3.0` `Docker`\n- [Wavelog](https://www.wavelog.org) - Webbased Logging Software for Radio Amateurs. Enhanced QSO logging, statistics and maps for your browser. ([Demo](https://demo.wavelog.org), [Source Code](https://github.com/wavelog/wavelog)) `MIT` `PHP/Docker`\n- [WeeWX](https://weewx.com/) - Open source software for your weather station. ([Demo](https://weewx.com/showcase.html), [Source Code](https://github.com/weewx/weewx)) `GPL-3.0` `Python/deb`\n- [WeTTY](https://butlerx.github.io/wetty/#/) - Terminal in browser over http/https. ([Source Code](https://github.com/butlerx/wetty)) `MIT` `Docker/Nodejs`\n- [Yamtrack](https://github.com/FuzzyGrim/Yamtrack) `⚠` - Media tracker for movies, tv shows, anime, manga, video games and books. ([Demo](https://github.com/FuzzyGrim/Yamtrack?tab=readme-ov-file#demo)) `AGPL-3.0` `Docker/Python`\n\n\n### Money, Budgeting & Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Money management](https://en.wikipedia.org/wiki/Money_management) and budgeting software.\n\n_Related: [Inventory Management](#inventory-management), [Resource Planning](#resource-planning)_\n\n- [Actual](https://actualbudget.org) - Local-first personal finance tool based on zero-sum budgeting, supporting synchronization across devices, custom rules, manual transaction importing (from QIF, OFX, and QFX files), and optional automatic synchronization with many banks. ([Source Code](https://github.com/actualbudget/actual)) `MIT` `Nodejs/Docker`\n- [Bigcapital](https://bigcapital.app/) - Financial accounting and inventory management software for small to medium businesses. ([Source Code](https://github.com/bigcapitalhq/bigcapital)) `AGPL-3.0` `Docker`\n- [Bitcart](https://bitcart.ai) - Cryptocurrencies payment processor and development platform. ([Demo](https://admin.bitcart.ai), [Source Code](https://github.com/bitcart/bitcart)) `MIT` `Docker/Python/Nodejs`\n- [BTCPay Server](https://btcpayserver.org/) - Bitcoin and other cryptocurrencies payment processor. ([Demo](https://mainnet.demo.btcpayserver.org/), [Source Code](https://github.com/btcpayserver/btcpayserver)) `MIT` `C#`\n- [DePay](https://depay.com) - Accept Web3 Payments directly into your wallet. Peer-to-peer, free, self-hosted & open-source. ([Demo](https://depay.com/products/payments), [Source Code](https://github.com/depayfi/widgets)) `MIT` `Nodejs`\n- [ExpenseOwl](https://github.com/tanq16/expenseowl) - Extremely simple expense tracker with a beautiful UI. `MIT` `Go/Docker/K8S`\n- [ezbookkeeping](https://ezbookkeeping.mayswind.net/) - A lightweight personal bookkeeping app hosted by yourself. ([Demo](https://ezbookkeeping-demo.mayswind.net/), [Source Code](https://github.com/mayswind/ezbookkeeping)) `MIT` `Go/Docker`\n- [Family Accounting Tool](https://github.com/nymanjens/facto) - Web-based finance management tool for partners with partially shared expenses. `Apache-2.0` `Scala`\n- [Fava](https://beancount.github.io/fava/) - Web frontend of Beancount, a text based double-entry accounting system. ([Demo](https://fava.pythonanywhere.com/example-with-budgets/income_statement/), [Source Code](https://github.com/beancount/fava)) `MIT` `Python`\n- [Firefly III](https://firefly-iii.org/) - Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. ([Demo](https://demo.firefly-iii.org/), [Source Code](https://github.com/firefly-iii/firefly-iii)) `AGPL-3.0` `PHP/Docker`\n- [FOSSBilling](https://fossbilling.org/) - Hosting and billing automation. Integrates with WHM, CWP, cPanel and HestiaCP. Full API and easily extensible. ([Demo](https://fossbilling.org/demo), [Source Code](https://github.com/FOSSBilling/FOSSBilling)) `Apache-2.0` `PHP/Docker`\n- [Galette](https://galette.eu/) - Membership management web application aimed towards non profit organizations. ([Source Code](https://github.com/galette/galette)) `GPL-3.0` `PHP`\n- [Ghostfolio](https://ghostfol.io/) - Wealth management software to keep track of stocks, ETFs and cryptocurrencies. ([Source Code](https://github.com/ghostfolio/ghostfolio)) `AGPL-3.0` `Docker/Nodejs`\n- [GRR](https://grr.devome.com/?lang=en) - Assets management and booking for small/medium companies. ([Source Code](https://github.com/JeromeDevome/GRR)) `GPL-2.0` `PHP`\n- [HyperSwitch](https://hyperswitch.io/) `⚠` - Payment switch to make payments fast, reliable and affordable. Connect with multiple payment processors and route traffic effortlessly, all with a single API integration. ([Source Code](https://github.com/juspay/hyperswitch)) `Apache-2.0` `Docker/Rust`\n- [IHateMoney](https://ihatemoney.org/) - Manage your shared expenses, easily. ([Demo](https://ihatemoney.org/demo/), [Source Code](https://github.com/spiral-project/ihatemoney)) `BSD-3-Clause` `Docker/Python`\n- [InvoicePlane](https://www.invoiceplane.com/) - Manage quotes, invoices, payments and customers for your small business. ([Source Code](https://github.com/InvoicePlane/InvoicePlane)) `MIT` `PHP`\n- [InvoiceShelf](https://invoiceshelf.com/) - Track expenses, payments & create professional invoices & estimates (fork of Crater). ([Source Code](https://github.com/InvoiceShelf/InvoiceShelf)) `AGPL-3.0` `PHP/Docker`\n- [Kill Bill](https://killbill.io/) - Subscription billing & payments platform. Have access to real-time analytics and financial reports. ([Source Code](https://github.com/killbill/killbill)) `Apache-2.0` `Java/Docker`\n- [Kresus](https://kresus.org/) - Personal finance manager. ([Demo](https://kresus.org/en/demo.html), [Source Code](https://github.com/kresusapp/kresus)) `AGPL-3.0` `Nodejs/Docker`\n- [Lago](https://www.getlago.com/) - Metering and usage-based billing. ([Source Code](https://github.com/getlago/lago)) `AGPL-3.0` `Docker`\n- [Mybucks.online](https://mybucks.online) - Secure, browser-based, password-only self-custodial cryptocurrency wallet. ([Demo](https://app.mybucks.online), [Source Code](https://github.com/mybucks-online/app)) `MIT` `Nodejs`\n- [MyFin Budget](https://myfinbudget.com) - Personal finances platform (web + REST API + Android) that'll help you budget, keep track of your income/spending and forecast your financial future. ([Demo](https://github.com/afaneca/myfin?tab=readme-ov-file#demo-account---try-it-for-yourself), [Source Code](https://github.com/afaneca/myfin), [Clients](https://github.com/afaneca/myfin-api)) `GPL-3.0` `Nodejs/Docker`\n- [OctoBot](https://www.octobot.cloud/) - Cryptocurrency trading bot. ([Source Code](https://github.com/Drakkar-Software/OctoBot)) `GPL-3.0` `Python/Docker`\n- [Ocular](https://simonwep.github.io/ocular/) - Simplistic and straightforward budgeting app to track your budget across months and years. ([Demo](https://ocular.reinisch.io/#demo), [Source Code](https://github.com/simonwep/ocular)) `MIT` `Docker`\n- [OpenBudgeteer](https://github.com/TheAxelander/OpenBudgeteer) - Budgeting app based on the Bucket Budgeting Principle. `AGPL-3.0` `Docker/C#`\n- [Receipt Wrangler](https://receiptwrangler.io) `⚠` - Easy-to-use receipt manager, powered by AI. Allows users to create receipts effortlessly and quickly, categorize and more. ([Demo](https://demo.receiptwrangler.io), [Source Code](https://github.com/Receipt-Wrangler/receipt-wrangler-api)) `AGPL-3.0` `Docker`\n- [REI3](https://rei3.de/home_en/) - Manage tasks, time, assets and much more within your business. ([Demo](https://rei3.de/demo_en/), [Source Code](https://github.com/r3-team/r3)) `MIT` `Go`\n- [SHKeeper](https://shkeeper.io/) - Cryptocurrency payment processor with the unique combination of gateway and merchant allowing you to accept payments in multiple cryptocurrencies without fees and intermediaries. ([Demo](https://github.com/vsys-host/shkeeper.io?tab=readme-ov-file#11-demo), [Source Code](https://github.com/vsys-host/shkeeper.io)) `GPL-3.0` `Python`\n- [SolidInvoice](https://solidinvoice.co) - Open source invoicing and quote application. ([Source Code](https://github.com/SolidInvoice/SolidInvoice)) `MIT` `PHP`\n- [VoucherVault](https://github.com/l4rm4nd/VoucherVault) - Store and manage vouchers, coupons, loyalty and gift cards digitally. Supports expiry notifications, transaction histories, file uploads and OIDC SSO. `GPL-3.0` `Docker`\n- [Wallos](https://wallosapp.com) - Lightweight personal subscription tracker with statistics and optional notifications. ([Demo](https://github.com/ellite/wallos?tab=readme-ov-file#demo), [Source Code](https://github.com/ellite/wallos)) `GPL-3.0` `PHP/Docker`\n- [WYGIWYH](https://github.com/eitchtee/WYGIWYH) - Simple and powerful finance tracker. ([Demo](https://wygiwyh-demo.herculino.com/)) `AGPL-3.0` `Docker/Django`\n- [YAFFA](https://www.yaffa.cc) - Personal finance web application, that can be used to keep track of your money, expenses, budgets, and investments. It also helps with long-term financial planning. ([Demo](https://sandbox.yaffa.cc), [Source Code](https://github.com/kantorge/yaffa)) `MIT` `PHP`\n\n\n### Monitoring\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware for [monitoring](https://en.wikipedia.org/wiki/Monitoring#Computing) systems, networks, applications and websites. \n\n**Please visit [awesome-sysadmin/Monitoring](https://github.com/awesome-foss/awesome-sysadmin#monitoring), [awesome-sysadmin/Metrics and Metric Collection](https://github.com/awesome-foss/awesome-sysadmin#metrics--metric-collection)**\n\n\n\n### Note-taking & Editors\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Note taking](https://en.wikipedia.org/wiki/Note-taking) editors.\n\n_Related: [Wikis](#wikis)_\n\n- [Blinko](https://blinko.space/) - A personal note tool with AI features. ([Source Code](https://github.com/blinkospace/blinko)) `AGPL-3.0` `Docker`\n- [DailyTxT](https://github.com/PhiTux/DailyTxT) - Encrypted diary Web application to save your personal memories of each day. Includes a search function and encrypted file upload. `MIT` `Docker`\n- [Docs](https://docs.numerique.gouv.fr/) - Collaborative note taking, wiki and documentation platform that scales. ([Source Code](https://github.com/suitenumerique/docs)) `MIT` `K8S`\n- [draw.io](https://draw.io) - Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. ([Source Code](https://github.com/jgraph/drawio)) `Apache-2.0` `Javascript/Docker`\n- [flatnotes](https://github.com/dullage/flatnotes) - Database-less note-taking web app that utilises a flat folder of markdown files for storage. ([Demo](https://demo.flatnotes.io)) `MIT` `Docker`\n- [HedgeDoc](https://hedgedoc.org/) - Realtime collaborative markdown notes on all platforms, formerly known as CodiMD and HackMD CE. ([Demo](https://demo.hedgedoc.org/), [Source Code](https://github.com/hedgedoc/hedgedoc)) `AGPL-3.0` `Docker/Nodejs`\n- [Joplin](https://joplinapp.org/) - Note taking application with markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through a self hosted Nextcloud instance or similar (alternative to Evernote). ([Source Code](https://github.com/laurent22/joplin)) `MIT` `Nodejs`\n- [Livebook](https://livebook.dev) - Realtime collaborative notebook app based on Markdown that supports running Elixir code snippets, TeX and Mermaid Diagrams. Easily deployed using Docker or Elixir. ([Source Code](https://github.com/livebook-dev/livebook)) `Apache-2.0` `Elixir/Docker`\n- [Memos](https://usememos.com/) - Knowledge base that works with a SQLite db file. ([Demo](https://demo.usememos.com/explore), [Source Code](https://github.com/usememos/memos)) `MIT` `Docker/Go`\n- [Note Mark](https://notemark.docs.enchantedcode.co.uk/) - Minimal web-based Markdown notes app. ([Source Code](https://github.com/enchant97/note-mark)) `AGPL-3.0` `Docker`\n- [Overleaf](https://www.overleaf.com/) - Web-based collaborative LaTeX editor. ([Source Code](https://github.com/overleaf/overleaf)) `AGPL-3.0` `Ruby`\n- [Plainpad](https://alextselegidis.com/get/plainpad/) - Modern note taking application for the cloud, utilizing the best features of progressive web apps technology. ([Demo](https://alextselegidis.com/try/plainpad/), [Source Code](https://github.com/alextselegidis/plainpad)) `GPL-3.0` `PHP`\n- [SilverBullet](https://silverbullet.md/) - Note-taking application optimized for people with a hacker mindset. ([Demo](https://play.silverbullet.md/), [Source Code](https://github.com/silverbulletmd/silverbullet), [Clients](https://silverbullet.md/Libraries)) `MIT` `Docker/Deno`\n- [Standard Notes](https://docs.standardnotes.com/self-hosting/getting-started) - Simple and private notes app. Protect your privacy while getting more done. That's Standard Notes. ([Demo](https://app.standardnotes.com/), [Source Code](https://github.com/standardnotes/app)) `GPL-3.0` `Ruby`\n- [TriliumNext Notes](https://github.com/TriliumNext/Trilium) - Cross-platform hierarchical note taking application with focus on building large personal knowledge bases (fork of Trilium Notes). `AGPL-3.0` `Nodejs/Docker/K8S`\n- [Turtl](https://turtl.it/) - Totally private personal database and note taking app. ([Source Code](https://github.com/turtl)) `GPL-3.0` `CommonLisp`\n- [Writing](https://josephernest.github.io/writing/) - Lightweight distraction-free text editor, in the browser (Markdown and LaTeX supported). No lag when writing. ([Source Code](https://github.com/josephernest/writing)) `MIT` `Javascript`\n\n\n### Office Suites\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nAn [office suite](https://en.wikipedia.org/wiki/List_of_office_suites) is a collection of productivity software usually containing at least a word processor, spreadsheet and a presentation program.\n\n- [Collabora Online Development Edition](https://www.collaboraoffice.com/code) - Collabora Online Development Edition (CODE) is a powerful LibreOffice-based online office that supports all major document, spreadsheet and presentation file formats, which you can integrate in your own infrastructure. ([Source Code](https://cgit.freedesktop.org/libreoffice/online/)) `MPL-2.0` `C++`\n- [CryptPad](https://cryptpad.org) - Collaboration suite built to enable collaboration, synchronizing changes to documents in real time. ([Source Code](https://github.com/cryptpad/cryptpad)) `AGPL-3.0` `Nodejs/Docker`\n- [Digislides](https://ladigitale.dev/digislides/) - Create multimedia presentations in a quick and easy way. (documentation in French). ([Demo](https://ladigitale.dev/digislides/), [Source Code](https://codeberg.org/ladigitale/Digislides)) `AGPL-3.0` `Nodejs/PHP`\n- [Etherpad](https://etherpad.org/) - Highly customizable online editor providing collaborative editing in real-time. ([Demo](https://demo.sandstorm.io/appdemo/h37dm17aa89yrd8zuqpdn36p6zntumtv08fjpu8a8zrte7q1cn60), [Source Code](https://github.com/ether/etherpad-lite)) `Apache-2.0` `Nodejs/Docker`\n- [Grist](https://getgrist.com/) - Next-generation spreadsheet with relational structure, formula-based access control, and a portable, self-contained format (alternative to Airtable). ([Demo](https://docs.getgrist.com), [Source Code](https://github.com/gristlabs/grist-core)) `Apache-2.0` `Nodejs/Python/Docker`\n- [ONLYOFFICE](https://helpcenter.onlyoffice.com/faq/server-opensource.aspx) - Office suite that enables you to manage documents, projects, team and customer relations in one place. ([Source Code](https://github.com/ONLYOFFICE/DocumentServer)) `AGPL-3.0` `Nodejs/Docker`\n\n\n### Password Managers\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [password manager](https://en.wikipedia.org/wiki/Password_manager) allows users to store, generate, and manage their passwords for local applications and online services.\n\n- [AliasVault](https://www.aliasvault.net) - End-to-end encrypted password manager with a built-in email alias generator and server. ([Source Code](https://github.com/lanedirt/AliasVault)) `MIT` `Docker`\n- [Bitwarden](https://bitwarden.com/) `⚠` - Password manager with a webapp, browser extension, and mobile app. ([Source Code](https://github.com/bitwarden/server)) `AGPL-3.0` `Docker/C#`\n- [Passbolt](https://www.passbolt.com/) - Collaborative password manager. ([Source Code](https://github.com/passbolt/passbolt_api)) `AGPL-3.0` `PHP/deb/K8S/Docker`\n- [PassIt](https://passit.io/) - Simple password manage with sharing features by group and user, but no administration interface. ([Demo](https://app.passit.io/), [Source Code](https://gitlab.com/passit)) `AGPL-3.0` `Docker/Django`\n- [Passky](https://passky.org) - Simple and modern password manager with website, browser extension, android and desktop application. ([Demo](https://vault.passky.org), [Source Code](https://github.com/Rabbit-Company/Passky-Server)) `GPL-3.0` `PHP/Docker`\n- [Psono](https://psono.com/) - Password manager for companies. ([Demo](https://www.psono.pw), [Source Code](https://gitlab.com/esaqa/psono/psono-fileserver)) `Apache-2.0` `Python`\n- [Teampass](https://teampass.net/) - Password manager dedicated for managing passwords in a collaborative way. One symmetric key is used to encrypt all shared/team passwords and stored server side in a file and the database. works on any server Apache, MySQL and PHP. ([Source Code](https://github.com/nilsteampassnet/TeamPass)) `GPL-3.0` `PHP`\n- [Vaultwarden](https://github.com/dani-garcia/vaultwarden) - Lightweight Bitwarden server API implementation written in Rust. `GPL-3.0` `Rust/Docker`\n\n\n### Pastebins\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [pastebin](https://en.wikipedia.org/wiki/Pastebin) is a type of online content-hosting service used for sharing and storing code and text.\n\n- [bin](https://github.com/w4/bin) - A paste bin that's actually minimalist. `WTFPL/0BSD` `Rust`\n- [BinPastes](https://github.com/querwurzel/BinPastes) - Minimal pastebin supporting client-side encryption, fulltext search, one-time messages. Intended for one to few users looking for a simple pastebin deployment. ([Demo](https://paste.wylke.it)) `Apache-2.0` `Java`\n- [ByteStash](https://github.com/jordan-dalby/ByteStash) - Pastebin and file storage service with a simple web interface. Supports syntax highlighting, optional user authentication and public sharing. ([Demo](https://github.com/jordan-dalby/ByteStash?tab=readme-ov-file#demo)) `GPL-3.0` `Docker`\n- [Chiyogami](https://github.com/rhee876527/chiyogami) - Pastebin with API, client-side encryption, user accounts, syntax highlighting, markdown rendering, and more. ([Demo](https://chiyogami.myaddr.dev/)) `BSD-3-Clause` `Docker`\n- [dpaste](https://dpaste.org/) - Simple pastebin with multiple text and code option, with short url result easy to remember. ([Source Code](https://github.com/DarrenOfficial/dpaste)) `MIT` `Docker/Django`\n- [FlashPaper](https://github.com/AndrewPaglusch/FlashPaper) - One-time encrypted zero-knowledge password/secret sharing application focused on simplicity and security. No database or complicated set-up required. ([Demo](https://flashpaper.io)) `MIT` `Docker/PHP`\n- [Hemmelig](https://hemmelig.app) - Share encrypted secrets cross organizations, or as private persons. ([Source Code](https://github.com/HemmeligOrg/Hemmelig.app)) `MIT` `Docker/Nodejs`\n- [lesma](https://lesma.eu) - Simple paste app friendly with browser and command line. ([Demo](https://lesma.eu), [Source Code](https://gitlab.com/ogarcia/lesma)) `GPL-3.0` `Rust/Docker`\n- [Local Content Share](https://github.com/Tanq16/local-content-share) - Store and share text snippets and files within your local network. `MIT` `Docker/Go`\n- [not-th.re](https://not-th.re) - Simple paste sharing platform, with client side encryption, featuring the monaco browser-based code editor. ([Demo](https://not-th.re), [Source Code](https://github.com/not-three/main)) `AGPL-3.0` `Nodejs/Docker`\n- [Opengist](https://github.com/thomiceli/opengist) - Pastebin powered by Git. ([Demo](https://demo.opengist.io)) `AGPL-3.0` `Docker/Go/Nodejs`\n- [paaster](https://paaster.io) - End-to-end encrypted pastebin built with the objective of simplicity. ([Source Code](https://github.com/WardPearce/paaster)) `AGPL-3.0` `Docker`\n- [pacebin](https://git.crueter.xyz/crueter/pacebin) - Super-minimal pastebin and file upload service focusing on small executable size, portability, and ease of configuration. ([Demo](https://paste.crueter.xyz)) `AGPL-3.0` `C`\n- [Password Pusher](https://pwpush.com) - Dead-simple application to securely communicate passwords (or text) over the web. Passwords automatically expire after a certain number of views and/or time has passed. ([Source Code](https://github.com/pglombardo/PasswordPusher)) `Apache-2.0` `Docker/K8S/Ruby`\n- [Pastefy](https://pastefy.app/) - Beautiful, simple and easy to deploy Pastebin with optional client encryption, multitab pastes, an API, a highlighted editor and more. ([Source Code](https://github.com/interaapps/pastefy), [Clients](https://github.com/topics/pastefy-addon)) `MIT` `Docker/K8S/Java`\n- [PrivateBin](https://privatebin.info/) - Minimalist pastebin/discussion board where the server has zero knowledge of hosted data. ([Demo](https://privatebin.net/), [Source Code](https://github.com/PrivateBin/PrivateBin)) `Zlib` `PHP`\n- [rustypaste](https://github.com/orhun/rustypaste) - Minimal file upload/pastebin service. `MIT` `Rust`\n- [SnyPy](https://snypy.com) - Open source on-prem code snippet manager. ([Demo](https://app.snypy.com), [Source Code](https://github.com/snypy)) `MIT` `Docker`\n- [Sup3rS3cretMes5age](https://github.com/algolia/sup3rS3cretMes5age) - Very simple (to deploy and to use) secret message service using Hashicorp Vault as a secrets storage. `MIT` `Go`\n- [Wastebin](https://github.com/matze/wastebin) - Lightweight, minimal and fast pastebin with an SQLite backend. ([Demo](https://bin.bloerg.net)) `MIT` `Rust/Docker`\n- [ybFeed](https://github.com/ybizeul/ybFeed) - Personal micro feed where you can post snippets of text or images. `MIT` `Go/Nodejs/Docker`\n- [Yopass](https://github.com/jhaals/yopass) - Secure sharing of secrets, passwords and files. ([Demo](https://yopass.se/)) `Apache-2.0` `Go/Docker`\n\n\n### Personal Dashboards\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nDashboards for accessing information and applications.\n\n_Related: [Monitoring](#monitoring), [Bookmarks and Link Sharing](#bookmarks-and-link-sharing)_\n\n- [Dashy](https://dashy.to/) - Feature-rich homepage for your homelab, with easy YAML configuration. ([Demo](https://demo.dashy.to/), [Source Code](https://github.com/lissy93/dashy)) `MIT` `Nodejs/Docker`\n- [Fenrus](https://github.com/revenz/fenrus) - Personal home page that allows for multiple users, guest access and multiple dashboards for each user. It also has \"Smart Apps\" which display live data for those apps. `GPL-3.0` `.NET/Docker`\n- [Glance](https://github.com/glanceapp/glance) - Highly customizable dashboard that puts all your feeds in one place. `AGPL-3.0` `Docker/Go`\n- [gobookmarks](https://github.com/arran4/gobookmarks) - Landing page to display bookmarks stored in GitHub, GitLab or local Git. `AGPL-3.0` `Go/Docker`\n- [Heimdall](https://heimdall.site/) - Elegant solution to organise all your web applications. ([Source Code](https://github.com/linuxserver/Heimdall)) `MIT` `PHP`\n- [Hiccup](https://designedbyashw.in/test/hiccup/) - Beautiful static homepage to get to your links and services quickly. It has built-in search, editing, PWA support and localstorage caching to easily organize your start page. ([Source Code](https://github.com/ashwin-pc/hiccup)) `MIT` `Javascript/Docker`\n- [Homarr](https://homarr.dev) - Sleek, modern dashboard with many integrations and web-based config. ([Source Code](https://github.com/homarr-labs/homarr)) `MIT` `Docker/Nodejs`\n- [Homepage by gethomepage](https://github.com/gethomepage/homepage) - Highly customizable homepage (or startpage / application dashboard) with Docker and service API integrations. `GPL-3.0` `Docker/Nodejs`\n- [Homepage by tomershvueli](https://github.com/tomershvueli/homepage) - Simple, standalone, self-hosted PHP page that is your window to your server and the web. `MIT` `PHP`\n- [Homer](https://github.com/bastienwirtz/homer) - Dead simple static homepage to expose your server services, with an easy yaml configuration and connectivity check. ([Demo](https://homer-demo.netlify.app)) `Apache-2.0` `Docker/K8S/Nodejs`\n- [Hubleys](https://github.com/knrdl/hubleys-dashboard) - Personal dashboards to organize links for multiple users via a central yaml config. `MIT` `Docker`\n- [LinkStack](https://linkstack.org/) - Link all your social media platforms easily accessible on one page, customizable through an intuitive, easy to use user/admin interface (alternative to Linktree and Manylink). ([Demo](https://linksta.cc/), [Source Code](https://github.com/LinkStackOrg/LinkStack)) `AGPL-3.0` `PHP/Docker`\n- [LittleLink](https://littlelink.io/) - Simplistic approach for links in bio with 100+ branded buttons (alternative to Linktree). ([Demo](https://littlelink.io/), [Source Code](https://github.com/sethcottle/littlelink)) `MIT` `Javascript`\n- [Mafl](https://mafl.hywax.space/) - Minimalistic flexible homepage. ([Source Code](https://github.com/hywax/mafl)) `MIT` `Docker/Nodejs`\n- [Personal Management System](https://volmarg.github.io/) - Organize the essentials of everyday life, everything from a simple to-do list, and notes up to payments, and schedules. ([Demo](https://github.com/Volmarg/personal-management-system#documentation--demo), [Source Code](https://github.com/Volmarg/personal-management-system)) `MIT` `Docker`\n- [portkey](https://portkey.page) - Simple web portal that serves as a startup page, displaying a compilation of links and URLs, while also allowing the addition of custom pages, all managed through a single configuration file. ([Demo](https://demo.portkey.page), [Source Code](https://github.com/kodehat/portkey)) `AGPL-3.0` `Go/Docker`\n- [ryot](https://github.com/ignisda/ryot) - Track various facets of your life - media, fitness, etc. ([Demo](https://github.com/IgnisDa/ryot?tab=readme-ov-file#-demo)) `GPL-3.0` `Docker`\n- [Starbase 80](https://github.com/notclickable-jordan/starbase-80) - A simple homepage with an iPad-style application grid, for mobile and desktop. One JSON configuration file. `MIT` `Docker`\n- [Web-Portal](https://github.com/enchant97/web-portal) - A python web app designed to allow a easy way to manage the links to all of your web services. `AGPL-3.0` `Docker/Python`\n- [Your Spotify](https://github.com/Yooooomi/your_spotify) `⚠` - Allows you to record your Spotify listening activity and have statistics about them served through a Web application. `MIT` `Nodejs/Docker`\n\n\n### Photo Galleries\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [gallery](https://en.wikipedia.org/wiki/Gallery_Software) is software that helps the user publish or share photos, pictures, videos or other digital media.\n\n_Related: [Static Site Generators](#static-site-generators), [Media Streaming - Video Streaming](#media-streaming---video-streaming), [Content Management Systems (CMS)](#content-management-systems-cms)_\n\n- [Chevereto](https://chevereto.com/) - Ultimate image sharing software. Create your very own personal image hosting website in just minutes. ([Source Code](https://github.com/chevereto/chevereto)) `AGPL-3.0` `PHP/Docker`\n- [Damselfly](https://damselfly.info) - Fast server-based photo management system for large collections of images. Includes face detection, face & object recognition, powerful search, and EXIF Keyword tagging. Runs on Linux, MacOS and Windows. ([Source Code](https://github.com/webreaper/damselfly)) `GPL-3.0` `Docker/C#/.NET`\n- [Ente](https://ente.io/) - An end-to-end encrypted photo-sharing platform (alternative to Google Photos, Apple Photos). ([Source Code](https://github.com/ente-io/ente)) `AGPL-3.0` `Docker/Nodejs/Go`\n- [HomeGallery](https://home-gallery.org) - Browse personal photos and videos featuring tagging, mobile-friendly, and AI powered image discovery. ([Demo](https://demo.home-gallery.org), [Source Code](https://github.com/xemle/home-gallery)) `MIT` `Nodejs/Docker`\n- [Immich Kiosk](https://github.com/damongolding/immich-kiosk) - Lightweight slideshow for running on kiosk devices and browsers that uses Immich as a data source. `GPL-3.0` `Docker/Go`\n- [Immich](https://immich.app/) - Photo and video backup solution directly from your mobile phone. ([Demo](https://github.com/immich-app/immich#demo), [Source Code](https://github.com/immich-app/immich)) `AGPL-3.0` `Docker`\n- [LibrePhotos](https://github.com/LibrePhotos/librephotos) - Photo management service with a slight focus on cool graphs (alternative to Google Photos). ([Clients](https://docs.librephotos.com/docs/user-guide/mobile/)) `MIT` `Python/Docker`\n- [Lychee](https://lycheeorg.github.io/) - Grid and album based photo-management-system. ([Source Code](https://github.com/LycheeOrg/Lychee)) `MIT` `PHP/Docker`\n- [Mediagoblin](https://mediagoblin.org) - Media publishing platform that anyone can run (alternative to Flickr, YouTube, SoundCloud). ([Source Code](https://git.savannah.gnu.org/cgit/mediagoblin.git/tree/)) `AGPL-3.0` `Python`\n- [Mejiro](https://github.com/dmpop/pellicola) - Easy-to-use instant photo publishing. `GPL-3.0` `PHP`\n- [Nextcloud Memories](https://memories.gallery/) - Fast, modern and advanced photo management suite. Runs as a Nextcloud app. ([Demo](https://demo.memories.gallery/apps/memories/), [Source Code](https://github.com/pulsejet/memories)) `AGPL-3.0` `PHP`\n- [Photofield](https://github.com/SmilyOrg/photofield) - Experimental fast photo viewer. `MIT` `Docker/Go`\n- [PhotoPrism](https://photoprism.org) - Personal photo management powered by Go and Google TensorFlow.  Browse, organize, and share your personal photo collection, using the latest technologies to automatically tag and find pictures. ([Demo](https://demo.photoprism.app/library/browse), [Source Code](https://github.com/photoprism/photoprism)) `AGPL-3.0` `Go/Docker`\n- [Photoview](https://photoview.github.io/) - Simple and user-friendly photo gallery for personal servers. It is made for photographers and aims to provide an easy and fast way to navigate directories, with thousands of high resolution photos. ([Demo](https://photoview.github.io/), [Source Code](https://github.com/photoview/photoview)) `GPL-3.0` `Go/Docker`\n- [PiGallery 2](https://bpatrik.github.io/pigallery2/) - Directory-first photo gallery website, with a rich UI, optimised for running on low resource servers. ([Source Code](https://github.com/bpatrik/pigallery2)) `MIT` `Docker/Nodejs`\n- [Piwigo](https://piwigo.org/) - Photo gallery software for the web, built by an active community of users and developers. ([Source Code](https://github.com/Piwigo/Piwigo)) `GPL-2.0` `PHP`\n- [sigal](https://github.com/saimn/sigal) - Yet another simple static gallery generator. `MIT` `Python`\n- [SPIS](https://github.com/gbbirkisson/spis) - A simple, lightweight and fast media server with decent mobile support. `GPL-3.0` `Docker/Rust`\n- [This week in past](https://github.com/RouHim/this-week-in-past) - Aggregates images taken this week, from previous years and presents them on a web page with a simple slideshow. `MIT` `Docker/Rust`\n- [Thumbor](http://thumbor.org/) - A smart imaging service and enables on-demand cropping, resizing, applying filters and optimizing images. ([Source Code](https://github.com/thumbor/thumbor)) `MIT` `Python/Docker`\n- [WeddingShare](https://docs.wedding-share.org/) - Event photo sharing platform and gallery with slideshow that allows guests to view and share memories via a QR code. ([Demo](https://demo.wedding-share.org/), [Source Code](https://github.com/Cirx08/WeddingShare)) `GPL-3.0` `C#/Docker`\n- [Zenphoto](https://www.zenphoto.org/) - Open-source gallery and CMS project. ([Source Code](https://github.com/zenphoto/zenphoto)) `GPL-2.0` `PHP`\n\n\n### Polls and Events\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware for organising [polls](https://en.wikipedia.org/wiki/Opinion_poll) and [events](https://en.wikipedia.org/wiki/Event).\n\n_Related: [Booking and Scheduling](#booking-and-scheduling)_\n\n- [Bitpoll](https://github.com/fsinfuhh/Bitpoll) - Conduct polls about dates, times or general questions. ([Demo](https://bitpoll.de/)) `GPL-3.0` `Docker/Python`\n- [Bracket](https://docs.bracketapp.nl/) - Flexible tournament system to build a tournament setup, add teams, schedule matches, keep track of scores and present ranking live to the public. ([Demo](https://www.bracketapp.nl/demo), [Source Code](https://github.com/evroon/bracket)) `AGPL-3.0` `Docker/Nodejs`\n- [Christmas Community](https://github.com/Wingysam/Christmas-Community) - Create a simple place for your entire family to use to find gifts that people want, and to avoid double-gifting. `AGPL-3.0` `Docker/Nodejs`\n- [Claper](https://claper.co/) - The ultimate tool to interact with your audience (alternative to Slido, AhaSlides and Mentimeter). ([Source Code](https://github.com/ClaperCo/Claper)) `GPL-3.0` `Elixir/Docker`\n- [ClearFlask](https://clearflask.com) - Community-feedback tool for managing incoming feedback and prioritizing a public roadmap (alternative to Canny, UserVoice, Upvoty). ([Demo](https://product.clearflask.com), [Source Code](https://github.com/clearflask/clearflask)) `AGPL-3.0` `Docker`\n- [docassemble](https://docassemble.org/) - A free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown. ([Demo](https://demo.docassemble.org/run/legal), [Source Code](https://github.com/jhpyle/docassemble)) `MIT` `Docker/Python`\n- [Fider](https://fider.io) - Open platform to collect and prioritize feedback (alternative to UserVoice). ([Demo](https://demo.fider.io), [Source Code](https://github.com/getfider/fider)) `MIT` `Docker`\n- [Formbricks](https://formbricks.com) - Experience Management Suite built on the largest open source survey stack worldwide. Gracefully gather feedback at every step of the customer journey to know what your customers need. ([Demo](https://app.formbricks.com), [Source Code](https://github.com/formbricks/formbricks)) `AGPL-3.0` `Nodejs/Docker`\n- [Framadate](https://framadate.org/abc/) - Online service for planning an appointment or make a decision quickly and easily: Make a poll, Define dates or subjects to choose, Send the poll link to your friends or colleagues, Discuss and make a decision. ([Demo](https://framadate.org/aqg259dth55iuhwm), [Source Code](https://framagit.org/framasoft/framadate?)) `CECILL-B` `PHP`\n- [Gancio](https://gancio.org/) - Local community event and agenda sharing. ([Demo](https://demo.gancio.org/), [Source Code](https://framagit.org/les/gancio)) `AGPL-3.0` `Nodejs`\n- [gathio](https://docs.gath.io/) - Self-destructing, shareable, no-registration event pages. ([Demo](https://gath.io/), [Source Code](https://github.com/lowercasename/gathio)) `GPL-3.0` `Nodejs/Docker`\n- [HeyForm](https://heyform.net) - Form builder that allows anyone to create engaging conversational forms for surveys, questionnaires, quizzes, and polls. ([Source Code](https://github.com/heyform/heyform)) `AGPL-3.0` `Docker`\n- [hitobito](https://hitobito.com) - Manage complex group hierarchies with members, events and a lot more. ([Demo](https://demo.hitobito.com/en/users/sign_in), [Source Code](https://github.com/hitobito/hitobito)) `AGPL-3.0` `Ruby`\n- [Input](https://getinput.co) - Privacy-focused, no-code, open-source form builder designed for simplicity and brand consistency. ([Source Code](https://github.com/deck9/input)) `AGPL-3.0` `PHP/Nodejs/Docker`\n- [LimeSurvey](https://www.limesurvey.org) - Feature-rich web-based polling software. Supports extensive survey logic. ([Demo](https://demo.limesurvey.org), [Source Code](https://github.com/LimeSurvey/LimeSurvey)) `GPL-2.0` `PHP`\n- [Meetable](https://events.indieweb.org) - Minimal events aggregator. ([Source Code](https://github.com/aaronpk/Meetable)) `MIT` `PHP`\n- [Mobilizon](https://mobilizon.org) - Federated tool that helps you find, create and organise events and groups. ([Source Code](https://framagit.org/framasoft/mobilizon/)) `AGPL-3.0` `Elixir/Docker`\n- [OpnForm](https://opnform.com) - Beautiful open-source form builder. ([Demo](https://opnform.com/forms/create/guest), [Source Code](https://github.com/JhumanJ/opnform)) `AGPL-3.0` `PHP/Nodejs/Docker`\n\n\n### Proxy\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [proxy](https://en.wikipedia.org/wiki/Proxy_server) is a server application that acts as an intermediary between a client requesting a resource and the server providing that resource. This section about forward (i.e. outgoing) proxies. For reverse proxies, see the Web Server section.\n\n_Related: [Web Servers](#web-servers)_\n\n- [g3proxy](https://g3-project.readthedocs.io/projects/g3proxy/en/latest/) - Forward proxy server supporting proxy chaining, protocol inspection, MITM Interception, ICAP adaptation and transparent proxy. ([Source Code](https://github.com/bytedance/g3/tree/master/g3proxy)) `Apache-2.0` `Rust/deb`\n- [imgproxy](https://imgproxy.net/) - Fast and secure standalone server for resizing and converting remote images. ([Source Code](https://github.com/imgproxy/imgproxy)) `MIT` `Go/Docker/K8S`\n- [iodine](https://code.kryo.se/iodine/) - IPv4 over DNS tunnel solution, enabling you to start up a socks5 proxy listener. ([Source Code](https://github.com/yarrick/iodine)) `ISC` `C/deb`\n- [Koblas](https://github.com/ynuwenhof/koblas) - Lightweight SOCKS5 proxy server. `MIT` `Rust/Docker`\n- [Outline Server](https://getoutline.org/) - A proxy server that runs a Shadowsocks instance for each access key and a REST API to manage the access keys. ([Source Code](https://github.com/Jigsaw-Code/outline-server)) `Apache-2.0` `Docker/Nodejs`\n- [Privoxy](https://www.privoxy.org) - Non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. `GPL-2.0` `C/deb`\n- [sish](https://github.com/antoniomika/sish) - HTTP(S)/WS(S)/TCP tunnels to localhost using only SSH (serveo/ngrok alternative). `MIT` `Go/Docker`\n- [socks5-proxy-server](https://github.com/nskondratev/socks5-proxy-server) - SOCKS5 proxy server with built-in authentication and Telegram-bot for user management and user statistics on data spent (handy when you pay per GB of data). It is dockerised and simple to install. `Apache-2.0` `Docker`\n- [Squid](http://www.squid-cache.org/) - Caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. ([Source Code](https://code.launchpad.net/squid)) `GPL-2.0` `C/deb`\n- [Tinyproxy](https://tinyproxy.github.io/) - Light-weight HTTP/HTTPS proxy daemon. ([Source Code](https://github.com/tinyproxy/tinyproxy)) `GPL-2.0` `C/deb`\n- [txtdot](https://tempoworks.github.io/documentation) - A HTTP proxy that parses only text, links and pictures from pages reducing internet bandwidth usage, removing ads and heavy scripts. ([Demo](https://txt.dc09.ru), [Source Code](https://github.com/TempoWorks/txtdot)) `MIT` `Nodejs/Docker`\n\n\n### Recipe Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware and tools for managing [recipes](https://en.wikipedia.org/wiki/Recipe).\n\n- [Bar Assistant](https://barassistant.app/) - Manage your home bar while adding your ingredients, searching for cocktails and creating custom cocktail recipes. ([Demo](https://demo.barassistant.app/), [Source Code](https://github.com/karlomikus/bar-assistant)) `MIT` `PHP/Docker`\n- [Fork Recipes](https://mikebgrep.github.io/forkapi/latest/clients/) - Manage your food recipes with simplicity. ([Source Code](https://github.com/mikebgrep/fork.recipes)) `BSD-3-Clause` `Docker`\n- [KitchenOwl](https://docs.kitchenowl.org/latest/) - Cross-platform shopping list, recipe storage, expense tracker, and meal planner following the material design language. ([Source Code](https://github.com/TomBursch/kitchenowl)) `AGPL-3.0` `Docker/deb`\n- [ManageMeals](https://managemeals.com/) - Manage recipes, import recipes by URL and organize them without any ads or unnecessary text. ([Demo](https://demo.managemeals.com/), [Source Code](https://github.com/managemeals/manage-meals-web)) `GPL-3.0` `Docker`\n- [Mealie](https://nightly.mealie.io/) - Material design inspired recipe manager with category and tag management, shopping-lists, meal-planner, and site customizations. Mealie is focused on simple user interactions to keep the whole family using the app. ([Source Code](https://github.com/mealie-recipes/mealie)) `MIT` `Python`\n- [RecipeSage](https://github.com/julianpoy/recipesage) - A recipe keeper, meal plan organizer, and shopping list manager that can import recipes directly from any URL. ([Demo](https://recipesage.com)) `AGPL-3.0` `Nodejs`\n- [Recipya](https://recipes.musicavis.ca) - Clean, simple and powerful recipe manager your whole family will enjoy. ([Demo](https://recipes.musicavis.ca/guide/login), [Source Code](https://github.com/reaper47/recipya)) `GPL-3.0` `Docker/Go`\n- [Specifically Clementines](https://davideshay.github.io/groceries/) - Grocery shopping app (previously Groceries), providing reliable sync with multiple users/devices (web/Android/iOS), recipes and integration with Tandoor. ([Source Code](https://github.com/davideshay/groceries)) `MIT` `Docker`\n- [Tamari](https://tamariapp.com) - Recipe manager web app with a built-in collection of recipes. Organize by favorites and categories, create shopping lists, and plan meals. ([Demo](https://app.tamariapp.com), [Source Code](https://github.com/alexbates/Tamari)) `GPL-3.0` `Docker/Python`\n- [Vanilla Cookbook](https://vanilla-cookbook.readthedocs.io/en/) - Recipe manager designed with complexity under the hood, keeping the user experience as uncluttered, simply vanilla as possible. ([Source Code](https://github.com/jt196/vanilla-cookbook)) `GPL-3.0` `Docker/Nodejs`\n- [What To Cook?](https://github.com/kassner/whattocook) - Get a recipe to cook today, based on the ingredients you have at home. `AGPL-3.0` `Docker`\n\n\n### Remote Access\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Remote desktop](https://en.wikipedia.org/wiki/Remote_desktop_software) and [SSH](https://en.wikipedia.org/wiki/Secure_Shell) servers and web interfaces for remote management of computer systems.\n\n- [Engity's Bifröst](https://bifroest.engity.org/) - Highly customizable SSH server with several ways to authorize a user and options where and how to execute a user's session. ([Source Code](https://github.com/engity-com/bifroest)) `Apache-2.0` `Go/Docker`\n- [Firezone](https://www.firezone.dev/) - Secure remote access gateway that supports the WireGuard protocol. It offers a Web GUI, 1-line install script, multi-factor auth (MFA), and SSO. ([Source Code](https://github.com/firezone/firezone)) `Apache-2.0` `Elixir/Docker`\n- [Guacamole](https://guacamole.apache.org) - Clientless remote desktop gateway supporting standard protocols like VNC and RDP. ([Source Code](https://github.com/apache/guacamole-server)) `Apache-2.0` `Java/C`\n- [MeshCentral](https://meshcentral.com/) - Run your own web server to remotely manage and control computers on a local network or anywhere on the internet. ([Source Code](https://github.com/Ylianst/MeshCentral)) `Apache-2.0` `Nodejs`\n- [Remotely](https://github.com/immense/Remotely) - Remote desktop control and remote scripting solution, enterprise level remote support solution with admin web interface and remote control via browser. `GPL-3.0` `C#/Docker`\n- [ShellHub](https://www.shellhub.io) - Modern SSH server for remotely accessing linux devices via command line (using any SSH client) or web-based user interface (alternative to sshd). ([Source Code](https://github.com/shellhub-io/shellhub)) `Apache-2.0` `Docker`\n- [Sshwifty](https://github.com/nirui/sshwifty) - Sshwifty is a SSH and Telnet connector made for the Web. ([Demo](https://sshwifty-demo.nirui.org)) `AGPL-3.0` `Go/Docker`\n- [Termix](https://docs.termix.site/) - Clientless web-based server management platform with SSH terminal, tunneling, and file editing capabilities. ([Source Code](https://github.com/LukeGus/Termix)) `Apache-2.0` `Docker`\n- [Warpgate](https://github.com/warp-tech/warpgate) - Smart SSH and HTTPS bastion that works with any SSH client. `Apache-2.0` `Rust/Docker`\n\n\n### Resource Planning\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware and tools to help with [resource and supply planning](https://en.wikipedia.org/wiki/Resource_planning), including [enterprise resource and supply planning (ERP)](https://en.wikipedia.org/wiki/Enterprise_resource_planning).\n\n_Related: [Money, Budgeting & Management](#money-budgeting--management), [Inventory Management](#inventory-management)_\n\n- [Dolibarr](https://www.dolibarr.org/) - Modern CRM software package to manage your company or foundation activity (contacts, suppliers, invoices, orders, stocks, agenda, accounting, ...). ([Demo](https://www.dolibarr.org/onlinedemo.php), [Source Code](https://github.com/Dolibarr/dolibarr)) `GPL-3.0` `PHP/deb`\n- [ERPNext](https://frappe.io/erpnext) - ERP system to help you run your business. ([Source Code](https://github.com/frappe/erpnext)) `GPL-3.0` `Python/Docker`\n- [farmOS](https://farmos.org/) - Web-based farm record keeping application. ([Demo](https://farmos-demo.rootedsolutions.io/), [Source Code](https://github.com/farmOS/farmOS)) `GPL-2.0` `PHP/Docker`\n- [grocy](https://grocy.info/) - ERP beyond your fridge. Groceries & household management solution for your home. ([Demo](https://en.demo.grocy.info/), [Source Code](https://github.com/grocy/grocy)) `MIT` `PHP/Docker`\n- [LedgerSMB](https://ledgersmb.org/) - Integrated accounting and ERP system for small and midsize businesses, with double entry accounting, budgeting, invoicing, quotations, projects, orders and inventory management, shipping and more. ([Source Code](https://github.com/ledgersmb/LedgerSMB)) `GPL-2.0` `Docker/Perl`\n- [Odoo](https://www.odoo.com) - Free open source ERP system. ([Demo](https://demo.odoo.com/), [Source Code](https://github.com/odoo/odoo)) `LGPL-3.0` `Python/deb/Docker`\n- [OFBiz](https://ofbiz.apache.org/) - Enterprise Resource Planning system with a suite of business applications flexible enough to be used across any industry. ([Source Code](https://github.com/apache/ofbiz-framework)) `Apache-2.0` `Java`\n- [Tryton](https://www.tryton.org/) - Free open source business solution. ([Demo](https://www.tryton.org/demo), [Source Code](https://foss.heptapod.net/tryton/tryton)) `GPL-3.0` `Python`\n\n\n### Search Engines\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [search engine](https://en.wikipedia.org/wiki/Search_engine_(computing)) is an [information retrieval system](https://en.wikipedia.org/wiki/Information_retrieval) designed to help find information stored on a computer system. This includes [Web search engines](https://en.wikipedia.org/wiki/Web_search_engine).\n\n- [Aleph](https://aleph.occrp.org/) - Tool for indexing large amounts of both documents (PDF, Word, HTML) and structured (CSV, XLS, SQL) data for easy browsing and search. It is built with investigative reporting as a primary use case. ([Demo](https://aleph.occrp.org/), [Source Code](https://github.com/alephdata/aleph)) `MIT` `Docker/K8S`\n- [Apache Solr](https://lucene.apache.org/solr/) - Enterprise search platform featuring full-text search, hit highlighting, faceted search, real-time indexing, dynamic clustering, and rich document (e.g., Word, PDF) handling. ([Source Code](https://github.com/apache/solr)) `Apache-2.0` `Java/Docker/K8S`\n- [Fess](https://fess.codelibs.org/) - Powerful and easily deployable Enterprise Search Server. ([Demo](https://search.n2sm.co.jp/), [Source Code](https://github.com/codelibs/fess)) `Apache-2.0` `Java/Docker`\n- [Jina](https://github.com/jina-ai/serve) - Cloud-native neural search framework for any kind of data. `Apache-2.0` `Python/Docker`\n- [Manticore Search](https://github.com/manticoresoftware/manticoresearch/) - Full-text search and data analytics, with fast response time for small, medium and big data (alternative to Elasticsearch). `GPL-3.0` `Docker/deb/C++/K8S`\n- [MeiliSearch](https://www.meilisearch.com) - Ultra relevant, instant and typo-tolerant full-text search API. ([Source Code](https://github.com/meilisearch/MeiliSearch)) `MIT` `Rust/Docker/deb`\n- [OpenSearch](https://opensearch.org) - Distributed and RESTful search engine. ([Source Code](https://github.com/opensearch-project/OpenSearch)) `Apache-2.0` `Java/Docker/K8S/deb`\n- [SearXNG](https://docs.searxng.org/) `⚠` - Internet metasearch engine which aggregates results from various search services and databases (Fork of Searx). ([Source Code](https://github.com/searxng/searxng/)) `AGPL-3.0` `Python/Docker`\n- [sist2](https://github.com/sist2app/sist2) - Lightning-fast file system indexer and search tool. `GPL-3.0` `C/Docker`\n- [Sosse](https://sosse.readthedocs.io/en/stable/) - Selenium based search engine and crawler with offline archiving. ([Source Code](https://gitlab.com/biolds1/sosse)) `AGPL-3.0` `Python/Docker`\n- [Typesense](https://typesense.org) - Blazing fast, typo-tolerant open source search engine optimized for developer happiness and ease of use. ([Source Code](https://github.com/typesense/typesense)) `GPL-3.0` `C++/Docker/K8S/deb`\n- [Websurfx](https://github.com/neon-mmd/websurfx) `⚠` - Aggregate results from other search engines (metasearch engine) without ads while keeping privacy and security in mind. It is extremely fast and provides a high level of customization (alternative to SearX). `AGPL-3.0` `Rust/Docker`\n- [Whoogle](https://github.com/benbusby/whoogle-search) `⚠` - A self-hosted, ad-free, privacy-respecting metasearch engine. `MIT` `Python`\n- [Yacy](https://yacy.net/en/index.html) - Peer based, decentralized search engine server. ([Source Code](https://github.com/yacy/yacy_search_server)) `GPL-2.0` `Java/Docker/K8S`\n- [ZincSearch](https://zincsearch.com) - Search engine that requires minimal resources (alternative to Elasticsearch). ([Demo](https://github.com/zinclabs/zinc#playground-server), [Source Code](https://github.com/zincsearch/zincsearch)) `Apache-2.0` `Go/Docker/K8S`\n\n\n### Self-hosting Solutions\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nSoftware for easy installation, management and configuration of self-hosted services and applications.\n\n- [Ansible-NAS](https://github.com/DaveStephens/ansible-nas) - Build a full-featured home server with this playbook and an Ubuntu box. `MIT` `Ansible/Docker`\n- [CasaOS](https://casaos.zimaspace.com/) - Simple, easy-to-use, elegant Home Cloud system. ([Source Code](https://github.com/IceWhaleTech/CasaOS)) `Apache-2.0` `Go/Docker`\n- [DietPi](https://dietpi.com/) - Minimal Debian OS optimized for single-board computers, which allows you to easily install and manage several services for selfhosting at home. ([Source Code](https://github.com/MichaIng/DietPi)) `GPL-2.0` `Shell`\n- [DockSTARTer](https://dockstarter.com/) - DockSTARTer helps you get started with home server apps running in Docker. ([Source Code](https://github.com/GhostWriters/DockSTARTer)) `MIT` `Shell`\n- [Dropserver](https://dropserver.org) - An application platform for your personal web services. ([Source Code](https://github.com/teleclimber/Dropserver/)) `Apache-2.0` `Go/Deno`\n- [FreedomBox](https://freedombox.org/) - Community project to develop, design and promote personal servers running free software for private, personal, communications. ([Source Code](https://salsa.debian.org/freedombox-team/freedombox)) `AGPL-3.0` `Python/deb`\n- [HomelabOS](https://homelabos.com) - Offline privacy-centric data-center. Deploy over 100 services with a few commands. ([Source Code](https://gitlab.com/NickBusey/HomelabOS)) `MIT` `Docker`\n- [HomeServerHQ](https://www.homeserverhq.com/) - All-in-one home server infrastructure and installer. Have a fully configured email server, VPN, and public website(s) set up in less than an hour, even behind CGNAT. ([Source Code](https://github.com/homeserverhq/hshq)) `GPL-3.0` `Shell`\n- [LibreServer](https://libreserver.org/) - Home server configuration based on Debian. ([Source Code](https://github.com/bashrc2/libreserver)) `AGPL-3.0` `Shell`\n- [Mistborn](https://gitlab.com/cyber5k/mistborn) - Virtual private cloud platform and WebUI that manages self hosted services. `MIT` `Shell/Docker`\n- [NextCloudPi](https://github.com/nextcloud/nextcloudpi) - Nextcloud preinstalled and preconfigured, with a text and web management interface and all the tools needed to self host private data. With installation images for Raspberry Pi, Odroid, Rock64, Docker, and a curl installer for Armbian/Debian. `GPL-2.0` `Shell/PHP`\n- [Nirvati](https://nirvati.org) - Easily 1-click spin up popular self-hosted apps from a convenient web interface. ([Source Code](https://gitlab.com/nirvati-ug/nirvati)) `AGPL-3.0` `Rust/K8S`\n- [OpenMediaVault](https://www.openmediavault.org/) - Network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB/CIFS, DAAP media server, RSync, BitTorrent client and many more. ([Source Code](https://github.com/openmediavault/openmediavault)) `GPL-3.0` `PHP`\n- [Sandstorm](https://sandstorm.io/) - Personal server for running self-hosted apps easily and securely. ([Demo](https://demo.sandstorm.io/), [Source Code](https://github.com/sandstorm-io/sandstorm)) `Apache-2.0` `C++/Shell`\n- [Self Host Blocks](https://github.com/ibizaman/selfhostblocks) `⚠` - Modular server management based on NixOS modules and focused on best practices. `AGPL-3.0` `Nix`\n- [StartOS](https://start9.com) - Browser-based, graphical Operating System (OS) that makes running a personal server as easy as running a personal computer. ([Source Code](https://github.com/Start9Labs/start-os)) `MIT` `Rust`\n- [Syncloud](https://syncloud.org/) - Your own online file storage, social network or email server. ([Source Code](https://github.com/syncloud/platform)) `GPL-3.0` `Go/Shell`\n- [Tipi](https://runtipi.io/) - Homeserver manager. One command setup, one click installs for your favorites self-hosted apps. ([Source Code](https://github.com/runtipi/runtipi)) `GPL-3.0` `Shell`\n- [UBOS](https://ubos.net/) - Linux distro that runs on indie boxes (personal servers and IoT devices). Single-command installation and management of apps - Jenkins, Mediawiki, Owncloud, WordPress, etc., and other features. `GPL-3.0` `Perl`\n- [Websoft9](https://www.websoft9.com) `⚠` - GitOps-driven, multi-application hosting for cloud servers and home servers, one-click deployment of 200+ open source apps. ([Demo](https://www.websoft9.com/demo), [Source Code](https://github.com/websoft9/websoft9), [Clients](https://www.websoft9.com/apps)) `LGPL-3.0` `Shell/Python`\n- [WikiSuite](https://wikisuite.org) - The most comprehensive and integrated Free / Libre / Open Source enterprise software suite. ([Source Code](https://wikisuite.org/Source-Code)) `GPL-3.0/LGPL-2.1/Apache-2.0/MPL-2.0/MPL-1.1/MIT/AGPL-3.0` `Shell/Perl/deb`\n- [xsrv](https://xsrv.readthedocs.io/) - Install and manage self-hosted services/applications, on your own server(s). ([Source Code](https://github.com/nodiscc/xsrv)) `GPL-3.0` `Ansible/Shell`\n- [YunoHost](https://yunohost.org/) - Server operating system aiming to make self-hosting accessible to everyone. ([Demo](https://yunohost.org/#/try), [Source Code](https://github.com/YunoHost)) `AGPL-3.0` `Python/Shell`\n\n\n### Software Development\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Software development](https://en.wikipedia.org/wiki/Software_development) is the process of conceiving, specifying, designing, programming, documenting, testing, and bug fixing involved in creating and maintaining applications, frameworks, or other software components.\n\n**Please visit [Software Development - API Management](#software-development---api-management), [Software Development - Continuous Integration & Deployment](#software-development---continuous-integration--deployment), [Software Development - FaaS & Serverless](#software-development---faas--serverless), [Software Development - IDE & Tools](#software-development---ide--tools), [Software Development - Localization](#software-development---localization), [Software Development - Low Code](#software-development---low-code), [Software Development - Project Management](#software-development---project-management), [Software Development - Testing](#software-development---testing), [Software Development - Feature Toggle](#software-development---feature-toggle)**\n\n\n\n### Software Development - API Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[API management](https://en.wikipedia.org/wiki/API_management) is the process of creating and publishing [application programming interfaces (APIs)](https://en.wikipedia.org/wiki/API), enforcing their usage policies, controlling access, nurturing the subscriber community, collecting and analyzing usage statistics, and reporting on performance. \n\n- [DreamFactory](https://www.dreamfactory.com/) - Turns any SQL/NoSQL/Structured data into Restful API. ([Source Code](https://github.com/dreamfactorysoftware/dreamfactory)) `Apache-2.0` `PHP/Docker/K8S`\n- [form.io](https://form.io) - A REST API building platform that utilizes a drag & drop form builder, and is application framework agnostic. Contains open source and enterprise version. ([Demo](https://portal.form.io), [Source Code](https://github.com/formio)) `MIT` `Nodejs/Docker`\n- [Fusio](https://www.fusio-project.org/) - Open-source API management platform which helps to build and manage REST APIs. ([Demo](https://fusio-project.org/demo), [Source Code](https://github.com/apioo/fusio)) `AGPL-3.0` `PHP/Docker`\n- [Graphweaver](https://graphweaver.com/) - Turn multiple data sources into a single GraphQL API. ([Source Code](https://github.com/exogee-technology/graphweaver)) `MIT` `Nodejs`\n- [Hasura](https://hasura.io) - Fast, instant realtime GraphQL APIs on Postgres with fine grained access control, also trigger webhooks on database events. ([Source Code](https://github.com/hasura/graphql-engine)) `Apache-2.0` `Haskell/Docker/K8S`\n- [Hoppscotch Community Edition](https://hoppscotch.io) - Fast and beautiful API request builder. ([Source Code](https://github.com/hoppscotch/hoppscotch)) `MIT` `Nodejs/Docker`\n- [Kong](https://konghq.com/kong/) - Microservice API Gateway and Platform. ([Source Code](https://github.com/Kong/kong)) `Apache-2.0` `Lua/Docker/K8S/deb`\n- [Lura](https://luraproject.org/) - High-performance API Gateway. ([Source Code](https://github.com/luraproject/lura)) `Apache-2.0` `Go`\n- [Opik](https://www.comet.com/site/products/opik/) `⚠` - Evaluate, test, and ship LLM applications with a suite of observability tools to calibrate language model outputs across your dev and production lifecycle. ([Source Code](https://github.com/comet-ml/opik)) `Apache-2.0` `Docker/Python`\n- [Panora](https://panora.dev) `⚠` - Add an integration catalog to your SaaS product in minutes (alternative to Merge.dev). ([Source Code](https://github.com/panoratech/Panora)) `AGPL-3.0` `Nodejs/Docker`\n- [Para](https://paraio.org) - Flexible and modular backend framework/server for object persistence, API development and authentication. ([Source Code](https://github.com/erudika/para)) `Apache-2.0` `Java/Docker`\n- [Svix](https://svix.com) - Open-source webhooks as a service that makes it super easy for API providers to send webhooks. ([Source Code](https://github.com/svix/svix-webhooks)) `MIT` `Docker/Rust`\n- [Tyk](https://tyk.io) - Fast and scalable open source API Gateway. Out of the box, Tyk offers an API Management Platform with an API Gateway, API Analytics, Developer Portal and API Management Dashboard. ([Source Code](https://github.com/TykTechnologies/tyk)) `MPL-2.0` `Go/Docker/K8S`\n- [Yaade](https://docs.yaade.io/) - Yaade is an open-source, self-hosted, collaborative API development environment. ([Source Code](https://github.com/EsperoTech/yaade)) `MIT` `Docker`\n\n\n### Software Development - Continuous Integration & Deployment\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Continuous integration](https://en.wikipedia.org/wiki/Continuous_integration) and [Continuous deployment](https://en.wikipedia.org/wiki/Continuous_deployment) software and tools.\n\n**Please visit [awesome-sysadmin/Continuous Integration & Continuous Deployment](https://github.com/awesome-foss/awesome-sysadmin#continuous-integration--continuous-deployment)**\n\n_Related: [Automation](#automation)_\n\n\n\n### Software Development - FaaS & Serverless\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Serverless computing](https://en.wikipedia.org/wiki/Serverless_computing), [Function as a Service (FaaS)](https://en.wikipedia.org/wiki/Function_as_a_service) and [Platform as a Service (Paas)](https://en.wikipedia.org/wiki/Platform_as_a_service) management software.\n\n**Please visit [awesome-sysadmin/PaaS](https://github.com/awesome-foss/awesome-sysadmin#paas)**\n\n\n\n### Software Development - Feature Toggle\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [feature toggle](https://en.wikipedia.org/wiki/Feature_toggle) in software development provides an alternative to maintaining multiple feature branches in source code.\n\n_Related: [Software Development - IDE & Tools](#software-development---ide--tools)_\n\n- [Featbit](https://www.featbit.co/) - Enterprise-grade feature flag platform that you can self-host. ([Source Code](https://github.com/featbit/featbit)) `MIT` `Docker/K8S`\n- [Flagsmith](https://flagsmith.com) - Dashboard, API and SDKs for adding Feature Flags to your applications (alternative to LaunchDarkly). ([Source Code](https://github.com/flagsmith/flagsmith)) `BSD-3-Clause` `Docker/K8S`\n- [Flipt](https://flipt.io) - Feature flag solution with support for multiple data backends (alternative to LaunchDarkly). ([Source Code](https://github.com/flipt-io/flipt)) `GPL-3.0` `Docker/K8S/Go`\n- [GO Feature Flag](https://gofeatureflag.org) - Simple, complete, and lightweight feature flag solution (alternative to LaunchDarkly). ([Source Code](https://github.com/thomaspoignant/go-feature-flag)) `MIT` `Go`\n\n\n### Software Development - IDE & Tools\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nAn [integrated development environment (IDE)](https://en.wikipedia.org/wiki/Integrated_development_environment) is a software application that provides comprehensive facilities to computer programmers for software development.\n\n_Related: [Software Development - Low Code](#software-development---low-code)_\n\n- [Atheos](https://www.atheos.io) - Web-based IDE framework with a small footprint and minimal requirements, continued from Codiad. ([Source Code](https://github.com/Atheos/Atheos)) `MIT` `PHP/Docker`\n- [code-server](https://github.com/coder/code-server) - VS Code in the browser, hosted on a remote server. `MIT` `Nodejs/Docker`\n- [Coder](https://coder.com/) - Remote development machines on your own infrastructure. ([Source Code](https://github.com/coder/coder)) `AGPL-3.0` `Go/Docker/K8S/deb`\n- [Eclipse Che](https://www.eclipse.org/che/) - Open source workspace server and cloud IDE. ([Source Code](https://github.com/eclipse-che/che)) `EPL-1.0` `Docker/Java`\n- [Judge0 CE](https://judge0.com) - API to compile and run source code. ([Source Code](https://github.com/judge0/judge0)) `GPL-3.0` `Docker`\n- [JupyterLab](https://jupyterlab.readthedocs.io/en/stable/) - Web-based environment for interactive and reproducible computing. ([Demo](https://mybinder.org/v2/gh/jupyterlab/jupyterlab-demo/try.jupyter.org?urlpath=lab), [Source Code](https://github.com/jupyterlab/jupyterlab/)) `BSD-3-Clause` `Python/Docker`\n- [Langfuse](https://langfuse.com) - LLM engineering platform for model tracing, prompt management, and application evaluation. Langfuse helps teams collaboratively debug, analyze, and iterate on their LLM applications such as chatbots or AI agents. ([Demo](https://langfuse.com/docs/demo), [Source Code](https://github.com/langfuse/langfuse), [Clients](https://langfuse.com/docs/integrations/overview)) `MIT` `Docker`\n- [LiveCodes](https://livecodes.io/docs/features/self-hosting) `⚠` - Feature-rich client-side code playground for React, Vue, Svelte, Solid, Typescript, Python, Go, Ruby, PHP and 90+ other languages. ([Demo](https://livecodes.io), [Source Code](https://github.com/live-codes/livecodes)) `MIT` `Nodejs`\n- [Lowdefy](https://www.lowdefy.com/) - Build internal tools, BI dashboards, admin panels, CRUD apps and workflows in minutes using YAML / JSON on an self-hosted, open-source platform. Connect to your data sources, host via Serverless, Netlify or Docker. ([Source Code](https://github.com/lowdefy/lowdefy)) `Apache-2.0` `Nodejs/Docker`\n- [RStudio Server](https://www.rstudio.com/products/rstudio/#Server) - Web browser based IDE for R. ([Source Code](https://github.com/rstudio/rstudio)) `AGPL-3.0` `Java/C++`\n- [Wakapi](https://wakapi.dev/) - Tracking tool for coding statistics, compatible with WakaTime. ([Source Code](https://github.com/muety/wakapi)) `GPL-3.0` `Go/Docker`\n\n\n### Software Development - Localization\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Localization](https://en.wikipedia.org/wiki/Internationalization_and_localization) is the process of adapting code and software to other languages.\n\n- [Accent](https://www.accent.reviews/) - Developer-oriented translation tool. ([Source Code](https://github.com/mirego/accent)) `BSD-3-Clause` `Elixir/Docker`\n- [Tolgee](https://tolgee.io) - Developer & translator friendly web-based localization platform enabling users to translate directly in the app they develop. ([Source Code](https://github.com/tolgee/tolgee-platform)) `Apache-2.0` `Docker/Java`\n- [Traduora](https://traduora.co) - Translation management platform for teams. ([Source Code](https://github.com/ever-co/ever-traduora)) `AGPL-3.0` `Docker/K8S/Nodejs`\n- [Weblate](https://weblate.org) - Web-based translation tool with tight version control integration. ([Source Code](https://github.com/WeblateOrg/weblate)) `GPL-3.0` `Python/Docker/K8S`\n\n\n### Software Development - Low Code\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [low-code](https://en.wikipedia.org/wiki/Low-code_development_platform) development platform (LCDP) provides a development environment used to create application software through a graphical user interface.\n\n_Related: [Software Development - IDE & Tools](#software-development---ide--tools)_\n\n- [Appsmith](https://www.appsmith.com/) - Build admin panels, CRUD apps and workflows. Build everything you need, 10x faster. ([Source Code](https://github.com/appsmithorg/appsmith)) `Apache-2.0` `Java/Docker/K8S`\n- [Appwrite](https://appwrite.io) - End to end backend server for web, native, and mobile developers 🚀. ([Source Code](https://github.com/appwrite/appwrite)) `BSD-3-Clause` `Docker`\n- [Dashpress](https://github.com/dashpresshq/dashpress) - Generate fully functional admin apps in seconds from your database information, with a single command. `AGPL-3.0` `Nodejs/Docker`\n- [Halo](https://www.halo.run) - A powerful and easy-to-use website building tool (documentation in Chinese). ([Demo](https://demo.halo.run), [Source Code](https://github.com/halo-dev/halo), [Clients](https://github.com/halo-sigs/awesome-halo)) `GPL-3.0` `Java/Docker`\n- [Manifest](https://manifest.build) - Complete backend that fits into 1 YAML file. ([Demo](https://manifest.new), [Source Code](https://github.com/mnfst/manifest)) `MIT` `Nodejs`\n- [PocketBase](https://pocketbase.io/) - Backend for your next SaaS and Mobile app in one file. ([Source Code](https://github.com/pocketbase/pocketbase)) `MIT` `Go/Docker`\n- [SQLPage](https://sql-page.com) - SQL-only dynamic website builder. ([Source Code](https://github.com/sqlpage/SQLPage)) `MIT` `Rust/Docker`\n- [ToolJet](https://tooljet.io/) - Low-code framework to build & deploy internal tools with minimal engineering effort (alternative to Retool and Mendix). ([Source Code](https://github.com/ToolJet/ToolJet)) `GPL-3.0` `Nodejs/Docker/K8S`\n- [TrailBase](https://trailbase.io/) - Open, sub-millisecond, single-executable FireBase alternative with type-safe REST & realtime APIs, built-in JS/TS runtime, auth & admin UI. ([Demo](https://demo.trailbase.io), [Source Code](https://github.com/trailbaseio/trailbase)) `OSL-3.0` `Rust/Docker`\n\n\n### Software Development - Project Management\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nTools and software for [software project management](https://en.wikipedia.org/wiki/Software_project_management).\n\n_Related: [Ticketing](#ticketing), [Task Management & To-do Lists](#task-management--to-do-lists)_\n\n- [Cgit](https://git.zx2c4.com/cgit/about/) - Fast lightweight web interface for git repositories. ([Source Code](https://git.zx2c4.com/cgit/tree/)) `GPL-2.0` `C`\n- [Forgejo](https://forgejo.org) - A lightweight software forge focused on scaling, federation, and privacy (fork of Gitea). ([Demo](https://next.forgejo.org), [Source Code](https://codeberg.org/forgejo/forgejo/), [Clients](https://codeberg.org/forgejo-contrib/delightful-forgejo)) `MIT` `Docker/Go`\n- [Fossil](https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki) - Distributed version control system featuring wiki and bug tracker. `BSD-2-Clause-FreeBSD` `C`\n- [Gerrit](https://www.gerritcodereview.com/) - Code review and project management tool for Git-based projects. ([Source Code](https://github.com/GerritCodeReview/gerrit)) `Apache-2.0` `Java/Docker`\n- [gitbucket](https://gitbucket.github.io/) - Git platform powered with easy installation, high extensibility & GitHub API compatibility (alternative to GitHub). ([Source Code](https://github.com/gitbucket/gitbucket)) `Apache-2.0` `Scala/Java`\n- [Gitea](https://gitea.com) - Git with a cup of tea! Painless self-hosted all-in-one software development service, including Git hosting, code review, team collaboration, package registry and CI/CD. ([Demo](https://demo.gitea.com), [Source Code](https://github.com/go-gitea/gitea)) `MIT` `Go/Docker/K8S`\n- [GitLab](https://about.gitlab.com) - Self Hosted Git repository management, code reviews, issue tracking, activity feeds and wikis. ([Demo](https://gitlab.com/), [Source Code](https://gitlab.com/gitlab-org/gitlab-foss)) `MIT` `Ruby/deb/Docker/K8S`\n- [Gogs](https://gogs.io/) - Painless self-hosted Git Service written in Go. ([Source Code](https://github.com/gogs/gogs)) `MIT` `Go`\n- [Huly](https://huly.io) - All-in-one project management platform (alternative to Linear, Jira, Slack, Notion, Motion). ([Demo](https://app.huly.io), [Source Code](https://github.com/hcengineering/platform)) `EPL-2.0` `Docker/K8S/Nodejs`\n- [Kallithea](https://kallithea-scm.org/) - Source code management system that supports two leading version control systems, Mercurial and Git, with a web interface. ([Source Code](https://kallithea-scm.org/repos/kallithea)) `GPL-3.0` `Python`\n- [Kaneo](https://kaneo.app/) - Project management platform focused on simplicity and efficiency. ([Demo](https://demo.kaneo.app/), [Source Code](https://github.com/usekaneo/kaneo)) `MIT` `K8S/Docker`\n- [Leantime](https://leantime.io) - Lean project management system for small teams and startups helping to manage projects from ideation through delivery. ([Source Code](https://github.com/leantime/leantime)) `AGPL-3.0` `PHP/Docker`\n- [Mergeable](https://www.usemergeable.dev) `⚠` - A better inbox for GitHub pull requests. ([Demo](https://app.usemergeable.dev), [Source Code](https://github.com/pvcnt/mergeable)) `MIT` `Nodejs/Docker/K8S`\n- [Mindwendel](https://www.mindwendel.com/) - Brainstorm and upvote ideas and thoughts within your team. ([Demo](https://www.mindwendel.com), [Source Code](https://github.com/b310-digital/mindwendel)) `AGPL-3.0` `Docker/Elixir`\n- [minimal-git-server](https://github.com/mcarbonne/minimal-git-server) - Lightweight git server with a basic CLI to manage repositories, supporting multiple accounts and running in a container. `MIT` `Docker`\n- [Octobox](https://octobox.io/) `⚠` - Take back control of your GitHub Notifications. ([Source Code](https://github.com/octobox/octobox)) `AGPL-3.0` `Ruby/Docker`\n- [OneDev](https://onedev.io/) - All-In-One DevOps Platform. With Git Management, Issue Tracking, and CI/CD. Simple yet Powerful. ([Source Code](https://code.onedev.io/projects/160)) `MIT` `Java/Docker/K8S`\n- [OpenProject](https://www.openproject.org) - Manage your projects, tasks and goals. Collaborate via work packages and link them to your pull requests on Github. ([Source Code](https://github.com/opf/openproject)) `GPL-3.0` `Ruby/deb/Docker`\n- [Pagure](https://pagure.io/pagure) - Lightweight, powerful, and flexible git-centric forge with features laying the foundation for federated and decentralized development. ([Demo](https://pagure.io/)) `GPL-2.0` `Docker/Python/deb`\n- [Phorge](https://we.phorge.it/) - Community-driven platform for collaborating, managing, organizing and reviewing software development projects. ([Source Code](https://we.phorge.it/source/phorge/)) `Apache-2.0` `PHP`\n- [Plane](https://plane.so) - Track issues, epics, and product roadmaps in the simplest way possible (alternative to JIRA, Linear and Height). ([Demo](https://app.plane.so), [Source Code](https://github.com/makeplane/plane)) `AGPL-3.0` `Docker`\n- [ProjeQtOr](https://www.projeqtor.org/) - Complete, mature, multi-user project management system with extensive functionality for all phases of a project. ([Demo](https://demo.projeqtor.org/), [Source Code](https://sourceforge.net/p/projectorria/code/HEAD/tree/branches/)) `AGPL-3.0` `PHP`\n- [Redmine](https://www.redmine.org/) - Flexible project management web application. ([Source Code](https://svn.redmine.org/redmine/)) `GPL-2.0` `Ruby`\n- [Review Board](https://www.reviewboard.org/) - Extensible and friendly code review tool for projects and companies of all sizes. ([Demo](https://demo.reviewboard.org/), [Source Code](https://github.com/reviewboard/reviewboard)) `MIT` `Python/Docker`\n- [rgit](https://github.com/w4/rgit) - Ultra-fast & lightweight cgit clone. `WTFPL` `Rust/Docker`\n- [RhodeCode](https://rhodecode.com/) - Unify and simplify repository management for Git, Subversion, and Mercurial. ([Source Code](https://code.rhodecode.com/)) `AGPL-3.0` `Python`\n- [Rukovoditel](https://www.rukovoditel.net/) - Configurable open source project management, web-based application. ([Source Code](https://www.rukovoditel.net/download.php)) `GPL-2.0` `PHP`\n- [SCM Manager](https://www.scm-manager.org/) - The easiest way to share and manage your Git, Mercurial and Subversion repositories over http. ([Source Code](https://github.com/scm-manager/scm-manager)) `BSD-3-Clause` `Java/deb/Docker/K8S`\n- [Smederee](https://smeder.ee) - A frugal platform which is dedicated to help people build great software together leveraging the power of the Darcs version control system. ([Source Code](https://smeder.ee/~jan0sch/smederee)) `AGPL-3.0` `Scala`\n- [Sourcehut](https://sourcehut.org/) - A full web git interface with no javascript. ([Demo](https://sr.ht/), [Source Code](https://git.sr.ht/~sircmpwn/git.sr.ht/tree)) `GPL-2.0` `Go`\n- [Taiga](https://www.taiga.io/) - Agile Project Management Tool based on the Kanban and Scrum methods. ([Source Code](https://github.com/kaleidos-ventures)) `MPL-2.0` `Docker/Python/Nodejs`\n- [Titra](https://titra.io/) - Time-tracking solution for freelancers and small teams. ([Source Code](https://github.com/kromitgmbh/titra)) `GPL-3.0` `Javascript/Docker`\n- [Trac](https://trac.edgewall.org/) - Trac is an enhanced wiki and issue tracking system for software development projects. `BSD-3-Clause` `Python/deb`\n- [Traq](https://traq.io/) - Project management and issue tracking system written in PHP. ([Source Code](https://github.com/nirix/traq)) `GPL-3.0` `PHP/Nodejs`\n- [Tuleap](https://www.tuleap.org/) - Tuleap is a libre suite to plan, track, code and collaborate on software projects. ([Source Code](https://tuleap.net/plugins/git/tuleap/tuleap/stable?p=tuleap%2Fstable.git&a=tree)) `GPL-2.0` `PHP`\n- [UVDesk](https://www.uvdesk.com/) - UVDesk community is a service oriented, event driven extensible opensource helpdesk system that can be used by your organization to provide efficient support to your clients effortlessly whichever way you imagine. ([Demo](https://demo.uvdesk.com/), [Source Code](https://github.com/uvdesk/community-skeleton)) `MIT` `PHP`\n- [ZenTao](https://www.zentao.pm/) - An agile(scrum) project management system/tool. ([Source Code](https://github.com/easysoft/zentaopms)) `AGPL-3.0` `PHP`\n\n\n### Software Development - Testing\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nTools and software for [software testing](https://en.wikipedia.org/wiki/Software_testing).\n\n- [Bencher](https://bencher.dev/) - Suite of continuous benchmarking tools designed to catch performance regressions in CI. ([Source Code](https://github.com/bencherdev/bencher)) `MIT/Apache-2.0` `Rust`\n- [WebHook Tester](https://github.com/tarampampam/webhook-tester) - Powerful tool for testing WebHooks and more. `MIT` `Docker/Go/deb/K8S`\n\n\n### Static Site Generators\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Static site generators](https://en.wikipedia.org/wiki/Web_template_system#Static_site_generators) generate full static HTML websites based on raw data, plain text files and a set of templates. \n\n**Please visit [staticsitegenerators.bevry.me](https://staticsitegenerators.bevry.me), [staticgen.com](https://www.staticgen.com)**\n\n_Related: [Blogging Platforms](#blogging-platforms), [Photo Galleries](#photo-galleries), [Content Management Systems (CMS)](#content-management-systems-cms)_\n\n\n\n### Status / Uptime pages\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Uptime](https://en.wikipedia.org/wiki/Uptime) is a measure of system reliability, expressed as the percentage of time a machine, typically a computer, has been working and available. \n\n_Related: [Monitoring](#monitoring)_\n\n- [cState](https://cstate.netlify.app/) - Static status page for hyperfast Hugo. Clean design, minimal JS, super light HTML/CSS, high customization, optional admin panel, read-only API, IE8+. Best used with Netlify, Docker. ([Demo](https://cstate.mnts.lt/), [Source Code](https://github.com/cstate/cstate)) `MIT` `Go`\n- [Gatus](https://gatus.io/) - Automated service health dashboard. ([Demo](https://status.twin.sh), [Source Code](https://github.com/TwiN/gatus)) `Apache-2.0` `Docker/K8S`\n- [kener](https://kener.ing/) - Status page with incident management, easy to use and customize. ([Demo](https://kener.ing/), [Source Code](https://github.com/rajnandan1/kener)) `MIT` `Nodejs/Docker`\n- [Kuvasz Uptime](https://kuvasz-uptime.dev) - Performant, stable uptime & SSL monitoring service with brandable status pages, IAC support, Prometheus integration and a complete REST API. ([Demo](https://kuvasz-uptime.dev/demo/), [Source Code](https://github.com/kuvasz-uptime/kuvasz)) `Apache-2.0` `Docker`\n- [StatPing.ng](https://statping-ng.github.io/) - An easy to use Status Page for your websites and applications. Statping will automatically fetch the application and render a beautiful status page with tons of features for you to build an even better status page. ([Source Code](https://github.com/statping-ng/statping-ng)) `GPL-3.0` `Docker/Go`\n- [Uptime Kuma](https://uptime.kuma.pet/) - Self-hosted website monitoring tool like \"Uptime Robot\". ([Demo](https://demo.kuma.pet), [Source Code](https://github.com/louislam/uptime-kuma)) `MIT` `Docker/Nodejs`\n\n\n### Task Management & To-do Lists\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Task management](https://en.wikipedia.org/wiki/Task_management#Task_management_software) software.\n\n_Related: [Software Development - Project Management](#software-development---project-management), [Ticketing](#ticketing)_\n\n- [4ga Boards](https://4gaboards.com) - Straightforward realtime kanban boards management for intuitive task tracking. Featuring an elegant dark mode, collapsible todo lists, and multitasking tools to supercharge your team's productivity. ([Demo](https://demo.4gaboards.com), [Source Code](https://github.com/RARgames/4gaBoards)) `MIT` `Nodejs/Docker/K8S`\n- [AppFlowy](https://appflowy.io/) - Build detailed lists of to-do’s for different projects while tracking the status of each one. Open Source Notion Alternative. ([Source Code](https://github.com/AppFlowy-IO/appflowy)) `AGPL-3.0` `Rust/Dart/Docker`\n- [Donetick](https://donetick.com) - Task and chore management tool for personal and family use, with advanced scheduling, flexible assignment, and group sharing capabilities, detailed history, automation via API, simple and modern design. ([Demo](https://app.donetick.com/), [Source Code](https://github.com/donetick/donetick)) `AGPL-3.0` `Go/Docker`\n- [Focalboard](https://www.focalboard.com/) - Define, organize, track and manage work across individuals and teams (alternative to Trello, Notion and Asana). ([Source Code](https://github.com/mattermost-community/focalboard), [Clients](https://www.focalboard.com/download/personal-edition/desktop/)) `MIT/AGPL-3.0/Apache-2.0` `Nodejs/Go/Docker`\n- [Kanboard](https://kanboard.org/) - Simple visual task board. ([Source Code](https://github.com/kanboard/kanboard)) `MIT` `PHP`\n- [Listaway](https://github.com/jeffrpowell/listaway/) - List management app for creating and publicly sharing lists of items. Supports auth, admin tools, item notes and priorities, and opt-in public read-only links with randomized URLs (alternative to Amazon Lists). ([Source Code](https://github.com/jeffrpowell/listaway)) `MIT` `Docker`\n- [myTinyTodo](https://www.mytinytodo.net/) - Simple way to manage your todo list in AJAX style. Uses PHP, jQuery, SQLite/MySQL. GTD compliant. ([Demo](https://www.mytinytodo.net/demo/), [Source Code](https://github.com/maxpozdeev/mytinytodo/)) `GPL-2.0` `PHP`\n- [Nullboard](https://github.com/apankrat/nullboard) - Single-page minimalist kanban board; compact, highly readable and quick to use. ([Demo](https://nullboard.io/preview)) `BSD-2-Clause` `Javascript`\n- [Our Shopping List](https://github.com/nanawel/our-shopping-list) - Simple shared list application including shopping lists and any other small todo-list that needs to be used collaboratively. ([Demo](https://osl.lanterne-rouge.info/)) `AGPL-3.0` `Docker`\n- [Planka](https://planka.app/) - Realtime kanban board for workgroups (alternative to Trello). ([Demo](https://plankanban.github.io/planka/#/), [Source Code](https://github.com/plankanban/planka)) `AGPL-3.0` `Nodejs/Docker/K8S`\n- [Task Keeper](https://github.com/nymanjens/piga) - List editor for power users, backed by a self-hosted server. `Apache-2.0` `Scala`\n- [Tasks.md](https://github.com/BaldissaraMatheus/Tasks.md) - A self-hosted, file based task management board that supports Markdown syntax. `MIT` `Docker`\n- [Taskwarrior](https://taskwarrior.org/) - Taskwarrior is Free and Open Source Software that manages your TODO list from your command line. It is flexible, fast, efficient, and unobtrusive. It does its job then gets out of your way. ([Source Code](https://taskwarrior.org/download/#git)) `MIT` `C++`\n- [Tracks](https://www.getontracks.org/) - Web-based application to help you implement David Allen’s [Getting Things Done™](https://en.wikipedia.org/wiki/Getting_Things_Done) methodology. ([Source Code](https://github.com/TracksApp/tracks)) `GPL-2.0` `Ruby`\n- [Vikunja](https://vikunja.io/) - The to-do app to organize your life. ([Demo](https://try.vikunja.io/login), [Source Code](https://kolaente.dev/vikunja/)) `GPL-3.0` `Go`\n- [Wekan](https://wekan.github.io/) - Open-source Trello-like kanban. ([Source Code](https://github.com/wekan/wekan)) `MIT` `Nodejs`\n\n\n### Ticketing\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Helpdesk](https://en.wikipedia.org/wiki/Help_desk_software), [bug](https://en.wikipedia.org/wiki/Bug_tracking_system) and [issue](https://en.wikipedia.org/wiki/Issue_tracking_system) tracking software to help the tracking of user requests, bugs and missing features.\n\n_Related: [Task Management & To-do Lists](#task-management--to-do-lists), [Software Development - Project Management](#software-development---project-management)_\n\n- [Bugzilla](https://www.bugzilla.org/) - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project. ([Source Code](https://github.com/bugzilla/bugzilla)) `MPL-2.0` `Perl`\n- [Frappe Helpdesk](https://frappe.io/helpdesk) - Helpdesk software which helps you streamline your company's support, offers an easy setup, clean user interface, and automation tools to resolve customer queries efficiently. ([Source Code](https://github.com/frappe/helpdesk)) `AGPL-3.0` `Docker`\n- [FreeScout](https://freescout.net/) - Email-based customer support application, help desk and shared mailbox (alternative to Zendesk and Help Scout). ([Demo](https://demo.freescout.net/login), [Source Code](https://github.com/freescout-help-desk/freescout)) `AGPL-3.0` `PHP/Docker`\n- [GlitchTip](https://glitchtip.com) - Error tracking app to collect errors reported by your app. ([Source Code](https://gitlab.com/glitchtip/glitchtip)) `MIT` `Python/Docker/K8S`\n- [ITFlow](https://itflow.org) - Client IT documentation, ticketing, invoicing and accounting for MSPs (Managed Service Providers). ([Demo](https://demo.itflow.org), [Source Code](https://github.com/itflow-org/itflow)) `GPL-3.0` `PHP`\n- [MantisBT](https://www.mantisbt.org/) - Bug tracker, fits best for software development. ([Demo](https://www.mantisbt.org/bugs/my_view_page.php), [Source Code](https://github.com/mantisbt/mantisbt)) `GPL-2.0` `PHP`\n- [OTOBO](https://otobo.io/en/) - Flexible web-based ticketing system used for customer service, help desk, IT service management. ([Demo](https://otobo.io/en/service-management-plattform/otobo-demo/), [Source Code](https://github.com/RotherOSS/otobo)) `GPL-3.0` `Perl/Docker`\n- [Request Tracker](https://www.bestpractical.com/rt/) - Enterprise-grade issue tracking system. ([Source Code](https://github.com/bestpractical/rt)) `GPL-2.0` `Perl`\n- [Roundup Issue Tracker](https://www.roundup-tracker.org/) - Simple-to-use and -install issue tracking system with command-line, web, REST, XML-RPC, and e-mail interfaces. Designed with flexibility in mind - not just another bug tracker. ([Source Code](https://www.roundup-tracker.org/code.html)) `MIT/ZPL-2.0` `Python/Docker`\n- [Zammad](https://zammad.org/) - Easy to use but powerful open-source support and ticketing system. ([Source Code](https://github.com/zammad/zammad)) `AGPL-3.0` `Ruby/deb`\n\n\n### Time Tracking\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[Time-tracking software](https://en.wikipedia.org/wiki/Time-tracking_software) is a category of computer software that allows its users to record time spent on tasks or projects.\n\n- [ActivityWatch](https://activitywatch.net) - Automatically track how you spend time on your devices. ([Source Code](https://github.com/ActivityWatch/activitywatch)) `MPL-2.0` `Python`\n- [Beaver Habit Tracker](https://github.com/daya0576/beaverhabits) - Habit tracking app to save your precious moments in your fleeting life. ([Demo](https://beaverhabits.com/demo)) `BSD-3-Clause` `Docker`\n- [Ever Gauzy](https://gauzy.co) - Open business management platform for collaborative, on-demand and sharing economies (ERP/CRM/HRM/ATS/PM). ([Demo](https://demo.gauzy.co), [Source Code](https://github.com/ever-co/ever-gauzy)) `AGPL-3.0` `Docker/Nodejs`\n- [Kimai](https://www.kimai.org/) - Track work time and print out a summary of your activities on demand. ([Demo](https://www.kimai.org/demo/), [Source Code](https://github.com/kimai/kimai)) `AGPL-3.0` `PHP`\n- [solidtime](https://www.solidtime.io) - Modern time tracking application for freelancers and agencies. ([Source Code](https://github.com/solidtime-io/solidtime)) `AGPL-3.0` `Docker`\n- [TimeTagger](https://timetagger.app) - An open source time-tracker based on an interactive timeline and powerful reporting. ([Demo](https://timetagger.app/app/demo), [Source Code](https://github.com/almarklein/timetagger)) `GPL-3.0` `Python`\n- [Traggo](https://traggo.net/) - Traggo is a tag-based time tracking tool. In Traggo there are no tasks, only tagged time spans. ([Source Code](https://github.com/traggo/server)) `GPL-3.0` `Docker/Go`\n- [Ziit](https://ziit.app) - The Swiss army knife of code time tracking (alternative to WakaTime). ([Source Code](https://github.com/0pandadev/ziit)) `AGPL-3.0` `Docker`\n\n\n### URL Shorteners\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n[URL shortening](https://en.wikipedia.org/wiki/URL_shortening) is the action of shortening a [URL](https://en.wikipedia.org/wiki/Uniform_Resource_Locator) to make it substantially shorter and still direct to the required page. Before hosting one, please see [disadvantages](https://en.wikipedia.org/wiki/URL_shortening#Disadvantages) of URL shorteners.\n\n- [bit](https://github.com/sjdonado/bit) - Fast, lightweight, resource-efficient, compiled URL shortener. `MIT` `Docker/Crystal`\n- [Chhoto URL](https://github.com/SinTan1729/chhoto-url) - Simple, lightning-fast URL shortener with no bloat (fork of simply-shorten). ([Demo](https://github.com/SinTan1729/chhoto-url?tab=readme-ov-file#demo), [Clients](https://github.com/SinTan1729/chhoto-url/blob/main/TOOLS.md)) `MIT` `Rust/Docker`\n- [clink](https://git.crueter.xyz/crueter/clink) - A super-minimal link shortening service written in pure C, focusing on small executable size, portability, and ease of configuration. ([Demo](https://short.crueter.xyz)) `AGPL-3.0` `C`\n- [Flink](https://gitlab.com/rtraceio/web/flink) - Create QR Codes, embeddable link previews for your website and crawls/scrapes metadata. ([Demo](https://flink.is)) `MIT` `Docker`\n- [Just Short It!](https://github.com/miawinter98/just-short-it) - A KISS, single-user URL shortener that runs in just one container. `MIT` `Docker`\n- [Kutt](https://kutt.it) - Modern URL shortener with support for custom domains and custom URLs. ([Demo](https://kutt.it), [Source Code](https://github.com/thedevs-network/kutt)) `MIT` `Nodejs/Docker`\n- [rs-short](https://git.42l.fr/42l/rs-short) - Lightweight link shortener written in Rust, with features such as caching, spambot protection and phishing detection. ([Demo](https://s.42l.fr/)) `MPL-2.0` `Rust`\n- [Shlink](https://shlink.io) - URL shortener with REST API and command line interface. Includes official progressive web application and docker images. ([Source Code](https://github.com/shlinkio/shlink), [Clients](https://shlink.io/apps)) `MIT` `PHP/Docker`\n- [Simple-URL-Shortener](https://github.com/azlux/Simple-URL-Shortener) - KISS URL shortener, public or private (with account). Minimalist and lightweight. No dependencies. ([Demo](https://u.azlux.fr)) `MIT` `PHP`\n- [YOURLS](https://yourls.org/) - YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. Features include password protection, URL customization, bookmarklets, statistics, API, plugins, jsonp. ([Source Code](https://github.com/YOURLS/YOURLS)) `MIT` `PHP`\n\n\n### Video Surveillance\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nVideo surveillance, also known as [Closed-circuit television (CCTV)](https://en.wikipedia.org/wiki/Closed-circuit_television), is the use of video cameras for surveillance in areas that require additional security or ongoing monitoring.\n\n_Related: [Media Streaming - Video Streaming](#media-streaming---video-streaming)_\n\n- [Bluecherry](https://www.bluecherrydvr.com/) - Closed-circuit television (CCTV) software application which supports IP and Analog cameras. ([Source Code](https://github.com/bluecherrydvr/bluecherry-apps)) `GPL-2.0` `PHP`\n- [Frigate](https://frigate.video/) - Monitor your security cameras with locally processed AI. ([Source Code](https://github.com/blakeblackshear/frigate)) `MIT` `Docker/Python/Nodejs`\n- [SentryShot](https://codeberg.org/SentryShot/sentryshot) - Video surveillance management system. `GPL-2.0` `Docker/Rust`\n- [Viseron](https://viseron.netlify.app/) - Self-hosted, local-only NVR and AI Computer Vision software. With features such as object detection, motion detection, face recognition and more, it gives you the power to keep an eye on your home, office or any other place you want to monitor. ([Source Code](https://github.com/roflcoopter/viseron)) `MIT` `Docker`\n- [Zoneminder](https://www.zoneminder.com/) - Closed-circuit television (CCTV) software application which supports IP, USB and Analog cameras. ([Source Code](https://github.com/ZoneMinder/ZoneMinder)) `GPL-2.0` `PHP/deb`\n\n\n### VPN\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [virtual private network (VPN)](https://en.wikipedia.org/wiki/Virtual_private_network) extends a private network across a public network and enables users to send and receive data across shared or public networks as if their computing devices were directly connected to the private network.\n\n**Please visit [awesome-sysadmin/VPN](https://github.com/awesome-foss/awesome-sysadmin#vpn)**\n\n\n\n### Web Servers\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nWeb Servers and Reverse Proxies. A [web server](https://en.wikipedia.org/wiki/Web_server) is a piece of software and underlying hardware that accepts requests via [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) (the network protocol created to distribute web content) or its secure variant [HTTPS](https://en.wikipedia.org/wiki/HTTPS). A [Reverse Proxy](https://en.wikipedia.org/wiki/Reverse_proxy) is a proxy server that appears to any client to be an ordinary web server, but in reality merely acts as an intermediary that forwards requests to one or more ordinary web servers.\n\n_Related: [Proxy](#proxy)_\n\n- [Algernon](https://algernon.roboticoverlords.org/) - Small self-contained pure-Go web server with Lua, Markdown, HTTP/2, QUIC, Redis and PostgreSQL support. ([Source Code](https://github.com/xyproto/algernon)) `BSD-3-Clause` `Go/Docker`\n- [Apache HTTP Server](https://httpd.apache.org/) - Secure, efficient and extensible server that provides HTTP services in sync with the current HTTP standards. ([Source Code](https://svn.apache.org/repos/asf/httpd/httpd/trunk/)) `Apache-2.0` `C/deb/Docker`\n- [BunkerWeb](https://www.bunkerweb.io) - Next-gen Web Application Firewall (WAF) that will protect your web services. ([Demo](https://demo.bunkerweb.io), [Source Code](https://github.com/bunkerity/bunkerweb), [Clients](https://docs.bunkerweb.io/latest/plugins/)) `AGPL-3.0` `deb/Docker/K8S/Python`\n- [Caddy](https://caddyserver.com/) - Powerful, enterprise-ready, open source web server with automatic HTTPS. ([Source Code](https://github.com/caddyserver/caddy)) `Apache-2.0` `Go/deb/Docker`\n- [go-doxy](https://github.com/yusing/godoxy) - Lightweight, simple, and  performant reverse proxy with WebUI, Docker integration, automatic shutdown/startup for container based on traffic. `MIT` `Docker/Go`\n- [HAProxy](https://www.haproxy.org/) - Very fast and reliable reverse-proxy offering high availability, load balancing, and proxying for TCP and HTTP-based applications. ([Source Code](https://git.haproxy.org/?p=haproxy.git;a=tree)) `GPL-2.0` `C/deb/Docker`\n- [Jauth](https://github.com/Jipok/Jauth) `⚠` - Lightweight SSL/TLS reverse proxy with authorization (via Telegram and SSH) for self-hosted apps. `GPL-3.0` `Go`\n- [Lighttpd](https://www.lighttpd.net/) - Secure, fast, compliant, and very flexible web server that has been optimized for high-performance environments. ([Source Code](https://git.lighttpd.net/lighttpd/lighttpd1.4)) `BSD-3-Clause` `C/deb/Docker`\n- [Nginx Proxy Manager](https://nginxproxymanager.com/) - Docker container for managing Nginx proxy hosts with a simple, powerful interface. ([Source Code](https://github.com/NginxProxyManager/nginx-proxy-manager)) `MIT` `Docker`\n- [NGINX](https://nginx.org/en/) - HTTP and reverse proxy server, mail proxy server, and generic TCP/UDP proxy server. ([Source Code](https://github.com/nginx/nginx)) `BSD-2-Clause` `C/deb/Docker`\n- [Pangolin](https://digpangolin.com/) - Identity-aware tunneled reverse proxy with dashboard UI, access control, and WireGuard-based tunnels (alternative to Cloudflare Tunnel, Tailscale). ([Source Code](https://github.com/fosrl/pangolin)) `AGPL-3.0` `Docker`\n- [Pomerium](https://www.pomerium.io) - Identity-aware reverse proxy, successor to now obsolete oauth_proxy. It inserts an OAuth step before proxying your request to the backend, so that you can safely expose your self-hosted websites to public Internet. ([Source Code](https://github.com/pomerium/pomerium)) `Apache-2.0` `Go/Docker`\n- [SafeLine](https://waf.chaitin.com/) - Web application firewall / reverse proxy to protect your web apps from attacks and exploits. ([Demo](https://demo.waf.chaitin.com/), [Source Code](https://github.com/chaitin/SafeLine)) `GPL-3.0` `Docker`\n- [Static Web Server](https://static-web-server.net/) - Cross-platform, high-performance, and asynchronous web server for static file serving. ([Source Code](https://github.com/static-web-server/static-web-server)) `Apache-2.0/MIT` `Rust/Docker`\n- [SWAG (Secure Web Application Gateway)](https://github.com/linuxserver/docker-swag) - Nginx webserver and reverse proxy with PHP support, built-in Certbot (Let's Encrypt) client and fail2ban integration. `GPL-3.0` `Docker`\n- [Traefik](https://traefik.io/) - HTTP reverse proxy and load balancer that makes deploying microservices easy. ([Source Code](https://github.com/traefik/traefik)) `MIT` `Go/Docker`\n- [UUSEC WAF](https://uuwaf.uusec.com) - Industry-leading high-performance, AI and semantic technology web application firewall and API security gateway (fork of nginx). ([Source Code](https://github.com/Safe3/uusec-waf)) `GPL-3.0` `C/Lua/Docker`\n- [Varnish](https://varnish-cache.org/) - Web application accelerator/caching HTTP reverse proxy. ([Source Code](https://github.com/varnishcache/varnish-cache)) `BSD-3-Clause` `Go/deb/Docker`\n- [Zoraxy](https://zoraxy.aroz.org/) - General purpose HTTP reverse proxy and forwarding tool. ([Source Code](https://github.com/tobychui/zoraxy)) `AGPL-3.0` `Go/Docker`\n\n\n### Wikis\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\nA [wiki](https://en.wikipedia.org/wiki/Wiki) is a publication collaboratively edited and managed by its own audience directly using a web browser.\n\n_Related: [Note-taking & Editors](#note-taking--editors), [Static Site Generators](#static-site-generators), [Knowledge Management Tools](#knowledge-management-tools)_\n\n_See also: [Wikimatrix](https://www.wikimatrix.org/), [List of wiki software - Wikipedia](https://en.wikipedia.org/wiki/List_of_wiki_software), [Comparison of wiki software - Wikipedia](https://en.wikipedia.org/wiki/Comparison_of_wiki_software)_\n\n- [AmuseWiki](https://amusewiki.org/) - Amusewiki is based on the Emacs Muse markup, remaining mostly compatible with the original implementation. It can work as a read-only site, as a moderated wiki, or as a fully open wiki or even as a private site. ([Demo](https://sandbox.amusewiki.org), [Source Code](https://github.com/melmothx/amusewiki)) `GPL-1.0` `Perl/Docker`\n- [BookStack](https://www.bookstackapp.com/) - Organize and store information. Stores documentation in a book like fashion. ([Demo](https://www.bookstackapp.com/#demo), [Source Code](https://github.com/BookStackApp/BookStack)) `MIT` `PHP/Docker`\n- [django-wiki](https://github.com/django-wiki/django-wiki) - Wiki system with complex functionality for simple integration and a superb interface. Store your knowledge with style: Use django models. ([Demo](https://demo.django-wiki.org/)) `GPL-3.0` `Python`\n- [docmost](https://docmost.com/) - Collaborative wiki and documentation software (alternative to Confluence, Notion). ([Source Code](https://github.com/docmost/docmost)) `AGPL-3.0` `Docker/Nodejs`\n- [Documize](https://documize.com) - Modern Docs + Wiki software with built-in workflow, single binary executable, just bring MySQL/Percona. ([Source Code](https://github.com/documize/community)) `AGPL-3.0` `Go`\n- [Dokuwiki](https://www.dokuwiki.org/DokuWiki) - Easy to use, lightweight, standards-compliant wiki engine with a simple syntax allowing reading the data outside the wiki. All data is stored in plain text files, therefore no database is required. ([Source Code](https://github.com/dokuwiki/dokuwiki)) `GPL-2.0` `PHP`\n- [Feather Wiki](https://feather.wiki) - A lightning fast and infinitely extensible tool for creating personal non-linear notebooks, databases, and wikis that is entirely self-contained, runs in your browser, and is only 58 kilobytes in size. ([Demo](https://feather.wiki/?page=gallery#wikis), [Source Code](https://codeberg.org/Alamantus/FeatherWiki), [Clients](https://feather.wiki/?page=gallery#extensions)) `AGPL-3.0` `Javascript`\n- [Gitit](https://github.com/jgm/gitit) - Wiki program that stores pages and uploaded files in a git repository, which can then be modified using the VCS command line tools or the wiki's web interface. `GPL-2.0` `Haskell`\n- [Gollum](https://github.com/gollum/gollum) - Simple, Git-powered wiki with a sweet API and local frontend. `MIT` `Ruby`\n- [Mediawiki](https://www.mediawiki.org/wiki/MediaWiki) - Wiki software package that powers Wikipedia and all other Wikimedia projects, serving hundreds of millions of users each month. ([Demo](https://en.wikipedia.org/wiki/Main_Page), [Source Code](https://phabricator.wikimedia.org/source/mediawiki/)) `GPL-2.0` `PHP`\n- [Mycorrhiza Wiki](https://mycorrhiza.wiki/) - Filesystem and git-based wiki engine written in Go using Mycomarkup as its primary markup language. ([Source Code](https://github.com/bouncepaw/mycorrhiza/)) `AGPL-3.0` `Go`\n- [Oddmuse](https://oddmuse.org/) - Simple wiki engine written in Perl. No database required. ([Source Code](https://github.com/kensanata/oddmuse)) `GPL-3.0` `Perl`\n- [Otter Wiki](https://otterwiki.com/) - Simple, easy to use wiki software using markdown. ([Source Code](https://github.com/redimp/otterwiki)) `MIT` `Docker`\n- [PmWiki](https://www.pmwiki.org) - Wiki-based system for collaborative creation and maintenance of websites. `GPL-3.0` `PHP`\n- [Raneto](https://raneto.com/) - Knowledgebase platform that uses static Markdown files. ([Source Code](https://github.com/ryanlelek/Raneto)) `MIT` `Nodejs`\n- [TiddlyWiki](https://tiddlywiki.com/) - Reusable non-linear personal web notebook. ([Source Code](https://github.com/TiddlyWiki/TiddlyWiki5)) `BSD-3-Clause` `Nodejs`\n- [Tiki](https://tiki.org/HomePage) - Wiki CMS Groupware with the most built-in features. ([Demo](https://tiki.org/Try-Tiki), [Source Code](https://gitlab.com/tikiwiki/tiki)) `LGPL-2.1` `PHP`\n- [W](https://w.club1.fr) - Lightweight, mutli-user, flat-file-database Wiki engine. Create pages quickly and edit them in your Web browser using Mardown/HTML/CSS/JS. The main difference with other wiki is that you are encouraged to customize each page style individually. ([Source Code](https://github.com/vincent-peugnet/wcms)) `AGPL-3.0` `PHP`\n- [WackoWiki](https://wackowiki.org/) - WackoWiki is a light and easy to install multilingual Wiki-engine. ([Source Code](https://github.com/WackoWiki/wackowiki)) `BSD-3-Clause` `PHP`\n- [Wiki-Go](https://leomoon.com/downloads/web-apps/wiki-go/) - A modern, feature-rich, databaseless flat-file wiki platform. ([Demo](https://wikigo.leomoon.com), [Source Code](https://github.com/leomoon-studios/wiki-go)) `GPL-3.0` `Go/Docker`\n- [Wiki.js](https://js.wiki/) - Modern, lightweight and powerful wiki app using Git and Markdown. ([Demo](https://docs.requarks.io), [Source Code](https://github.com/Requarks/wiki)) `AGPL-3.0` `Nodejs/Docker/K8S`\n- [WikiDocs](http://wikidocs.it) - A databaseless markdown flat-file wiki engine. ([Source Code](https://github.com/Zavy86/WikiDocs)) `MIT` `PHP/Docker`\n- [WiKiss](https://wikiss.tuxfamily.org/) - Wiki, simple to use and install. ([Source Code](https://svnweb.tuxfamily.org/listing.php?repname=wikiss/svn&path=%2F&sc=0)) `GPL-2.0` `PHP`\n- [Wikmd](https://github.com/Linbreux/wikmd) - Modern and simple file based wiki that uses Markdown and Git. `MIT` `Python/Docker`\n- [XWiki](https://www.xwiki.org) - Second generation wiki that allows the user to extend its functionalities with a powerful extension-based architecture. ([Demo](https://www.xwikiplayground.org/xwiki/bin/view/Main/), [Source Code](https://github.com/xwiki/xwiki-platform)) `LGPL-2.1` `Java/Docker/deb`\n- [Zim](https://zim-wiki.org/) - Graphical text editor used to maintain a collection of wiki pages. Each page can contain links to other pages, simple formatting and images. ([Source Code](https://github.com/zim-desktop-wiki/zim-desktop-wiki)) `GPL-2.0` `Python/deb`\n\n\n--------------------\n\n## List of Licenses\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n- `0BSD` - [BSD Zero-Clause Licence](https://spdx.org/licenses/0BSD.html)\n- `AAL` - [Attribution Assurance License](https://spdx.org/licenses/AAL.html)\n- `AGPL-3.0` - [GNU Affero General Public License 3.0](https://spdx.org/licenses/AGPL-3.0.html)\n- `Apache-2.0` - [Apache, Version 2.0](https://spdx.org/licenses/Apache-2.0.html)\n- `APSL-2.0` - [Apple Public Source License, Version 2.0](https://spdx.org/licenses/APSL-2.0.html)\n- `Artistic-2.0` - [Artistic License Version 2.0](https://spdx.org/licenses/Artistic-2.0.html)\n- `Beerware` - [Beerware License](https://spdx.org/licenses/Beerware.html)\n- `BSD-2-Clause` - [BSD 2-clause \"Simplified\"](https://spdx.org/licenses/BSD-2-Clause.html)\n- `BSD-2-Clause-FreeBSD` - [BSD 2-Clause FreeBSD License](https://spdx.org/licenses/BSD-2-Clause-FreeBSD.html)\n- `BSD-3-Clause` - [BSD 3-Clause \"New\" or \"Revised\"](https://spdx.org/licenses/BSD-3-Clause.html)\n- `BSD-3-Clause-Attribution` - [BSD with attribution](https://spdx.org/licenses/BSD-3-Clause-Attribution.html)\n- `BSD-4-Clause` - [BSD 4-clause \"Original\"](https://spdx.org/licenses/BSD-4-Clause.html)\n- `CAL-1.0` - [Cryptographic Autonomy License 1.0](https://spdx.org/licenses/CAL-1.0.html)\n- `CC-BY-SA-3.0` - [Creative Commons Attribution-ShareAlike 3.0 License](https://spdx.org/licenses/CC-BY-SA-3.0.html)\n- `CC-BY-SA-4.0` - [Creative Commons Attribution-ShareAlike 4.0 License](https://spdx.org/licenses/CC-BY-SA-4.0.html)\n- `CC0-1.0` - [Public Domain/Creative Common Zero 1.0](https://spdx.org/licenses/CC0-1.0.html)\n- `CDDL-1.0` - [Common Development and Distribution License](https://spdx.org/licenses/CDDL-1.0.html)\n- `CECILL-B` - [CEA CNRS INRIA Logiciel Libre](https://spdx.org/licenses/CECILL-B.html)\n- `CPAL-1.0` - [Common Public Attribution License Version 1.0](https://spdx.org/licenses/CPAL-1.0.html)\n- `ECL-2.0` - [Educational Community License, Version 2.0](https://spdx.org/licenses/ECL-2.0.html)\n- `EPL-1.0` - [Eclipse Public License, Version 1.0](https://spdx.org/licenses/EPL-1.0.html)\n- `EPL-2.0` - [Eclipse Public License, Version 2.0](https://spdx.org/licenses/EPL-2.0.html)\n- `EUPL-1.2` - [European Union Public License 1.2](https://spdx.org/licenses/EUPL-1.2.html)\n- `GPL-1.0` - [GNU General Public License 1.0](https://spdx.org/licenses/GPL-1.0.html)\n- `GPL-2.0` - [GNU General Public License 2.0](https://spdx.org/licenses/GPL-2.0.html)\n- `GPL-3.0` - [GNU General Public License 3.0](https://spdx.org/licenses/GPL-3.0.html)\n- `IPL-1.0` - [IBM Public License](https://spdx.org/licenses/IPL-1.0.html)\n- `ISC` - [Internet Systems Consortium License](https://spdx.org/licenses/ISC.html)\n- `LGPL-2.1` - [Lesser General Public License 2.1](https://spdx.org/licenses/LGPL-2.1.html)\n- `LGPL-3.0` - [Lesser General Public License 3.0](https://spdx.org/licenses/LGPL-3.0.html)\n- `MIT` - [MIT License](https://spdx.org/licenses/MIT.html)\n- `MPL-1.1` - [Mozilla Public License Version 1.1](https://spdx.org/licenses/MPL-1.1.html)\n- `MPL-2.0` - [Mozilla Public License](https://spdx.org/licenses/MPL-2.0.html)\n- `OSL-3.0` - [Open Software License 3.0](https://spdx.org/licenses/OSL-3.0.html)\n- `Sendmail` - [Sendmail License](https://spdx.org/licenses/Sendmail.html)\n- `Ruby` - [Ruby License](https://spdx.org/licenses/Ruby.html)\n- `Unlicense` - [The Unlicense](https://spdx.org/licenses/Unlicense.html)\n- `WTFPL` - [Do What the Fuck You Want to Public License](https://spdx.org/licenses/WTFPL.html)\n- `Zlib` - [Zlib/libpng License](https://spdx.org/licenses/Zlib.html)\n- `ZPL-2.0` - [Zope Public License 2.0](https://spdx.org/licenses/ZPL-2.0.html)\n\n\n--------------------\n\n## Anti-features\n\n- `⚠ ` - Depends on a proprietary service outside the user's control\n\n--------------------\n\n## External Links\n\n**[`^        back to top        ^`](#awesome-selfhosted)**\n\n- Alternative frontends/portals to discover/filter awesome-selfhosted apps: [awweso.me](https://awweso.me/) | [awesome-web.theravenhub](https://awesome-web.theravenhub.com/browse.html)\n- [Awesome Sysadmin](https://github.com/awesome-foss/awesome-sysadmin) - Curated list of amazingly awesome open source sysadmin resources.\n- Lists of software aimed at privacy and decentralization in some form: [PRISM Break](https://prism-break.org/en/), [privacytools.io](https://www.privacytools.io/), [Alternative Internet](https://redecentralize.github.io/alternative-internet/), [Libre Projects](https://libreprojects.net/), [Easy Indie App](https://easyindie.app)\n- Other Awesome lists: [Awesome Big Data](https://github.com/0xnr/awesome-bigdata), [Awesome Public Datasets](https://github.com/awesomedata/awesome-public-datasets)\n- Dynamic Domain Name services: [Afraid.org](https://freedns.afraid.org/domain/registry/), [Pagekite](https://pagekite.net/)\n- Communities/forums: [/c/selfhosted on lemmy.world](https://lemmy.world/c/selfhosted), [/c/selfhost on lemmy.ml](https://lemmy.ml/c/selfhost), [/r/selfhosted on reddit](https://old.reddit.com/r/selfhosted/), [r-selfhosted forum](https://forum.r-selfhosted.com/), [/r/selfhosted Matrix Channel](https://matrix.to/#/#selfhosted:selfhosted.chat), [Homelab forum](https://homelabforum.com/), [/r/homelab on reddit](https://old.reddit.com/r/homelab/), [IndieWeb](https://indieweb.org/)\n- [theme.park](https://theme-park.dev/) - A collection of themes/skins for 50 selfhosted apps! ([Source Code](https://github.com/GilbN/theme.park/)) `MIT` `CSS`\n- [Track Awesome Selfhosted](https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/) - Get the latest updates of awesome-selfhosted.\n\n--------------------\n\n## Contributing\n\nContributing guidelines can be found [here](https://github.com/awesome-selfhosted/awesome-selfhosted-data/blob/master/CONTRIBUTING.md).\n\n## License\n\nThis list is under the [Creative Commons Attribution-ShareAlike 3.0 Unported](https://github.com/awesome-selfhosted/awesome-selfhosted/blob/master/LICENSE) License.\nTerms of the license are summarized [here](https://creativecommons.org/licenses/by-sa/3.0/).  \nThe list of authors can be found in the [AUTHORS](https://github.com/awesome-selfhosted/awesome-selfhosted-data/blob/master/AUTHORS) file.\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/awesome-selfhosted/awesome-selfhosted",
        "repo_name": "awesome-selfhosted",
        "owner_name": "awesome-selfhosted",
        "theme_id": "ee5ebbf098079661f1962006fa471bb5",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451369",
        "keywords": [
          "list",
          "free",
          "software",
          "network",
          "services",
          "applications",
          "which",
          "hosted",
          "your",
          "servers"
        ]
      },
      {
        "full_name": "trimstray/the-book-of-secret-knowledge",
        "description": "A collection of inspiring lists, manuals, cheatsheets, blogs, hacks, one-liners, cli/web tools and more.",
        "stars": 188785,
        "files": [],
        "readme": "<p align=\"center\">\n  <a href=\"https://github.com/trimstray/the-book-of-secret-knowledge\">\n    <img src=\"https://github.com/trimstray/the-book-of-secret-knowledge/blob/master/static/img/the-book-of-secret-knowledge-preview.png\" alt=\"Master\">\n  </a>\n</p>\n\n<p align=\"center\">\"<i>Knowledge is powerful, be careful how you use it!</i>\"</p>\n\n<h4 align=\"center\">A collection of inspiring lists, manuals, cheatsheets, blogs, hacks, one-liners, cli/web tools, and more.</h4>\n\n<br>\n\n<p align=\"center\">\n  <a href=\"https://github.com/trimstray/the-book-of-secret-knowledge/pulls\">\n    <img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?longCache=true\" alt=\"Pull Requests\">\n  </a>\n  <a href=\"LICENSE.md\">\n    <img src=\"https://img.shields.io/badge/License-MIT-lightgrey.svg?longCache=true\" alt=\"MIT License\">\n  </a>\n</p>\n\n<br>\n\n****\n\n## :notebook_with_decorative_cover: &nbsp;What is it?\n\nThis repository is a collection of various materials and tools that I use every day in my work. It contains a lot of useful information gathered in one piece. It is an invaluable source of knowledge for me that I often look back on.\n\n## :restroom: &nbsp;For whom?\n\nFor everyone, really. Here everyone can find their favourite tastes. But to be perfectly honest, it is aimed towards System and Network administrators, DevOps, Pentesters, and Security Researchers.\n\n## :information_source: &nbsp;Contributing\n\nIf you find something which doesn't make sense, or something doesn't seem right, please make a pull request and please add valid and well-reasoned explanations about your changes or comments.\n\nA few simple rules for this project:\n\n- inviting and clear\n- not tiring\n- useful\n\nThese below rules may be better:\n\n- easy to contribute to (Markdown + HTML ...)\n- easy to find (simple TOC, maybe it's worth extending them?)\n\nUrl marked **\\*** is temporary unavailable. Please don't delete it without confirming that it has permanently expired.\n\nBefore adding a pull request, please see the **[contributing guidelines](.github/CONTRIBUTING.md)**. You should also remember about this:\n\n```diff\n+ This repository is not meant to contain everything but only good quality stuff.\n```\n\nAll **suggestions/PR** are welcome!\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute.\n\n<a href=\"https://github.com/trimstray/the-book-of-secret-knowledge/graphs/contributors\"><img src=\"https://opencollective.com/the-book-of-secret-knowledge/contributors.svg?width=890&button=false\"></a>\n\n### Financial Contributors\n\n<p align=\"left\">\n  <a href=\"https://opencollective.com/the-book-of-secret-knowledge\" alt=\"Financial Contributors on Open Collective\">\n    <img src=\"https://img.shields.io/opencollective/backers/the-book-of-secret-knowledge?style=for-the-badge&color=FF4500&labelColor=A9A9A9\"></a>\n  </a>\n  <a href=\"https://opencollective.com/the-book-of-secret-knowledge\" alt=\"Financial Contributors on Open Collective\">\n    <img src=\"https://img.shields.io/opencollective/sponsors/the-book-of-secret-knowledge?style=for-the-badge&color=FF4500&labelColor=A9A9A9\"></a>\n  </a>\n</p>\n\n## :newspaper: &nbsp;RSS Feed & Updates\n\nGitHub exposes an [RSS/Atom](https://github.com/trimstray/the-book-of-secret-knowledge/commits.atom) feed of the commits, which may also be useful if you want to be kept informed about all changes.\n\n## :ballot_box_with_check: &nbsp;ToDo\n\n- [ ] Add new stuff...\n- [ ] Add useful shell functions\n- [ ] Add one-liners for collection tools (eg. CLI Tools)\n- [ ] Sort order in lists\n\nNew items are also added on a regular basis.\n\n## :anger: &nbsp;Table of Contents\n\nOnly main chapters:\n\n- **[CLI Tools](#cli-tools-toc)**\n- **[GUI Tools](#gui-tools-toc)**\n- **[Web Tools](#web-tools-toc)**\n- **[Systems/Services](#systemsservices-toc)**\n- **[Networks](#networks-toc)**\n- **[Containers/Orchestration](#containersorchestration-toc)**\n- **[Manuals/Howtos/Tutorials](#manualshowtostutorials-toc)**\n- **[Inspiring Lists](#inspiring-lists-toc)**\n- **[Blogs/Podcasts/Videos](#blogspodcastsvideos-toc)**\n- **[Hacking/Penetration Testing](#hackingpenetration-testing-toc)**\n- **[Your daily knowledge and news](#your-daily-knowledge-and-news-toc)**\n- **[Other Cheat Sheets](#other-cheat-sheets-toc)**\n- **[Shell One-liners](#shell-one-liners-toc)**\n- **[Shell Tricks](#shell-tricks-toc)**\n- **[Shell Functions](#shell-functions-toc)**\n\n## :trident: &nbsp;The Book of Secret Knowledge (Chapters)\n\n#### CLI Tools &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: Shells\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.gnu.org/software/bash/\"><b>GNU Bash</b></a> - is an sh-compatible shell that incorporates useful features from the Korn shell and C shell.<br>\n&nbsp;&nbsp; <a href=\"https://www.zsh.org/\"><b>Zsh</b></a> - is a shell designed for interactive use, although it is also a powerful scripting language.<br>\n&nbsp;&nbsp; <a href=\"https://tcl-lang.org/\"><b>tclsh</b></a> - is a very powerful cross-platform shell, suitable for a huge range of uses.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Bash-it/bash-it\"><b>bash-it</b></a> - is a framework for using, developing and maintaining shell scripts and custom commands.<br>\n&nbsp;&nbsp; <a href=\"https://ohmyz.sh/\"><b>Oh My ZSH!</b></a> - is the best framework for managing your Zsh configuration.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/oh-my-fish/oh-my-fish\"><b>Oh My Fish</b></a> - the Fishshell framework.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/starship/starship\"><b>Starship</b></a> - the cross-shell prompt written in Rust.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/romkatv/powerlevel10k\"><b>powerlevel10k</b></a> - is a fast reimplementation of Powerlevel9k ZSH theme.<br>\n</p>\n\n##### :black_small_square: Shell plugins\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/rupa/z\"><b>z</b></a> - tracks the folder you use the most and allow you to jump, without having to type the whole path.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/junegunn/fzf\"><b>fzf</b></a> - is a general-purpose command-line fuzzy finder.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/zsh-users/zsh-autosuggestions\"><b>zsh-autosuggestions</b></a> - Fish-like autosuggestions for Zsh.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\"><b>zsh-syntax-highlighting</b></a> - Fish shell like syntax highlighting for Zsh.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/unixorn/awesome-zsh-plugins\"><b>Awesome ZSH Plugins</b></a> - A list of frameworks, plugins, themes and tutorials for ZSH.<br>\n</p>\n\n##### :black_small_square: Managers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://midnight-commander.org/\"><b>Midnight Commander</b></a> - is a visual file manager, licensed under GNU General Public License.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ranger/ranger\"><b>ranger</b></a> - is a VIM-inspired filemanager for the console.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jarun/nnn\"><b>nnn</b></a> - is a tiny, lightning fast, feature-packed file manager.<br>\n&nbsp;&nbsp; <a href=\"https://www.gnu.org/software/screen/\"><b>screen</b></a> - is a full-screen window manager that multiplexes a physical terminal.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/tmux/tmux/wiki\"><b>tmux</b></a> - is a terminal multiplexer, lets you switch easily between several programs in one terminal.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/peikk0/tmux-cssh\"><b>tmux-cssh</b></a> - is a tool to set comfortable and easy to use functionality tmux-sessions.<br>\n</p>\n\n##### :black_small_square: Text editors\n\n<p>\n&nbsp;&nbsp; <a href=\"http://ex-vi.sourceforge.net/\"><b>vi</b></a> - is one of the most common text editors on Unix.<br>\n&nbsp;&nbsp; <a href=\"https://www.vim.org/\"><b>vim</b></a> - is a highly configurable text editor.<br>\n&nbsp;&nbsp; <a href=\"https://www.gnu.org/software/emacs/\"><b>emacs</b></a> - is an extensible, customizable, free/libre text editor, and more.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/zyedidia/micro\"><b>micro</b></a> - is a modern and intuitive terminal-based text editor.<br>\n&nbsp;&nbsp; <a href=\"https://neovim.io/\"><b>neovim</b></a> - is a free open source, powerful, extensible and usable code editor.<br>\n&nbsp;&nbsp; <a href=\"https://www.spacemacs.org/\"><b>spacemacs</b></a> - a community-driven Emacs distribution.<br>\n&nbsp;&nbsp; <a href=\"https://spacevim.org/\"><b>spacevim</b></a> - a community-driven vim distribution.<br>\n</p>\n\n##### :black_small_square: Files and directories\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/sharkdp/fd\"><b>fd</b></a> - is a simple, fast and user-friendly alternative to find.<br>\n&nbsp;&nbsp; <a href=\"https://dev.yorhel.nl/ncdu\"><b>ncdu</b></a> - is an easy to use, fast disk usage analyzer.<br>\n</p>\n\n##### :black_small_square: Network\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.putty.org/\"><b>PuTTY</b></a> - is an SSH and telnet client, developed originally by Simon Tatham.<br>\n&nbsp;&nbsp; <a href=\"https://mosh.org/\"><b>Mosh</b></a> - is a SSH wrapper designed to keep a SSH session alive over a volatile connection.<br>\n&nbsp;&nbsp; <a href=\"https://eternalterminal.dev/\"><b>Eternal Terminal</b></a> - enables mouse-scrolling and tmux commands inside the SSH session.<br>\n&nbsp;&nbsp; <a href=\"https://nmap.org/\"><b>nmap</b></a> - is a free and open source (license) utility for network discovery and security auditing.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/zmap/zmap\"><b>zmap</b></a> - is a fast single packet network scanner designed for Internet-wide network surveys.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/RustScan/RustScan\"><b>Rust Scan</b></a> - to find all open ports faster than Nmap.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/robertdavidgraham/masscan\"><b>masscan</b></a> - is the fastest Internet port scanner, spews SYN packets asynchronously.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/gvb84/pbscan\"><b>pbscan</b></a> - is a faster and more efficient stateless SYN scanner and banner grabber.<br>\n&nbsp;&nbsp; <a href=\"http://www.hping.org/\"><b>hping</b></a> - is a command-line oriented TCP/IP packet assembler/analyzer.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/traviscross/mtr\"><b>mtr</b></a> - is a tool that combines the functionality of the 'traceroute' and 'ping' programs in a single tool.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mehrdadrad/mylg\"><b>mylg</b></a> - utility which combines the functions of the different network probes in one diagnostic tool.<br>\n&nbsp;&nbsp; <a href=\"http://netcat.sourceforge.net/\"><b>netcat</b></a> - utility which reads and writes data across network connections, using the TCP/IP protocol.<br>\n&nbsp;&nbsp; <a href=\"http://www.dest-unreach.org/socat/\"><b>socat</b></a> - utility which transfers data between two objects.<br>\n&nbsp;&nbsp; <a href=\"https://www.tcpdump.org/\"><b>tcpdump</b></a> - is a powerful command-line packet analyzer.<br>\n&nbsp;&nbsp; <a href=\"https://www.wireshark.org/docs/man-pages/tshark.html\"><b>tshark</b></a> - is a tool that allows us to dump and analyze network traffic (wireshark cli).<br>\n&nbsp;&nbsp; <a href=\"https://termshark.io/\"><b>Termshark</b></a> - is a simple terminal user-interface for tshark.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jpr5/ngrep\"><b>ngrep</b></a> - is like GNU grep applied to the network layer.<br>\n&nbsp;&nbsp; <a href=\"http://netsniff-ng.org/\"><b>netsniff-ng</b></a> - is a Swiss army knife for your daily Linux network plumbing if you will.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mechpen/sockdump\"><b>sockdump</b></a> - dump unix domain socket traffic.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/google/stenographer\"><b>stenographer</b></a> - is a packet capture solution which aims to quickly spool all packets to disk.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/sachaos/tcpterm\"><b>tcpterm</b></a> - visualize packets in TUI.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/tgraf/bmon\"><b>bmon</b></a> - is a monitoring and debugging tool to capture networking related statistics and prepare them visually.<br>\n&nbsp;&nbsp; <a href=\"http://iptraf.seul.org/2.6/manual.html#installation\"><b>iptraf-ng</b></a> - is a console-based network monitoring program for Linux that displays information about IP traffic.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/vergoh/vnstat\"><b>vnstat</b></a> - is a network traffic monitor for Linux and BSD.<br>\n&nbsp;&nbsp; <a href=\"https://iperf.fr/\"><b>iPerf3</b></a> - is a tool for active measurements of the maximum achievable bandwidth on IP networks.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Microsoft/Ethr\"><b>ethr</b></a> - is a Network Performance Measurement Tool for TCP, UDP & HTTP.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jwbensley/Etherate\"><b>Etherate</b></a> - is a Linux CLI based Ethernet and MPLS traffic testing tool.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mpolden/echoip\"><b>echoip</b></a> - is a IP address lookup service.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/troglobit/nemesis\"><b>Nemesis</b></a> - packet manipulation CLI tool; craft and inject packets of several protocols.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/packetfu/packetfu\"><b>packetfu</b></a> - a mid-level packet manipulation library for Ruby.<br>\n&nbsp;&nbsp; <a href=\"https://scapy.net/\"><b>Scapy</b></a> - packet manipulation library; forge, send, decode, capture packets of a wide number of protocols.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/SecureAuthCorp/impacket\"><b>impacket</b></a> - is a collection of Python classes for working with network protocols.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/arthepsy/ssh-audit\"><b>ssh-audit</b></a> - is a tool for SSH server auditing.<br>\n&nbsp;&nbsp; <a href=\"https://aria2.github.io/\"><b>aria2</b></a> - is a lightweight multi-protocol & multi-source command-line download utility.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/x-way/iptables-tracer\"><b>iptables-tracer</b></a> - observe the path of packets through the iptables chains.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/proabiral/inception\"><b>inception</b></a> - a highly configurable tool to check for whatever you like against any number of hosts.<br>\n&nbsp;&nbsp; <a href=\"https://mremoteng.org/\"><b>mRemoteNG</b></a> - a fork of mRemote, multi-tabbed PuTTy on steroids!<br>\n</p>\n\n##### :black_small_square: Network (DNS)\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/farrokhi/dnsdiag\"><b>dnsdiag</b></a> - is a DNS diagnostics and performance measurement tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mschwager/fierce\"><b>fierce</b></a> - is a DNS reconnaissance tool for locating non-contiguous IP space.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/subfinder/subfinder\"><b>subfinder</b></a> - is a subdomain discovery tool that discovers valid subdomains for websites.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/aboul3la/Sublist3r\"><b>sublist3r</b></a> - is a fast subdomains enumeration tool for penetration testers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OWASP/Amass\"><b>amass</b></a> - is tool that obtains subdomain names by scraping data sources, crawling web archives, and more.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/google/namebench\"><b>namebench</b></a> - provides personalized DNS server recommendations based on your browsing history.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/blechschmidt/massdns\"><b>massdns</b></a> - is a high-performance DNS stub resolver for bulk lookups and reconnaissance.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/guelfoweb/knock\"><b>knock</b></a> - is a tool to enumerate subdomains on a target domain through a wordlist.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/DNS-OARC/dnsperf\"><b>dnsperf</b></a> - DNS performance testing tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jedisct1/dnscrypt-proxy\"><b>dnscrypt-proxy 2</b></a> - a flexible DNS proxy, with support for encrypted DNS protocols.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dnsdb/dnsdbq\"><b>dnsdbq</b></a> - API client providing access to passive DNS database systems.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/looterz/grimd\"><b>grimd</b></a> - fast dns proxy, built to black-hole internet advertisements and malware servers.<br>\n  &nbsp;&nbsp; <a href=\"https://github.com/elceef/dnstwist\"><b>dnstwist</b></a> - detect typosquatters, phishing attacks, fraud, and brand impersonation.<br>\n</p>\n\n##### :black_small_square: Network (HTTP)\n\n<p>\n&nbsp;&nbsp; <a href=\"https://curl.haxx.se/\"><b>curl</b></a> - is a command line tool and library for transferring data with URLs.<br>\n&nbsp;&nbsp; <a href=\"https://gitlab.com/davidjpeacock/kurly\"><b>kurly</b></a> - is an alternative to the widely popular curl program, written in Golang.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jakubroztocil/httpie\"><b>HTTPie</b></a> - is an user-friendly HTTP client.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/asciimoo/wuzz\"><b>wuzz</b></a> - is an interactive cli tool for HTTP inspection.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/summerwind/h2spec\"><b>h2spec</b></a> - is a conformance testing tool for HTTP/2 implementation.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/gildasio/h2t\"><b>h2t</b></a> - is a simple tool to help sysadmins to hardening their websites.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/trimstray/htrace.sh\"><b>htrace.sh</b></a> - is a simple Swiss Army knife for http/https troubleshooting and profiling.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/reorx/httpstat\"><b>httpstat</b></a> - is a tool that visualizes curl statistics in a way of beauty and clarity.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/gchaincl/httplab\"><b>httplab</b></a> - is an interactive web server.<br>\n&nbsp;&nbsp; <a href=\"https://lynx.browser.org/\"><b>Lynx</b></a> - is a text browser for the World Wide Web.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/browsh-org/browsh/\"><b>Browsh</b></a> - is a fully interactive, real-time, and modern text-based browser.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dhamaniasad/HeadlessBrowsers\"><b>HeadlessBrowsers</b></a> - a list of (almost) all headless web browsers in existence.<br>\n&nbsp;&nbsp; <a href=\"https://httpd.apache.org/docs/2.4/programs/ab.html\"><b>ab</b></a> - is a single-threaded command line tool for measuring the performance of HTTP web servers.<br>\n&nbsp;&nbsp; <a href=\"https://www.joedog.org/siege-home/\"><b>siege</b></a> - is an http load testing and benchmarking utility.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/wg/wrk\"><b>wrk</b></a> - is a modern HTTP benchmarking tool capable of generating significant load.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/giltene/wrk2\"><b>wrk2</b></a> - is a constant throughput, correct latency recording variant of wrk.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/tsenart/vegeta\"><b>vegeta</b></a> - is a constant throughput, correct latency recording variant of wrk.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/codesenberg/bombardier\"><b>bombardier</b></a> - is a fast cross-platform HTTP benchmarking tool written in Go.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/cmpxchg16/gobench\"><b>gobench</b></a> - http/https load testing and benchmarking tool.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rakyll/hey\"><b>hey</b></a> - HTTP load generator, ApacheBench (ab) replacement, formerly known as rakyll/boom.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/tarekziade/boom\"><b>boom</b></a> - is a script you can use to quickly smoke-test your web app deployment.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/shekyan/slowhttptest\"><b>SlowHTTPTest</b></a> - is a tool that simulates some Application Layer Denial of Service attacks by prolonging HTTP.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OJ/gobuster\"><b>gobuster</b></a> - is a free and open source directory/file & DNS busting tool written in Go.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ssllabs/ssllabs-scan\"><b>ssllabs-scan</b></a> - command-line reference-implementation client for SSL Labs APIs.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mozilla/http-observatory\"><b>http-observatory</b></a> - Mozilla HTTP Observatory cli version.<br>\n&nbsp;&nbsp; <a href=\"https://hurl.dev\"><b>Hurl</b></a> - is a command line tool to run and test HTTP requests with plain text.<br>\n</p>\n\n##### :black_small_square: SSL\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.openssl.org/\"><b>openssl</b></a> - is a robust, commercial-grade, and full-featured toolkit for the TLS and SSL protocols.<br>\n&nbsp;&nbsp; <a href=\"https://gnutls.org/manual/html_node/gnutls_002dcli-Invocation.html\"><b>gnutls-cli</b></a> - client program to set up a TLS connection to some other computer.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/nabla-c0d3/sslyze\"><b>sslyze\n</b></a> - fast and powerful SSL/TLS server scanning library.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rbsec/sslscan\"><b>sslscan</b></a> - tests SSL/TLS enabled services to discover supported cipher suites.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/drwetter/testssl.sh\"><b>testssl.sh</b></a> - testing TLS/SSL encryption anywhere on any port.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mozilla/cipherscan\"><b>cipherscan</b></a> - a very simple way to find out which SSL ciphersuites are supported by a target.<br>\n&nbsp;&nbsp; <a href=\"http://www.tarsnap.com/spiped.html\"><b>spiped</b></a> - is a utility for creating symmetrically encrypted and authenticated pipes between socket addresses.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/certbot/certbot\"><b>Certbot</b></a> - is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/FiloSottile/mkcert\"><b>mkcert</b></a> - simple zero-config tool to make locally trusted development certificates with any names you'd like.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/square/certstrap\"><b>certstrap</b></a> - tools to bootstrap CAs, certificate requests, and signed certificates.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/yassineaboukir/sublert\"><b>Sublert</b></a> - is a security and reconnaissance tool to automatically monitor new subdomains.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/trimstray/mkchain\"><b>mkchain</b></a> - open source tool to help you build a valid SSL certificate chain.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Matty9191/ssl-cert-check\"><b>ssl-cert-check</b></a> - SSL Certification Expiration Checker.<br>\n</p>\n\n##### :black_small_square: Security\n\n<p>\n&nbsp;&nbsp; <a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/5/html/deployment_guide/ch-selinux\"><b>SELinux</b></a> - provides a flexible Mandatory Access Control (MAC) system built into the Linux kernel.<br>\n&nbsp;&nbsp; <a href=\"https://wiki.ubuntu.com/AppArmor\"><b>AppArmor</b></a> - proactively protects the operating system and applications from external or internal threats.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/grapheneX/grapheneX\"><b>grapheneX</b></a> - Automated System Hardening Framework.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dev-sec/\"><b>DevSec Hardening Framework</b></a> - Security + DevOps: Automatic Server Hardening.<br>\n</p>\n\n##### :black_small_square: Auditing Tools\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.ossec.net/\"><b>ossec</b></a> - actively monitoring all aspects of system activity with file integrity monitoring.<br>\n&nbsp;&nbsp; <a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/chap-system_auditing\"><b>auditd</b></a> - provides a way to track security-relevant information on your system.<br>\n&nbsp;&nbsp; <a href=\"https://www.nongnu.org/tiger/\"><b>Tiger</b></a> - is a security tool that can be use both as a security audit and intrusion detection system.<br>\n&nbsp;&nbsp; <a href=\"https://cisofy.com/lynis/\"><b>Lynis</b></a> - battle-tested security tool for systems running Linux, macOS, or Unix-based operating system.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rebootuser/LinEnum\"><b>LinEnum</b></a> - scripted Local Linux Enumeration & Privilege Escalation Checks.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/installation/rkhunter\"><b>Rkhunter</b></a> - scanner tool for Linux systems that scans backdoors, rootkits and local exploits on your systems.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/hasherezade/pe-sieve\"><b>PE-sieve</b></a> - is a light-weight tool that helps to detect malware running on the system.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite\"><b>PEASS</b></a> - privilege escalation tools for Windows and Linux/Unix and MacOS.<br>\n</p>\n\n##### :black_small_square: System Diagnostics/Debuggers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/strace/strace\"><b>strace</b></a> - diagnostic, debugging and instructional userspace utility for Linux.<br>\n&nbsp;&nbsp; <a href=\"http://dtrace.org/blogs/about/\"><b>DTrace</b></a> - is a performance analysis and troubleshooting tool.<br>\n&nbsp;&nbsp; <a href=\"https://en.wikipedia.org/wiki/Ltrace\"><b>ltrace</b></a> - is a library call tracer, used to trace calls made by programs to library functions.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/brainsmoke/ptrace-burrito\"><b>ptrace-burrito</b></a> - is a friendly wrapper around ptrace.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/brendangregg/perf-tools\"><b>perf-tools</b></a> - performance analysis tools based on Linux perf_events (aka perf) and ftrace.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/iovisor/bpftrace\"><b>bpftrace</b></a> - high-level tracing language for Linux eBPF.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/draios/sysdig\"><b>sysdig</b></a> - system exploration and troubleshooting tool with first class support for containers.<br>\n&nbsp;&nbsp; <a href=\"http://www.valgrind.org/\"><b>Valgrind</b></a> - is an instrumentation framework for building dynamic analysis tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/gperftools/gperftools\"><b>gperftools</b></a> - high-performance multi-threaded malloc() implementation, plus some performance analysis tools.<br>\n&nbsp;&nbsp; <a href=\"https://nicolargo.github.io/glances/\"><b>glances</b></a> - cross-platform system monitoring tool written in Python.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/hishamhm/htop\"><b>htop</b></a> - interactive text-mode process viewer for Unix systems. It aims to be a better 'top'.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/aristocratos/bashtop\"><b>bashtop</b></a> - Linux resource monitor written in pure Bash.<br>\n&nbsp;&nbsp; <a href=\"http://nmon.sourceforge.net/pmwiki.php\"><b>nmon</b></a> - a single executable for performance monitoring and data analysis.<br>\n&nbsp;&nbsp; <a href=\"https://www.atoptool.nl/\"><b>atop</b></a> - ASCII performance monitor. Includes statistics for CPU, memory, disk, swap, network, and processes.<br>\n&nbsp;&nbsp; <a href=\"https://en.wikipedia.org/wiki/Lsof\"><b>lsof</b></a> - displays in its output information about files that are opened by processes.<br>\n&nbsp;&nbsp; <a href=\"http://www.brendangregg.com/flamegraphs.html\"><b>FlameGraph</b></a> - stack trace visualizer.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/zevv/lsofgraph\"><b>lsofgraph</b></a> - convert Unix lsof output to a graph showing FIFO and UNIX interprocess communication.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mozilla/rr\"><b>rr</b></a> - is a lightweight tool for recording, replaying and debugging execution of applications.<br>\n&nbsp;&nbsp; <a href=\"https://pcp.io/index.html\"><b>Performance Co-Pilot</b></a> - a system performance analysis toolkit.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/sharkdp/hexyl\"><b>hexyl</b></a> - a command-line hex viewer.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/p403n1x87/austin\"><b>Austin</b></a> - Python frame stack sampler for CPython.<br>\n</p>\n\n##### :black_small_square: Log Analyzers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/rcoh/angle-grinder\"><b>angle-grinder</b></a> - slice and dice log files on the command line.<br>\n&nbsp;&nbsp; <a href=\"https://lnav.org\"><b>lnav</b></a> - log file navigator with search and automatic refresh.<br>\n&nbsp;&nbsp; <a href=\"https://goaccess.io/\"><b>GoAccess</b></a> - real-time web log analyzer and interactive viewer that runs in a terminal.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/lebinh/ngxtop\"><b>ngxtop</b></a> - real-time metrics for nginx server.<br>\n</p>\n\n##### :black_small_square: Databases\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/xo/usql\"><b>usql</b></a> - universal command-line interface for SQL databases.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dbcli/pgcli\"><b>pgcli</b></a> - postgres CLI with autocompletion and syntax highlighting.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dbcli/mycli\"><b>mycli</b></a> - terminal client for MySQL with autocompletion and syntax highlighting.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dbcli/litecli\"><b>litecli</b></a> - SQLite CLI with autocompletion and syntax highlighting.<br>\n  &nbsp;&nbsp; <a href=\"https://github.com/dbcli/mssql-cli\"><b>mssql-cli</b></a> - SQL Server CLI with autocompletion and syntax highlighting.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/osquery/osquery\"><b>OSQuery</b></a> - is a SQL powered operating system instrumentation, monitoring, and analytics framework.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ankane/pgsync\"><b>pgsync</b></a> - sync data from one Postgres database to another.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/laixintao/iredis\"><b>iredis</b></a> - a terminal client for redis with autocompletion and syntax highlighting.<br>\n&nbsp;&nbsp; <a href=\"https://www.schemacrawler.com/diagramming.html\"><b>SchemaCrawler</b></a> - generates an E-R diagram of your database.<br>\n</p>\n\n##### :black_small_square: TOR\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/GouveaHeitor/nipe\"><b>Nipe</b></a> - script to make Tor Network your default gateway.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/trimstray/multitor\"><b>multitor</b></a> - a tool that lets you create multiple TOR instances with a load-balancing.<br>\n</p>\n\n##### :black_small_square: Messengers/IRC Clients\n\n<p>\n&nbsp;&nbsp; <a href=\"https://irssi.org\"><b>Irssi</b></a> - is a free open source terminal based IRC client.<br>\n&nbsp;&nbsp; <a href=\"https://weechat.org/\"><b>WeeChat</b></a> - is an extremely extensible and lightweight IRC client.<br>\n</p>\n\n##### :black_small_square: Productivity\n\n<p>\n&nbsp;&nbsp; <a href=\"https://taskwarrior.org\"><b>taskwarrior</b></a> - task management system, todo list <br>\n</p>\n\n##### :black_small_square: Other\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/skx/sysadmin-util\"><b>sysadmin-util</b></a> - tools for Linux/Unix sysadmins.<br>\n&nbsp;&nbsp; <a href=\"http://inotify.aiken.cz/\"><b>incron</b></a> - is an inode-based filesystem notification technology.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/axkibe/lsyncd\"><b>lsyncd</b></a> - synchronizes local directories with remote targets (Live Syncing Daemon).<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rgburke/grv\"><b>GRV</b></a> - is a terminal based interface for viewing Git repositories.<br>\n&nbsp;&nbsp; <a href=\"https://jonas.github.io/tig/\"><b>Tig</b></a> - text-mode interface for Git.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/tldr-pages/tldr\"><b>tldr</b></a> - simplified and community-driven man pages.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mholt/archiver\"><b>archiver</b></a> - easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz, .tar.lz4, .tar.sz, and .rar.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/tj/commander.js\"><b>commander.js</b></a> - minimal CLI creator in JavaScript.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/tomnomnom/gron\"><b>gron</b></a> - make JSON greppable!<br>\n&nbsp;&nbsp; <a href=\"https://github.com/itchyny/bed\"><b>bed</b></a> - binary editor written in Go.<br>\n</p>\n\n#### GUI Tools &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: Terminal emulators\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/Guake/guake\"><b>Guake</b></a> - is a dropdown terminal made for the GNOME desktop environment.<br>\n&nbsp;&nbsp; <a href=\"https://gnometerminator.blogspot.com/p/introduction.html\"><b>Terminator</b></a> - is based on GNOME Terminal, useful features for sysadmins and other users.<br>\n&nbsp;&nbsp; <a href=\"https://sw.kovidgoyal.net/kitty/\"><b>Kitty</b></a> - is a GPU based terminal emulator that supports smooth scrolling and images.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/alacritty/alacritty\"><b>Alacritty</b></a> - is a fast, cross-platform, OpenGL terminal emulator.<br>\n</p>\n\n##### :black_small_square: Network\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.wireshark.org/\"><b>Wireshark</b></a> - is the world’s foremost and widely-used network protocol analyzer.<br>\n&nbsp;&nbsp; <a href=\"https://www.ettercap-project.org/\"><b>Ettercap</b></a> - is a comprehensive network monitor tool.<br>\n&nbsp;&nbsp; <a href=\"https://etherape.sourceforge.io/\"><b>EtherApe</b></a> - is a graphical network monitoring solution.<br>\n&nbsp;&nbsp; <a href=\"https://packetsender.com/\"><b>Packet Sender</b></a> - is a networking utility for packet generation and built-in UDP/TCP/SSL client and servers.<br>\n&nbsp;&nbsp; <a href=\"https://ostinato.org/\"><b>Ostinato</b></a> - is a packet crafter and traffic generator.<br>\n&nbsp;&nbsp; <a href=\"https://jmeter.apache.org/\"><b>JMeter™</b></a> - open source software to load test functional behavior and measure performance.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/locustio/locust\"><b>locust</b></a> - scalable user load testing tool written in Python.<br>\n</p>\n\n##### :black_small_square: Browsers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.torproject.org/\"><b>TOR Browser</b></a> - protect your privacy and defend yourself against network surveillance and traffic analysis.<br>\n</p>\n\n##### :black_small_square: Password Managers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://keepassxc.org/\"><b>KeePassXC</b></a> - store your passwords safely and auto-type them into your everyday websites and apps.<br>\n&nbsp;&nbsp; <a href=\"https://bitwarden.com/\"><b>Bitwarden</b></a> - open source password manager with built-in sync.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dani-garcia/vaultwarden/\"><b>Vaultwarden</b></a> - unofficial Bitwarden compatible server written in Rust.<br>\n</p>\n\n##### :black_small_square: Messengers/IRC Clients\n\n<p>\n&nbsp;&nbsp; <a href=\"https://hexchat.github.io/index.html\"><b>HexChat</b></a> - is an IRC client based on XChat.<br>\n&nbsp;&nbsp; <a href=\"https://pidgin.im/\"><b>Pidgin</b></a> - is an easy to use and free chat client used by millions.<br>\n</p>\n\n##### :black_small_square: Messengers (end-to-end encryption)\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.signal.org/\"><b>Signal</b></a> - is an encrypted communications app.<br>\n&nbsp;&nbsp; <a href=\"https://wire.com/en/\"><b>Wire</b></a> - secure messaging, file sharing, voice calls and video conferences.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/prof7bit/TorChat\"><b>TorChat</b></a> - decentralized anonymous instant messenger on top of Tor Hidden Services.<br>\n&nbsp;&nbsp; <a href=\"https://matrix.org/\"><b>Matrix</b></a> - an open network for secure, decentralized, real-time communication.<br>\n</p>\n\n##### :black_small_square: Text editors\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.sublimetext.com/3\"><b>Sublime Text</b></a> - is a lightweight, cross-platform code editor known for its speed, ease of use.<br>\n&nbsp;&nbsp; <a href=\"https://code.visualstudio.com/\"><b>Visual Studio Code</b></a> - an open-source and free source code editor developed by Microsoft.<br>\n&nbsp;&nbsp; <a href=\"https://atom.io/\"><b>Atom</b></a> - a hackable text editor for the 21st Century.<br>\n</p>\n\n#### Web Tools &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: Browsers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.ssllabs.com/ssltest/viewMyClient.html\"><b>SSL/TLS Capabilities of Your Browser</b></a> - test your browser's SSL implementation.<br>\n&nbsp;&nbsp; <a href=\"https://caniuse.com/\"><b>Can I use</b></a> - provides up-to-date browser support tables for support of front-end web technologies.<br>\n&nbsp;&nbsp; <a href=\"https://panopticlick.eff.org/\"><b>Panopticlick 3.0</b></a> - is your browser safe against tracking?<br>\n&nbsp;&nbsp; <a href=\"https://privacy.net/analyzer/\"><b>Privacy Analyzer</b></a> - see what data is exposed from your browser.<br>\n&nbsp;&nbsp; <a href=\"https://browserleaks.com/\"><b>Web Browser Security</b></a> - it's all about Web Browser fingerprinting.<br>\n&nbsp;&nbsp; <a href=\"https://www.howsmyssl.com/\"><b>How's My SSL?</b></a> - help a web server developer learn what real world TLS clients were capable of.<br>\n&nbsp;&nbsp; <a href=\"https://suche.org/sslClientInfo\"><b>sslClientInfo</b></a> - client test (incl TLSv1.3 information).<br>\n</p>\n\n##### :black_small_square: SSL/Security\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.ssllabs.com/ssltest/\"><b>SSLLabs Server Test</b></a> - performs a deep analysis of the configuration of any SSL web server.<br>\n&nbsp;&nbsp; <a href=\"https://dev.ssllabs.com/ssltest/\"><b>SSLLabs Server Test (DEV)</b></a> - performs a deep analysis of the configuration of any SSL web server.<br>\n&nbsp;&nbsp; <a href=\"https://www.immuniweb.com/ssl/\"><b>ImmuniWeb® SSLScan</b></a> - test SSL/TLS (PCI DSS, HIPAA and NIST).<br>\n&nbsp;&nbsp; <a href=\"https://www.jitbit.com/sslcheck/\"><b>SSL Check</b></a> - scan your website for non-secure content.<br>\n&nbsp;&nbsp; <a href=\"http://www.ssltools.com\"><b>SSL Scanner</b></a> - analyze website security.<br>\n&nbsp;&nbsp; <a href=\"https://cryptcheck.fr/\"><b>CryptCheck</b></a> - test your TLS server configuration (e.g. ciphers).<br>\n&nbsp;&nbsp; <a href=\"https://urlscan.io/\"><b>urlscan.io</b></a> - service to scan and analyse websites.<br>\n&nbsp;&nbsp; <a href=\"https://report-uri.com/home/tools\"><b>Report URI</b></a> - monitoring security policies like CSP and HPKP.<br>\n&nbsp;&nbsp; <a href=\"https://csp-evaluator.withgoogle.com/\"><b>CSP Evaluator</b></a> - allows developers and security experts to check if a Content Security Policy.<br>\n&nbsp;&nbsp; <a href=\"https://uselesscsp.com/\"><b>Useless CSP</b></a> - public list about CSP in some big players (might make them care a bit more).<br>\n&nbsp;&nbsp; <a href=\"https://whynohttps.com/\"><b>Why No HTTPS?</b></a> - top 100 websites by Alexa rank not automatically redirecting insecure requests.<br>\n&nbsp;&nbsp; <a href=\"https://ciphersuite.info/\"><b>TLS Cipher Suite Search</b></a>- cipher suite search engine.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/RaymiiOrg/cipherli.st\"><b>cipherli.st</b></a> - strong ciphers for Apache, Nginx, Lighttpd, and more.<b>*</b><br>\n&nbsp;&nbsp; <a href=\"https://2ton.com.au/dhtool/\"><b>dhtool</b></a> - public Diffie-Hellman parameter service/tool.<br>\n&nbsp;&nbsp; <a href=\"https://badssl.com/\"><b>badssl.com</b></a> - memorable site for testing clients against bad SSL configs.<br>\n&nbsp;&nbsp; <a href=\"https://tlsfun.de/\"><b>tlsfun.de</b></a> - registered for various tests regarding the TLS/SSL protocol.<br>\n&nbsp;&nbsp; <a href=\"https://sslmate.com/caa/\"><b>CAA Record Helper</b></a> - generate a CAA policy.<br>\n&nbsp;&nbsp; <a href=\"https://ccadb.org/resources\"><b>Common CA Database</b></a> - repository of information about CAs, and their root and intermediate certificates.<br>\n&nbsp;&nbsp; <a href=\"https://certstream.calidog.io/\"><b>CERTSTREAM</b></a> - real-time certificate transparency log update stream.<br>\n&nbsp;&nbsp; <a href=\"https://crt.sh/\"><b>crt.sh</b></a> - discovers certificates by continually monitoring all of the publicly known CT.<br>\n&nbsp;&nbsp; <a href=\"https://www.hardenize.com/\"><b>Hardenize</b></a> - deploy the security standards.<br>\n&nbsp;&nbsp; <a href=\"https://cryptcheck.fr/suite/\"><b>Cipher suite compatibility</b></a> - test TLS cipher suite compatibility.<br>\n&nbsp;&nbsp; <a href=\"https://www.urlvoid.com/\"><b>urlvoid</b></a> - this service helps you detect potentially malicious websites.<br>\n&nbsp;&nbsp; <a href=\"https://securitytxt.org/\"><b>security.txt</b></a> - a proposed standard (generator) which allows websites to define security policies.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mozilla/ssl-config-generator\"><b>ssl-config-generator</b></a> - help you follow the Mozilla Server Side TLS configuration guidelines.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mjol/TLScan\"><b>TLScan</b></a> - pure python, SSL/TLS protocol and cipher scanner/enumerator.<br>\n</p>\n\n##### :black_small_square: HTTP Headers & Web Linters\n\n<p>\n&nbsp;&nbsp; <a href=\"https://securityheaders.com/\"><b>Security Headers</b></a> - analyse the HTTP response headers (with rating system to the results).<br>\n&nbsp;&nbsp; <a href=\"https://observatory.mozilla.org/\"><b>Observatory by Mozilla</b></a> - set of tools to analyze your website.<br>\n&nbsp;&nbsp; <a href=\"https://webhint.io/\"><b>webhint</b></a> - is a linting tool that will help you with your site's accessibility, speed, security, and more.<br>\n</p>\n\n##### :black_small_square: DNS\n\n<p>\n&nbsp;&nbsp; <a href=\"http://viewdns.info/\"><b>ViewDNS</b></a> - one source for free DNS related tools and information.<br>\n&nbsp;&nbsp; <a href=\"https://dnslookup.org/\"><b>DNSLookup</b></a> - is an advanced DNS lookup tool.<br>\n&nbsp;&nbsp; <a href=\"https://dnslytics.com/\"><b>DNSlytics</b></a> - online DNS investigation tool.<br>\n&nbsp;&nbsp; <a href=\"https://dnsspy.io/\"><b>DNS Spy</b></a> - monitor, validate and verify your DNS configurations.<br>\n&nbsp;&nbsp; <a href=\"https://zonemaster.iis.se/en/\"><b>Zonemaster</b></a> - helps you to control how your DNS works.<br>\n&nbsp;&nbsp; <a href=\"http://leafdns.com/\"><b>Leaf DNS</b></a> - comprehensive DNS tester.<br>\n&nbsp;&nbsp; <a href=\"https://findsubdomains.com/\"><b>Find subdomains online</b></a> - find subdomains for security assessment penetration test.<br>\n&nbsp;&nbsp; <a href=\"https://dnsdumpster.com/\"><b>DNSdumpster</b></a> - dns recon & research, find & lookup dns records.<br>\n&nbsp;&nbsp; <a href=\"https://dnstable.com/\"><b>DNS Table online</b></a> - search for DNS records by domain, IP, CIDR, ISP.<br>\n&nbsp;&nbsp; <a href=\"https://intodns.com/\"><b>intoDNS</b></a> - DNS and mail server health checker.<br>\n&nbsp;&nbsp; <a href=\"http://www.zonecut.net/dns/\"><b>DNS Bajaj</b></a> - check the delegation of your domain.<br>\n&nbsp;&nbsp; <a href=\"https://www.buddyns.com/delegation-lab/\"><b>BuddyDNS Delegation LAB</b></a> - check, trace and visualize delegation of your domain.<br>\n&nbsp;&nbsp; <a href=\"https://dnssec-debugger.verisignlabs.com/\"><b>dnssec-debugger</b></a> - DS or DNSKEY records validator.<br>\n&nbsp;&nbsp; <a href=\"http://ptrarchive.com/\"><b>PTRarchive.com</b></a> - this site is responsible for the safekeeping of historical reverse DNS records.<br>\n&nbsp;&nbsp; <a href=\"http://xip.io/\"><b>xip.io</b></a> - wildcard DNS for everyone.<br>\n&nbsp;&nbsp; <a href=\"https://nip.io/\"><b>nip.io</b></a> - dead simple wildcard DNS for any IP Address.<br>\n&nbsp;&nbsp; <a href=\"https://ceipam.eu/en/dnslookup.php\"><b>dnslookup (ceipam)</b></a> - one of the best DNS propagation checker (and not only).<br>\n&nbsp;&nbsp; <a href=\"https://whatsmydns.com\"><b>What's My DNS</b></a> - DNS propagation checking tool.<br>\n&nbsp;&nbsp; <a href=\"https://blog.erbbysam.com/index.php/2019/02/09/dnsgrep/\"><b>DNSGrep</b></a> - quickly searching large DNS datasets.<br>\n</p>\n\n##### :black_small_square: Mail\n\n<p>\n&nbsp;&nbsp; <a href=\"https://luxsci.com/smtp-tls-checker\"><b>smtp-tls-checker</b></a> - check an email domain for SMTP TLS support.<br>\n&nbsp;&nbsp; <a href=\"https://mxtoolbox.com/SuperTool.aspx\"><b>MX Toolbox</b></a> - all of your MX record, DNS, blacklist and SMTP diagnostics in one integrated tool.<br>\n&nbsp;&nbsp; <a href=\"https://www.checktls.com/index.html\"><b>Secure Email</b></a> - complete email test tools for email technicians.<br>\n&nbsp;&nbsp; <a href=\"http://www.blacklistalert.org/\"><b>blacklistalert</b></a> - checks to see if your domain is on a Real Time Spam Blacklist.<br>\n&nbsp;&nbsp; <a href=\"http://multirbl.valli.org/\"><b>MultiRBL</b></a> - complete IP check for sending Mailservers.<br>\n&nbsp;&nbsp; <a href=\"https://dkimvalidator.com/\"><b>DKIM SPF & Spam Assassin Validator</b></a> - checks mail authentication and scores messages with Spam Assassin.<br>\n</p>\n\n##### :black_small_square: Encoders/Decoders and Regex testing\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.url-encode-decode.com/\"><b>URL Encode/Decode</b></a> - tool from above to either encode or decode a string of text.<br>\n&nbsp;&nbsp; <a href=\"https://uncoder.io/\"><b>Uncoder</b></a> - the online translator for search queries on log data.<br>\n&nbsp;&nbsp; <a href=\"https://regex101.com/\"><b>Regex101</b></a> - online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript.<br>\n&nbsp;&nbsp; <a href=\"https://regexr.com/\"><b>RegExr</b></a> - online tool to learn, build, & test Regular Expressions (RegEx / RegExp).<br>\n&nbsp;&nbsp; <a href=\"https://www.regextester.com/\"><b>RegEx Testing</b></a> - online regex testing tool.<br>\n&nbsp;&nbsp; <a href=\"https://www.regexpal.com/\"><b>RegEx Pal</b></a> - online regex testing tool + other tools.<br>\n&nbsp;&nbsp; <a href=\"https://gchq.github.io/CyberChef/\"><b>The Cyber Swiss Army Knife</b></a> - a web app for encryption, encoding, compression and data analysis.<br>\n</p>\n\n##### :black_small_square: Net-tools\n\n<p>\n&nbsp;&nbsp; <a href=\"https://toolbar.netcraft.com/site_report\"><b>Netcraft</b></a> - detailed report about the site, helping you to make informed choices about their integrity.<b>*</b><br>\n&nbsp;&nbsp; <a href=\"https://atlas.ripe.net/\"><b>RIPE NCC Atlas</b></a> - a global, open, distributed Internet measurement platform.<br>\n&nbsp;&nbsp; <a href=\"https://www.robtex.com/\"><b>Robtex</b></a> - uses various sources to gather public information about IP numbers, domain names, host names, etc.<br>\n&nbsp;&nbsp; <a href=\"https://securitytrails.com/\"><b>Security Trails</b></a> - APIs for Security Companies, Researchers and Teams.<br>\n&nbsp;&nbsp; <a href=\"https://tools.keycdn.com/curl\"><b>Online Curl</b></a> - curl test, analyze HTTP Response Headers.<br>\n&nbsp;&nbsp; <a href=\"https://extendsclass.com/\"><b>Online Tools for Developers</b></a> - HTTP API tools, testers, encoders, converters, formatters, and other tools.<br>\n&nbsp;&nbsp; <a href=\"https://ping.eu/\"><b>Ping.eu</b></a> - online Ping, Traceroute, DNS lookup, WHOIS and others.<br>\n&nbsp;&nbsp; <a href=\"https://network-tools.com/\"><b>Network-Tools</b></a> - network tools for webmasters, IT technicians & geeks.<br>\n&nbsp;&nbsp; <a href=\"https://bgpview.io/\"><b>BGPview</b></a> - search for any ASN, IP, Prefix or Resource name.<br>\n&nbsp;&nbsp; <a href=\"https://isbgpsafeyet.com/\"><b>Is BGP safe yet?</b></a> - check BGP (RPKI) security of ISPs and other major Internet players.<br>\n&nbsp;&nbsp; <a href=\"https://riseup.net/\"><b>Riseup</b></a> - provides online communication tools for people and groups working on liberatory social change.<br>\n&nbsp;&nbsp; <a href=\"https://www.virustotal.com/gui/home/upload\"><b>VirusTotal</b></a> - analyze suspicious files and URLs to detect types of malware.<br>\n</p>\n\n##### :black_small_square: Privacy\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.privacyguides.org/\"><b>privacyguides.org</b></a> - provides knowledge and tools to protect your privacy against global mass surveillance.<br>\n&nbsp;&nbsp; <a href=\"https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Test+Servers\"><b>DNS Privacy Test Servers</b></a> - DNS privacy recursive servers list (with a 'no logging' policy).<br>\n</p>\n\n##### :black_small_square: Code parsers/playgrounds\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.shellcheck.net/\"><b>ShellCheck</b></a> - finds bugs in your shell scripts.<br>\n&nbsp;&nbsp; <a href=\"https://explainshell.com/\"><b>explainshell</b></a> - get interactive help texts for shell commands.<br>\n&nbsp;&nbsp; <a href=\"https://jsbin.com/?html,output\"><b>jsbin</b></a> - live pastebin for HTML, CSS & JavaScript, and more.<br>\n&nbsp;&nbsp; <a href=\"https://codesandbox.io/\"><b>CodeSandbox</b></a> - online code editor for web application development.<br>\n&nbsp;&nbsp; <a href=\"http://sandbox.onlinephpfunctions.com/\"><b>PHP Sandbox</b></a> - test your PHP code with this code tester.<br>\n&nbsp;&nbsp; <a href=\"https://www.repl.it/\"><b>Repl.it</b></a> - an instant IDE to learn, build, collaborate, and host all in one place.<br>\n&nbsp;&nbsp; <a href=\"http://www.vclfiddle.net/\"><b>vclFiddle</b></a> - is an online tool for experimenting with the Varnish Cache VCL.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/hadolint/hadolint\"><b>Haskell Dockerfile Linter</b></a> - a smarter Dockerfile linter that helps you build best practice Docker images.<br>\n</p>\n\n##### :black_small_square: Performance\n\n<p>\n&nbsp;&nbsp; <a href=\"https://gtmetrix.com/\"><b>GTmetrix</b></a> - analyze your site’s speed and make it faster.<br>\n&nbsp;&nbsp; <a href=\"https://performance.sucuri.net/\"><b>Sucuri loadtimetester</b></a> - test here the\nperformance of any of your sites from across the globe.<br>\n&nbsp;&nbsp; <a href=\"https://tools.pingdom.com/\"><b>Pingdom Tools</b></a> - analyze your site’s speed around the world.<br>\n&nbsp;&nbsp; <a href=\"https://pingme.io/\"><b>PingMe.io</b></a> - run website latency tests across multiple geographic regions.<br>\n&nbsp;&nbsp; <a href=\"https://developers.google.com/speed/pagespeed/insights/\"><b>PageSpeed Insights</b></a> - analyze your site’s speed and make it faster.<br>\n&nbsp;&nbsp; <a href=\"https://web.dev/\"><b>web.dev</b></a> - helps developers like you learn and apply the web's modern capabilities to your own sites and apps.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/GoogleChrome/lighthouse\"><b>Lighthouse</b></a> - automated auditing, performance metrics, and best practices for the web.<br>\n</p>\n\n##### :black_small_square: Mass scanners (search engines)\n\n<p>\n&nbsp;&nbsp; <a href=\"https://censys.io/\"><b>Censys</b></a> - platform that helps information security practitioners discover, monitor, and analyze devices.<br>\n&nbsp;&nbsp; <a href=\"https://www.shodan.io/\"><b>Shodan</b></a> - the world's first search engine for Internet-connected devices.<br>\n&nbsp;&nbsp; <a href=\"https://2000.shodan.io/#/\"><b>Shodan 2000</b></a> - this tool looks for randomly generated data from Shodan.<br>\n&nbsp;&nbsp; <a href=\"https://viz.greynoise.io/table\"><b>GreyNoise</b></a> - mass scanner such as Shodan and Censys.<br>\n&nbsp;&nbsp; <a href=\"https://www.zoomeye.org/\"><b>ZoomEye</b></a> - search engine for cyberspace that lets the user find specific network components.<br>\n&nbsp;&nbsp; <a href=\"https://netograph.io/\"><b>netograph</b></a> - tools to monitor and understand deep structure of the web.<br>\n&nbsp;&nbsp; <a href=\"https://fofa.so/\"><b>FOFA</b></a> - is a cyberspace search engine.<br>\n&nbsp;&nbsp; <a href=\"https://www.onyphe.io/\"><b>onyphe</b></a> - is a search engine for open-source and cyber threat intelligence data collected.<br>\n&nbsp;&nbsp; <a href=\"https://intelx.io/\"><b>IntelligenceX</b></a> - is a search engine and data archive.<br>\n&nbsp;&nbsp; <a href=\"https://app.binaryedge.io/\"><b>binaryedge</b></a> - it scan the entire internet space and create real-time threat intelligence streams and reports.<br>\n&nbsp;&nbsp; <a href=\"https://spyse.com/\"><b>Spyse</b></a> - Internet assets registry: networks, threats, web objects, etc.<br>\n&nbsp;&nbsp; <a href=\"https://wigle.net/\"><b>wigle</b></a> - is a submission-based catalog of wireless networks. All the networks. Found by Everyone.<br>\n&nbsp;&nbsp; <a href=\"https://publicwww.com/\"><b>PublicWWW</b></a> - find any alphanumeric snippet, signature or keyword in the web pages HTML, JS and CSS code.<br>\n&nbsp;&nbsp; <a href=\"https://inteltechniques.com/index.html\"><b>IntelTechniques</b></a> - this repository contains hundreds of online search utilities.<br>\n&nbsp;&nbsp; <a href=\"https://hunter.io/\"><b>hunter</b></a> - lets you find email addresses in seconds and connect with the people that matter for your business.<br>\n&nbsp;&nbsp; <a href=\"https://ghostproject.fr/\"><b>GhostProject?</b></a> - search by full email address or username.<br>\n&nbsp;&nbsp; <a href=\"https://www.databreaches.live/\"><b>databreaches</b></a> - was my email affected by data breach?<br>\n&nbsp;&nbsp; <a href=\"https://weleakinfo.com\"><b>We Leak Info</b></a> - world's fastest and largest data breach search engine.<br>\n&nbsp;&nbsp; <a href=\"https://pulsedive.com/\"><b>Pulsedive</b></a> - scans of malicious URLs, IPs, and domains, including port scans and web requests.<br>\n&nbsp;&nbsp; <a href=\"https://buckets.grayhatwarfare.com/\"><b>Buckets by Grayhatwarfar</b></a> - database with public search for Open Amazon S3 Buckets and their contents.<br>\n&nbsp;&nbsp; <a href=\"https://vigilante.pw/\"><b>Vigilante.pw</b></a> - the breached database directory.<br>\n&nbsp;&nbsp; <a href=\"https://builtwith.com/\"><b>builtwith</b></a> - find out what websites are built with.<br>\n&nbsp;&nbsp; <a href=\"https://nerdydata.com/\"><b>NerdyData</b></a> - search the web's source code for technologies, across millions of sites.<br>\n&nbsp;&nbsp; <a href=\"http://zorexeye.com/\"><b>zorexeye</b></a> - search for sites, images, apps, softwares & more.<br>\n&nbsp;&nbsp; <a href=\"https://www.mmnt.net/\"><b>Mamont's open FTP Index</b></a> - if a target has an open FTP site with accessible content it will be listed here.<br>\n&nbsp;&nbsp; <a href=\"https://osintframework.com/\"><b>OSINT Framework</b></a> - focused on gathering information from free tools or resources.<br>\n&nbsp;&nbsp; <a href=\"https://www.maltiverse.com/search\"><b>maltiverse</b></a> - is a service oriented to cybersecurity analysts.<br>\n&nbsp;&nbsp; <a href=\"https://leakedsource.ru/main/\"><b>Leaked Source</b></a> - is a collaboration of data found online in the form of a lookup.<br>\n&nbsp;&nbsp; <a href=\"https://search.weleakinfo.com/\"><b>We Leak Info</b></a> - to help everyday individuals secure their online life, avoiding getting hacked.<br>\n&nbsp;&nbsp; <a href=\"https://pipl.com/\"><b>pipl</b></a> - is the place to find the person behind the email address, social username or phone number.<br>\n&nbsp;&nbsp; <a href=\"https://abuse.ch/\"><b>abuse.ch</b></a> - is operated by a random swiss guy fighting malware for non-profit.<br>\n&nbsp;&nbsp; <a href=\"http://malc0de.com/database/\"><b>malc0de</b></a> - malware search engine.<br>\n&nbsp;&nbsp; <a href=\"https://cybercrime-tracker.net/index.php\"><b>Cybercrime Tracker</b></a> - monitors and tracks various malware families that are used to perpetrate cyber crimes.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/eth0izzle/shhgit/\"><b>shhgit</b></a> - find GitHub secrets in real time.<br>\n&nbsp;&nbsp; <a href=\"https://searchcode.com/\"><b>searchcode</b></a> - helping you find real world examples of functions, API's and libraries.<br>\n&nbsp;&nbsp; <a href=\"http://www.insecam.org/\"><b>Insecam</b></a> - the world biggest directory of online surveillance security cameras.<br>\n&nbsp;&nbsp; <a href=\"http://index-of.es/\"><b>index-of</b></a> - contains great stuff like: security, hacking, reverse engineering, cryptography, programming etc.<br>\n&nbsp;&nbsp; <a href=\"https://opendata.rapid7.com/\"><b>Rapid7 Labs Open Data</b></a> - is a great resources of datasets from Project Sonar.<br>\n&nbsp;&nbsp; <a href=\"https://webtechsurvey.com/common-response-headers\"><b>Common Response Headers</b></a> - the largest database of HTTP response headers.<br>\n&nbsp;&nbsp; <a href=\"https://labs.inquest.net\"><b>InQuest Labs</b></a> - InQuest Labs is an open, interactive, and API driven data portal for security researchers.<br>\n</p>\n\n##### :black_small_square: Generators\n\n<p>\n&nbsp;&nbsp; <a href=\"https://thispersondoesnotexist.com/\"><b>thispersondoesnotexist</b></a> - generate fake faces in one click - endless possibilities.<br>\n&nbsp;&nbsp; <a href=\"https://generated.photos\"><b>AI Generated Photos</b></a> - 100.000 AI generated faces.<br>\n&nbsp;&nbsp; <a href=\"https://www.fakenamegenerator.com/\"><b>fakenamegenerator</b></a> - your randomly generated identity.<br>\n&nbsp;&nbsp; <a href=\"https://tools.intigriti.io/redirector/\"><b>Intigriti Redirector</b></a> - open redirect/SSRF payload generator.<br>\n</p>\n\n##### :black_small_square: Passwords\n\n<p>\n&nbsp;&nbsp; <a href=\"https://haveibeenpwned.com/\"><b>have i been pwned?</b></a> - check if you have an account that has been compromised in a data breach.<br>\n&nbsp;&nbsp; <a href=\"https://www.dehashed.com/\"><b>dehashed</b></a> - is a hacked database search engine.<br>\n&nbsp;&nbsp; <a href=\"https://leakedsource.ru/\"><b>Leaked Source</b></a> - is a collaboration of data found online in the form of a lookup.<br>\n</p>\n\n##### :black_small_square: CVE/Exploits databases\n\n<p>\n&nbsp;&nbsp; <a href=\"https://cve.mitre.org/\"><b>CVE Mitre</b></a> - list of publicly known cybersecurity vulnerabilities.<br>\n&nbsp;&nbsp; <a href=\"https://www.cvedetails.com/\"><b>CVE Details</b></a> - CVE security vulnerability advanced database.<br>\n&nbsp;&nbsp; <a href=\"https://www.exploit-db.com/\"><b>Exploit DB</b></a> - CVE compliant archive of public exploits and corresponding vulnerable software.<br>\n&nbsp;&nbsp; <a href=\"https://0day.today/\"><b>0day.today</b></a> - exploits market provides you the possibility to buy/sell zero-day exploits.<br>\n&nbsp;&nbsp; <a href=\"https://sploitus.com/\"><b>sploitus</b></a> - the exploit and tools database.<br>\n&nbsp;&nbsp; <a href=\"https://cxsecurity.com/exploit/\"><b>cxsecurity</b></a> - free vulnerability database.<br>\n&nbsp;&nbsp; <a href=\"https://www.vulncode-db.com/\"><b>Vulncode-DB</b></a> - is a database for vulnerabilities and their corresponding source code if available.<br>\n&nbsp;&nbsp; <a href=\"https://cveapi.com/\"><b>cveapi</b></a> - free API for CVE data.<br>\n</p>\n\n##### :black_small_square: Mobile apps scanners\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.immuniweb.com/mobile/\"><b>ImmuniWeb® Mobile App Scanner</b></a> - test security and privacy of mobile apps (iOS & Android).<br>\n&nbsp;&nbsp; <a href=\"https://vulnerabilitytest.quixxi.com/\"><b>Quixxi</b></a> - free Mobile App Vulnerability Scanner for Android & iOS.<br>\n&nbsp;&nbsp; <a href=\"https://www.ostorlab.co/scan/mobile/\"><b>Ostorlab</b></a> - analyzes mobile application to identify vulnerabilities and potential weaknesses.<br>\n</p>\n\n##### :black_small_square: Private Search Engines\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.startpage.com/\"><b>Startpage</b></a> - the world's most private search engine.<br>\n&nbsp;&nbsp; <a href=\"https://searx.me/\"><b>searX</b></a> - a privacy-respecting, hackable metasearch engine.<br>\n&nbsp;&nbsp; <a href=\"https://darksearch.io/\"><b>darksearch</b></a> - the 1st real Dark Web search engine.<br>\n&nbsp;&nbsp; <a href=\"https://www.qwant.com/\"><b>Qwant</b></a> - the search engine that respects your privacy.<br>\n&nbsp;&nbsp; <a href=\"https://duckduckgo.com/\"><b>DuckDuckGo</b></a> - the search engine that doesn't track you.<br>\n&nbsp;&nbsp; <a href=\"https://swisscows.com/\"><b>Swisscows</b></a> - privacy safe web search<br>\n&nbsp;&nbsp; <a href=\"https://search.disconnect.me/\"><b>Disconnect</b></a> - the search engine that anonymizes your searches.<br>\n&nbsp;&nbsp; <a href=\"https://metager.org/\"><b>MetaGer</b></a> - the search engine that uses anonymous proxy and hidden Tor branches.<br>\n</p>\n\n##### :black_small_square: Secure Webmail Providers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://countermail.com/\"><b>CounterMail</b></a> - online email service, designed to provide maximum security and privacy.<br>\n&nbsp;&nbsp; <a href=\"http://mail2tor.com/\"><b>Mail2Tor</b></a> - is a Tor Hidden Service that allows anyone to send and receive emails anonymously.<br>\n&nbsp;&nbsp; <a href=\"https://tutanota.com/\"><b>Tutanota</b></a> - is the world's most secure email service and amazingly easy to use.<br>\n&nbsp;&nbsp; <a href=\"https://protonmail.com/\"><b>Protonmail</b></a> - is the world's largest secure email service, developed by CERN and MIT scientists.<br>\n&nbsp;&nbsp; <a href=\"https://www.startmail.com/en/\"><b>Startmail</b></a> - private & encrypted email made easy.<br>\n</p>\n\n##### :black_small_square: Crypto\n\n<p>\n&nbsp;&nbsp; <a href=\"https://keybase.io/\"><b>Keybase</b></a> - it's open source and powered by public-key cryptography.<br>\n</p>\n\n##### :black_small_square: PGP Keyservers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://keyserver.ubuntu.com/\"><b>SKS OpenPGP Key server</b></a> - services for the SKS keyservers used by OpenPGP.<br>\n</p>\n\n#### Systems/Services &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: Operating Systems\n\n<p>\n&nbsp;&nbsp; <a href=\"http://www.slackware.com/\"><b>Slackware</b></a> - the most \"Unix-like\" Linux distribution.<br>\n&nbsp;&nbsp; <a href=\"https://www.openbsd.org/\"><b>OpenBSD</b></a> - multi-platform 4.4BSD-based UNIX-like operating system.<br>\n&nbsp;&nbsp; <a href=\"https://hardenedbsd.org/\"><b>HardenedBSD</b></a> - HardenedBSD aims to implement innovative exploit mitigation and security solutions.<br>\n&nbsp;&nbsp; <a href=\"https://www.kali.org/\"><b>Kali Linux</b></a> - Linux distribution used for Penetration Testing, Ethical Hacking and network security assessments.<br>\n&nbsp;&nbsp; <a href=\"https://www.parrotsec.org/\"><b>Parrot Security OS</b></a> - cyber security GNU/Linux environment.<br>\n&nbsp;&nbsp; <a href=\"https://www.backbox.org/\"><b>Backbox Linux</b></a> - penetration test and security assessment oriented Ubuntu-based Linux distribution.<br>\n&nbsp;&nbsp; <a href=\"https://blackarch.org/\"><b>BlackArch</b></a> - is an Arch Linux-based penetration testing distribution for penetration testers.<br>\n&nbsp;&nbsp; <a href=\"https://www.pentoo.ch/\"><b>Pentoo</b></a> - is a security-focused livecd based on Gentoo.<br>\n&nbsp;&nbsp; <a href=\"https://securityonion.net/\"><b>Security Onion</b></a> - Linux distro for intrusion detection, enterprise security monitoring, and log management.<br>\n&nbsp;&nbsp; <a href=\"https://tails.boum.org/\"><b>Tails</b></a> - is a live system that aims to preserve your privacy and anonymity.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/vedetta-com/vedetta\"><b>vedetta</b></a> - OpenBSD router boilerplate.<br>\n&nbsp;&nbsp; <a href=\"https://www.qubes-os.org\"><b>Qubes OS</b></a> - is a security-oriented OS that uses Xen-based virtualization.<br>\n</p>\n\n##### :black_small_square: HTTP(s) Services\n\n<p>\n&nbsp;&nbsp; <a href=\"https://varnish-cache.org/\"><b>Varnish Cache</b></a> - HTTP accelerator designed for content-heavy dynamic web sites.<br>\n&nbsp;&nbsp; <a href=\"https://nginx.org/\"><b>Nginx</b></a> - open source web and reverse proxy server that is similar to Apache, but very light weight.<br>\n&nbsp;&nbsp; <a href=\"https://openresty.org/en/\"><b>OpenResty</b></a> - is a dynamic web platform based on NGINX and LuaJIT.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/alibaba/tengine\"><b>Tengine</b></a> - a distribution of Nginx with some advanced features.<br>\n&nbsp;&nbsp; <a href=\"https://caddyserver.com/\"><b>Caddy Server</b></a> - is an open source, HTTP/2-enabled web server with HTTPS by default.<br>\n&nbsp;&nbsp; <a href=\"https://www.haproxy.org/\"><b>HAProxy</b></a> - the reliable, high performance TCP/HTTP load balancer.<br>\n</p>\n\n##### :black_small_square: DNS Services\n\n<p>\n&nbsp;&nbsp; <a href=\"https://nlnetlabs.nl/projects/unbound/about/\"><b>Unbound</b></a> - validating, recursive, and caching DNS resolver (with TLS).<br>\n&nbsp;&nbsp; <a href=\"https://www.knot-resolver.cz/\"><b>Knot Resolver</b></a> - caching full resolver implementation, including both a resolver library and a daemon.<br>\n&nbsp;&nbsp; <a href=\"https://www.powerdns.com/\"><b>PowerDNS</b></a> - is an open source authoritative DNS server, written in C++ and licensed under the GPL.<br>\n</p>\n\n##### :black_small_square: Other Services\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/z3APA3A/3proxy\"><b>3proxy</b></a> - tiny free proxy server.<br>\n</p>\n\n##### :black_small_square: Security/hardening\n\n<p>\n&nbsp;&nbsp; <a href=\"https://twitter.com/EmeraldOnion\"><b>Emerald Onion</b></a> - is a 501(c)(3) nonprofit organization and transit internet service provider (ISP).<br>\n&nbsp;&nbsp; <a href=\"https://github.com/pi-hole/pi-hole\"><b>pi-hole</b></a> - the Pi-hole® is a DNS sinkhole that protects your devices from unwanted content.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/stamparm/maltrail\"><b>maltrail</b></a> - malicious traffic detection system.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Netflix/security_monkey\"><b>security_monkey</b></a> - monitors AWS, GCP, OpenStack, and GitHub orgs for assets and their changes over time.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/firecracker-microvm/firecracker\"><b>firecracker</b></a> - secure and fast microVMs for serverless computing.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/StreisandEffect/streisand\"><b>streisand</b></a> - sets up a new server running your choice of WireGuard, OpenSSH, OpenVPN, and more.<br>\n</p>\n\n#### Networks &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: Tools\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.capanalysis.net/ca/\"><b>CapAnalysis</b></a> - web visual tool to analyze large amounts of captured network traffic (PCAP analyzer).<br>\n&nbsp;&nbsp; <a href=\"https://github.com/digitalocean/netbox\"><b>netbox</b></a> - IP address management (IPAM) and data center infrastructure management (DCIM) tool.<br>\n</p>\n\n##### :black_small_square: Labs\n\n<p>\n&nbsp;&nbsp; <a href=\"https://labs.networkreliability.engineering/\"><b>NRE Labs</b></a> - learn automation by doing it. Right now, right here, in your browser.<br>\n</p>\n\n##### :black_small_square: Other\n\n<p>\n&nbsp;&nbsp; <a href=\"https://ee.lbl.gov/\"><b>LBNL's Network Research Group</b></a> - home page of the Network Research Group (NRG).<br>\n</p>\n\n#### Containers/Orchestration &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: CLI Tools\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/google/gvisor\"><b>gvisor</b></a> - container runtime sandbox.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bcicen/ctop\"><b>ctop</b></a> - top-like interface for container metrics.<br>\n</p>\n\n##### :black_small_square: Web Tools\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/moby/moby\"><b>Moby</b></a> - a collaborative project for the container ecosystem to assemble container-based system.<br>\n&nbsp;&nbsp; <a href=\"https://traefik.io/\"><b>Traefik</b></a> - open source reverse proxy/load balancer provides easier integration with Docker and Let's encrypt.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Kong/kong\"><b>kong</b></a> - The Cloud-Native API Gateway.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rancher/rancher\"><b>rancher</b></a> - complete container management platform.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/portainer/portainer\"><b>portainer</b></a> - making Docker management easy.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jwilder/nginx-proxy\"><b>nginx-proxy</b></a> - automated nginx proxy for Docker containers using docker-gen.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bunkerity/bunkerized-nginx\"><b>bunkerized-nginx</b></a> - nginx docker image \"secure by default\".<br>\n</p>\n\n##### :black_small_square: Security\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/docker/docker-bench-security\"><b>docker-bench-security</b></a> - checks for dozens of common best-practices around deploying Docker.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/aquasecurity/trivy\"><b>trivy</b></a> - vulnerability scanner for containers, suitable for CI.<br>\n&nbsp;&nbsp; <a href=\"https://goharbor.io/\"><b>Harbor</b></a> - cloud native registry project that stores, signs, and scans content.<br>\n&nbsp;&nbsp; <a href=\"https://houdini.secsi.io/\"><b>Houdini</b></a> - hundreds of offensive and useful docker images for network intrusion.<br>\n</p>\n\n##### :black_small_square: Manuals/Tutorials/Best Practices\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/wsargent/docker-cheat-sheet\"><b>docker-cheat-sheet</b></a> - a quick reference cheat sheet on Docker.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/veggiemonk/awesome-docker\"><b>awesome-docker</b></a> - a curated list of Docker resources and projects.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/yeasy/docker_practice\"><b>docker_practice</b></a> - learn and understand Docker technologies, with real DevOps practice!<br>\n&nbsp;&nbsp; <a href=\"https://github.com/docker/labs\"><b>labs\n</b></a> - is a collection of tutorials for learning how to use Docker with various tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jessfraz/dockerfiles\"><b>dockerfiles</b></a> - various Dockerfiles I use on the desktop and on servers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/kelseyhightower/kubernetes-the-hard-way\"><b>kubernetes-the-hard-way</b></a> - bootstrap Kubernetes the hard way on Google Cloud Platform. No scripts.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jamesward/kubernetes-the-easy-way\"><b>kubernetes-the-easy-way</b></a> - bootstrap Kubernetes the easy way on Google Cloud Platform. No scripts.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dennyzhang/cheatsheet-kubernetes-A4\"><b>cheatsheet-kubernetes-A4</b></a> - Kubernetes CheatSheets in A4.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/kabachook/k8s-security\"><b>k8s-security</b></a> - kubernetes security notes and best practices.<br>\n&nbsp;&nbsp; <a href=\"https://learnk8s.io/production-best-practices/\"><b>kubernetes-production-best-practices</b></a> - checklists with best-practices for production-ready Kubernetes.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/freach/kubernetes-security-best-practice\"><b>kubernetes-production-best-practices</b></a> - kubernetes security - best practice guide.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/hjacobs/kubernetes-failure-stories\"><b>kubernetes-failure-stories</b></a> - is a compilation of public failure/horror stories related to Kubernetes.<br>\n</p>\n\n#### Manuals/Howtos/Tutorials &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: Shell/Command line\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/dylanaraps/pure-bash-bible\"><b>pure-bash-bible</b></a> - is a collection of pure bash alternatives to external processes.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dylanaraps/pure-sh-bible\"><b>pure-sh-bible</b></a> - is a collection of pure POSIX sh alternatives to external processes.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Idnan/bash-guide\"><b>bash-guide</b></a> - is a guide to learn bash.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/denysdovhan/bash-handbook\"><b>bash-handbook</b></a> - for those who wanna learn Bash.<br>\n&nbsp;&nbsp; <a href=\"https://wiki.bash-hackers.org/start\"><b>The Bash Hackers Wiki</b></a> - hold documentation of any kind about GNU Bash.<br>\n&nbsp;&nbsp; <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html\"><b>Shell & Utilities</b></a> - describes the commands offered to application programs by POSIX-conformant systems.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jlevy/the-art-of-command-line\"><b>the-art-of-command-line</b></a> - master the command line, in one page.<br>\n&nbsp;&nbsp; <a href=\"https://google.github.io/styleguide/shellguide.html\"><b>Shell Style Guide</b></a> - a shell style guide for Google-originated open-source projects.<br>\n</p>\n\n##### :black_small_square: Text Editors\n\n<p>\n&nbsp;&nbsp; <a href=\"https://vim.rtorr.com/\"><b>Vim Cheat Sheet</b></a> - great multi language vim guide.<br>\n</p>\n\n##### :black_small_square: Python\n\n<p>\n&nbsp;&nbsp; <a href=\"https://awesome-python.com/\"><b>Awesome Python</b></a> - a curated list of awesome Python frameworks, libraries, software and resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/gto76/python-cheatsheet\"><b>python-cheatsheet</b></a> - comprehensive Python cheatsheet.<br>\n&nbsp;&nbsp; <a href=\"https://www.pythoncheatsheet.org/\"><b>pythoncheatsheet.org</b></a> - basic reference for beginner and advanced developers.<br>\n</p>\n\n##### :black_small_square: Sed & Awk & Other\n\n<p>\n&nbsp;&nbsp; <a href=\"https://posts.specterops.io/fawk-yeah-advanced-sed-and-awk-usage-parsing-for-pentesters-3-e5727e11a8ad?gi=c8f9506b26b6\"><b>F’Awk Yeah!</b></a> - advanced sed and awk usage (Parsing for Pentesters 3).<br>\n</p>\n\n##### :black_small_square: \\*nix & Network\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.cyberciti.biz/\"><b>nixCraft</b></a> - linux and unix tutorials for new and seasoned sysadmin.<br>\n&nbsp;&nbsp; <a href=\"https://www.tecmint.com/\"><b>TecMint</b></a> - the ideal Linux blog for Sysadmins & Geeks.<br>\n&nbsp;&nbsp; <a href=\"http://www.omnisecu.com/index.php\"><b>Omnisecu</b></a> - free Networking, System Administration and Security tutorials.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/cirosantilli/linux-cheat\"><b>linux-cheat</b></a> - Linux tutorials and cheatsheets. Minimal examples. Mostly user-land CLI utilities.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/snori74/linuxupskillchallenge\"><b>linuxupskillchallenge</b></a> - learn the skills required to sysadmin.<br>\n&nbsp;&nbsp; <a href=\"http://cb.vu/unixtoolbox.xhtml\"><b>Unix Toolbox</b></a> - Unix/Linux/BSD commands and tasks which are useful for IT work or for advanced users.<br>\n&nbsp;&nbsp; <a href=\"https://linux-kernel-labs.github.io/refs/heads/master/index.html\"><b>Linux Kernel Teaching</b></a> - is a collection of lectures and labs Linux kernel topics.<br>\n&nbsp;&nbsp; <a href=\"https://peteris.rocks/blog/htop/\"><b>htop explained</b></a> - explanation of everything you can see in htop/top on Linux.<br>\n&nbsp;&nbsp; <a href=\"https://linuxguideandhints.com/\"><b>Linux Guide and Hints</b></a> - tutorials on system administration in Fedora and CentOS.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/NanXiao/strace-little-book\"><b>strace-little-book</b></a> - a little book which introduces strace.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/goldshtn/linux-tracing-workshop\"><b>linux-tracing-workshop</b></a> - examples and hands-on labs for Linux tracing tools workshops.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bagder/http2-explained\"><b>http2-explained</b></a> - a detailed document explaining and documenting HTTP/2.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bagder/http3-explained\"><b>http3-explained</b></a> - a document describing the HTTP/3 and QUIC protocols.<br>\n&nbsp;&nbsp; <a href=\"https://www.manning.com/books/http2-in-action\"><b>HTTP/2 in Action</b></a> - an excellent introduction to the new HTTP/2 standard.<br>\n&nbsp;&nbsp; <a href=\"https://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/\"><b>Let's code a TCP/IP stack</b></a> - great stuff to learn network and system programming at a deeper level.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/trimstray/nginx-admins-handbook\"><b>Nginx Admin's Handbook</b></a> - how to improve NGINX performance, security and other important things.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/digitalocean/nginxconfig.io\"><b>nginxconfig.io</b></a> - NGINX config generator on steroids.<br>\n&nbsp;&nbsp; <a href=\"https://infosec.mozilla.org/guidelines/openssh\"><b>openssh guideline</b></a> - is to help operational teams with the configuration of OpenSSH server and client.<br>\n&nbsp;&nbsp; <a href=\"https://gravitational.com/blog/ssh-handshake-explained/\"><b>SSH Handshake Explained</b></a> - is a relatively brief description of the SSH handshake.<br>\n&nbsp;&nbsp; <a href=\"https://kb.isc.org/docs/using-this-knowledgebase\"><b>ISC's Knowledgebase</b></a> - you'll find some general information about BIND 9, ISC DHCP, and Kea DHCP.<br>\n&nbsp;&nbsp; <a href=\"https://packetlife.net/\"><b>PacketLife.net</b></a> - a place to record notes while studying for Cisco's CCNP certification.<br>\n</p>\n\n##### :black_small_square: Microsoft\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/infosecn1nja/AD-Attack-Defense\"><b>AD-Attack-Defense</b></a> - attack and defend active directory using modern post exploitation activity.<br>\n</p>\n\n##### :black_small_square: Large-scale systems\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/donnemartin/system-design-primer\"><b>The System Design Primer</b></a> - learn how to design large-scale systems.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/binhnguyennus/awesome-scalability\"><b>Awesome Scalability</b></a> - best practices in building High Scalability, High Availability, High Stability, and more.<br>\n&nbsp;&nbsp; <a href=\"https://engineering.videoblocks.com/web-architecture-101-a3224e126947?gi=a896808d22a\"><b>Web Architecture 101</b></a> - the basic architecture concepts.<br>\n</p>\n\n##### :black_small_square: System hardening\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.cisecurity.org/cis-benchmarks/\"><b>CIS Benchmarks</b></a> - secure configuration settings for over 100 technologies, available as a free PDF.<br>\n&nbsp;&nbsp; <a href=\"https://highon.coffee/blog/security-harden-centos-7/\"><b>Security Harden CentOS 7</b></a> - this walks you through the steps required to security harden CentOS.<br>\n&nbsp;&nbsp; <a href=\"https://www.lisenet.com/2017/centos-7-server-hardening-guide/\"><b>CentOS 7 Server Hardening Guide</b></a> - great guide for hardening CentOS; familiar with OpenSCAP.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/decalage2/awesome-security-hardening\"><b>awesome-security-hardening</b></a> - is a collection of security hardening guides, tools and other resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/trimstray/the-practical-linux-hardening-guide\"><b>The Practical Linux Hardening Guide</b></a> - provides a high-level overview of hardening GNU/Linux systems.<br>\n&nbsp;&nbsp; <a href=\"https://madaidans-insecurities.github.io/guides/linux-hardening.html\"><b>Linux Hardening Guide</b></a> - how to harden Linux as much as possible for security and privacy.<br>\n</p>\n\n##### :black_small_square: Security & Privacy\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.hackingarticles.in/\"><b>Hacking Articles</b></a> - LRaj Chandel's Security & Hacking Blog.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/toniblyx/my-arsenal-of-aws-security-tools\"><b>AWS security tools</b></a> - make your AWS cloud environment more secure.<br>\n&nbsp;&nbsp; <a href=\"https://inventory.rawsec.ml/index.html\"><b>Rawsec's CyberSecurity Inventory</b></a> - an inventory of tools and resources about CyberSecurity.<br>\n&nbsp;&nbsp; <a href=\"https://tls.ulfheim.net/\"><b>The Illustrated TLS Connection</b></a> - every byte of a TLS connection explained and reproduced.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ssllabs/research/wiki/SSL-and-TLS-Deployment-Best-Practices\"><b>SSL Research</b></a> - SSL and TLS Deployment Best Practices by SSL Labs.<br>\n&nbsp;&nbsp; <a href=\"http://selinuxgame.org/index.html\"><b>SELinux Game</b></a> - learn SELinux by doing. Solve Puzzles, show skillz.<br>\n&nbsp;&nbsp; <a href=\"https://smallstep.com/blog/everything-pki.html\"><b>Certificates and PKI</b></a> - everything you should know about certificates and PKI but are too afraid to ask.<br>\n&nbsp;&nbsp; <a href=\"https://appsecco.com/books/subdomain-enumeration/\"><b>The Art of Subdomain Enumeration</b></a> - a reference for subdomain enumeration techniques.<br>\n&nbsp;&nbsp; <a href=\"https://lifehacker.com/the-comprehensive-guide-to-quitting-google-1830001964\"><b>Quitting Google</b></a> - the comprehensive guide to quitting Google.<br>\n</p>\n\n##### :black_small_square: Web Apps\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/Main_Page\"><b>OWASP</b></a> - worldwide not-for-profit charitable organization focused on improving the security of software.<br>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project\"><b>OWASP ASVS 3.0.1</b></a> - OWASP Application Security Verification Standard Project.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Santandersecurityresearch/asvs\"><b>OWASP ASVS 3.0.1 Web App</b></a> - simple web app that helps developers understand the ASVS requirements.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OWASP/ASVS/tree/master/4.0\"><b>OWASP ASVS 4.0</b></a> - is a list of application security requirements or tests.<br>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/OWASP_Testing_Project\"><b>OWASP Testing Guide v4</b></a> - includes a \"best practice\" penetration testing framework.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OWASP/DevGuide\"><b>OWASP Dev Guide</b></a> - this is the development version of the OWASP Developer Guide.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OWASP/wstg\"><b>OWASP WSTG</b></a> - is a comprehensive open source guide to testing the security of web apps.<br>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/OWASP_API_Security_Project\"><b>OWASP API Security Project</b></a> - focuses specifically on the top ten vulnerabilities in API security.<br>\n&nbsp;&nbsp; <a href=\"https://infosec.mozilla.org/guidelines/web_security.html\"><b>Mozilla Web Security</b></a> - help operational teams with creating secure web applications.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Netflix/security-bulletins\"><b>security-bulletins</b></a> - security bulletins that relate to Netflix Open Source.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/shieldfy/API-Security-Checklist\"><b>API-Security-Checklist</b></a> - security countermeasures when designing, testing, and releasing your API.<br>\n&nbsp;&nbsp; <a href=\"https://enable-cors.org/index.html\"><b>Enable CORS</b></a> - enable cross-origin resource sharing.<br>\n&nbsp;&nbsp; <a href=\"https://appsecwiki.com/#/\"><b>Application Security Wiki</b></a> - is an initiative to provide all application security related resources at one place.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/GrrrDog/weird_proxies/wiki\"><b>Weird Proxies</b></a> - reverse proxy related attacks; it is a result of analysis of various proxies.<br>\n&nbsp;&nbsp; <a href=\"https://dfir.it/blog/2015/08/12/webshell-every-time-the-same-purpose/\"><b>Webshells</b></a> - great series about malicious payloads.<br>\n&nbsp;&nbsp; <a href=\"https://portswigger.net/blog/practical-web-cache-poisoning\"><b>Practical Web Cache Poisoning</b></a> - show you how to compromise websites by using esoteric web features.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bl4de/research/tree/master/hidden_directories_leaks\"><b>Hidden directories and files</b></a> - as a source of sensitive information about web application.<br>\n&nbsp;&nbsp; <a href=\"https://bo0om.ru/en/\"><b>Explosive blog</b></a> - great blog about cybersec and pentests.<br>\n&nbsp;&nbsp; <a href=\"https://www.netsparker.com/security-cookies-whitepaper/\"><b>Security Cookies</b></a> - this paper will take a close look at cookie security.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/GitGuardian/APISecurityBestPractices\"><b>APISecurityBestPractices</b></a> - help you keep secrets (API keys, db credentials, certificates) out of source code.<br>\n</p>\n\n##### :black_small_square: All-in-one\n\n<p>\n&nbsp;&nbsp; <a href=\"https://lzone.de/cheat-sheet/\"><b>LZone Cheat Sheets</b></a> - all cheat sheets.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rstacruz/cheatsheets\"><b>Dan’s Cheat Sheets’s</b></a> - massive cheat sheets documentation.<br>\n&nbsp;&nbsp; <a href=\"https://devhints.io/\"><b>Rico's cheatsheets</b></a> - this is a modest collection of cheatsheets.<br>\n&nbsp;&nbsp; <a href=\"https://devdocs.io/\"><b>DevDocs API</b></a> - combines multiple API documentations in a fast, organized, and searchable interface.<br>\n&nbsp;&nbsp; <a href=\"https://cheat.sh/\"><b>cheat.sh</b></a> - the only cheat sheet you need.<br>\n&nbsp;&nbsp; <a href=\"https://gnulinux.guru/\"><b>gnulinux.guru</b></a> - collection of cheat sheets about bash, vim and networking.<br>\n&nbsp;&nbsp; <a href=\"https://andreasbm.github.io/web-skills/\"><b>Web Skills</b></a> - visual overview of useful skills to learn as a web developer.<br>\n</p>\n\n##### :black_small_square: Ebooks\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/EbookFoundation/free-programming-books\"><b>free-programming-books</b></a> - list of free learning resources in many languages.<br>\n</p>\n\n##### :black_small_square: Other\n\n<p>\n&nbsp;&nbsp; <a href=\"https://bitvijays.github.io/LFC-VulnerableMachines.html\"><b>CTF Series : Vulnerable Machines</b></a> - the steps below could be followed to find vulnerabilities and exploits.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/manoelt/50M_CTF_Writeup\"><b>50M_CTF_Writeup</b></a> - $50 million CTF from Hackerone - writeup.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/j00ru/ctf-tasks\"><b>ctf-tasks</b></a> - an archive of low-level CTF challenges developed over the years.<br>\n&nbsp;&nbsp; <a href=\"https://hshrzd.wordpress.com/how-to-start/\"><b>How to start RE/malware analysis?</b></a> - collection of some hints and useful links for the beginners.<br>\n&nbsp;&nbsp; <a href=\"http://www.kegel.com/c10k.html\"><b>The C10K problem</b></a> - it's time for web servers to handle ten thousand clients simultaneously, don't you think?<br>\n&nbsp;&nbsp; <a href=\"https://blog.benjojo.co.uk/post/why-is-ethernet-mtu-1500\"><b>How 1500 bytes became the MTU of the internet</b></a> - great story about the Maximum Transmission Unit.<br>\n&nbsp;&nbsp; <a href=\"http://poormansprofiler.org/\"><b>poor man's profiler</b></a> - like dtrace's don't really provide methods to see what programs are blocking on.<br>\n&nbsp;&nbsp; <a href=\"https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/\"><b>HTTPS on Stack Overflow</b></a> - this is the story of a long journey regarding the implementation of SSL.<br>\n&nbsp;&nbsp; <a href=\"https://drawings.jvns.ca/\"><b>Julia's Drawings</b></a> - some drawings about programming and unix world, zines about systems & debugging tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/corkami/collisions\"><b>Hash collisions</b></a> - this great repository is focused on hash collisions exploitation.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/in3rsha/sha256-animation\"><b>sha256-animation</b></a> - animation of the SHA-256 hash function in your terminal.<br>\n&nbsp;&nbsp; <a href=\"https://sha256algorithm.com/\"><b>sha256algorithm</b></a> - sha256 algorithm explained online step by step visually.<br>\n&nbsp;&nbsp; <a href=\"https://labs.ripe.net/Members/cteusche/bgp-meets-cat\"><b>BGP Meets Cat</b></a> - after 3072 hours of manipulating BGP, Job Snijders has succeeded in drawing a Nyancat.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/benjojo/bgp-battleships\"><b>bgp-battleships</b></a> - playing battleships over BGP.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/alex/what-happens-when\"><b>What happens when...</b></a> - you type google.com into your browser and press enter?<br>\n&nbsp;&nbsp; <a href=\"https://github.com/vasanthk/how-web-works\"><b>how-web-works</b></a> - based on the 'What happens when...' repository.<br>\n&nbsp;&nbsp; <a href=\"https://robertheaton.com/2018/11/28/https-in-the-real-world/\"><b>HTTPS in the real world</b></a> - great tutorial explain how HTTPS works in the real world.<br>\n&nbsp;&nbsp; <a href=\"https://about.gitlab.com/2018/11/14/how-we-spent-two-weeks-hunting-an-nfs-bug/\"><b>Gitlab and NFS bug</b></a> - how we spent two weeks hunting an NFS bug in the Linux kernel.<br>\n&nbsp;&nbsp; <a href=\"https://about.gitlab.com/2017/02/10/postmortem-of-database-outage-of-january-31/\"><b>Gitlab melts down</b></a> - postmortem on the database outage of January 31 2017 with the lessons we learned.<br>\n&nbsp;&nbsp; <a href=\"http://www.catb.org/esr/faqs/hacker-howto.html\"><b>How To Become A Hacker</b></a> - if you want to be a hacker, keep reading.<br>\n&nbsp;&nbsp; <a href=\"http://ithare.com/infographics-operation-costs-in-cpu-clock-cycles/\"><b>Operation Costs in CPU</b></a> - should help to estimate costs of certain operations in CPU clocks.<br>\n&nbsp;&nbsp; <a href=\"https://cstack.github.io/db_tutorial/\"><b>Let's Build a Simple Database</b></a> - writing a sqlite clone from scratch in C.<br>\n&nbsp;&nbsp; <a href=\"https://djhworld.github.io/post/2019/05/21/i-dont-know-how-cpus-work-so-i-simulated-one-in-code/\"><b>simple-computer</b></a> - great resource to understand how computers work under the hood.<br>\n&nbsp;&nbsp; <a href=\"https://www.troyhunt.com/working-with-154-million-records-on/\"><b>The story of \"Have I been pwned?\"</b></a> - working with 154 million records on Azure Table Storage.<br>\n&nbsp;&nbsp; <a href=\"https://www.top500.org/\"><b>TOP500 Supercomputers</b></a> - shows the 500 most powerful commercially available computer systems.<br>\n&nbsp;&nbsp; <a href=\"https://www.shellntel.com/blog/2017/2/8/how-to-build-a-8-gpu-password-cracker\"><b>How to build a 8 GPU password cracker</b></a> - hours of frustration like desktop components do.<br>\n&nbsp;&nbsp; <a href=\"https://home.cern/science/computing\"><b>CERN Data Centre</b></a> - 3D visualizations of the CERN computing environments (and more).<br>\n&nbsp;&nbsp; <a href=\"http://howfuckedismydatabase.com/\"><b>How fucked is my database</b></a> - evaluate how fucked your database is with this handy website.<br>\n&nbsp;&nbsp; <a href=\"https://krisbuytaert.be/blog/linux-troubleshooting-101-2016-edition/index.html\"><b>Linux Troubleshooting 101 , 2016 Edition</b></a> - everything is a DNS Problem...<br>\n&nbsp;&nbsp; <a href=\"https://open.buffer.com/5-whys-process/\"><b>Five Whys</b></a> - you know what the problem is, but you cannot solve it?<br>\n&nbsp;&nbsp; <a href=\"https://gvnshtn.com/maersk-me-notpetya/\"><b>Maersk, me & notPetya</b></a> - how did ransomware successfully hijack hundreds of domain controllers?<br>\n&nbsp;&nbsp; <a href=\"https://howhttps.works/\"><b>howhttps.works</b></a> - how HTTPS works ...in a comic!<br>\n&nbsp;&nbsp; <a href=\"https://howdns.works/\"><b>howdns.works</b></a> - a fun and colorful explanation of how DNS works.<br>\n&nbsp;&nbsp; <a href=\"https://postgresqlco.nf/en/doc/param/\"><b>POSTGRESQLCO.NF</b></a> - your postgresql.conf documentation and recommendations.<br>\n</p>\n\n#### Inspiring Lists &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: SysOps/DevOps\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/kahun/awesome-sysadmin\"><b>Awesome Sysadmin</b></a> - amazingly awesome open source sysadmin resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/alebcay/awesome-shell\"><b>Awesome Shell</b></a> - awesome command-line frameworks, toolkits, guides and gizmos.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/learnbyexample/Command-line-text-processing\"><b>Command-line-text-processing</b></a> - finding text to search and replace, sorting to beautifying, and more.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/caesar0301/awesome-pcaptools\"><b>Awesome Pcaptools</b></a> - collection of tools developed by other researchers to process network traces.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/zoidbergwill/awesome-ebpf\"><b>awesome-ebpf</b></a> - a curated list of awesome projects related to eBPF.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/leandromoreira/linux-network-performance-parameters\"><b>Linux Network Performance</b></a> - where some of the network sysctl variables fit into the Linux/Kernel network flow.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dhamaniasad/awesome-postgres\"><b>Awesome Postgres</b></a> - list of awesome PostgreSQL software, libraries, tools and resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/enochtangg/quick-SQL-cheatsheet\"><b>quick-SQL-cheatsheet</b></a> - a quick reminder of all SQL queries and examples on how to use them.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Kickball/awesome-selfhosted\"><b>Awesome-Selfhosted</b></a> - list of Free Software network services and web applications which can be hosted locally.<br>\n&nbsp;&nbsp; <a href=\"https://wiki.archlinux.org/index.php/List_of_applications\"><b>List of applications</b></a> - huge list of apps sorted by category, as a reference for those looking for packages.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/InterviewMap/CS-Interview-Knowledge-Map\"><b>CS-Interview-Knowledge-Map</b></a> - build the best interview map.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Tikam02/DevOps-Guide\"><b>DevOps-Guide</b></a> - DevOps Guide from basic to advanced with Interview Questions and Notes.<br>\n&nbsp;&nbsp; <a href=\"https://issue.freebsdfoundation.org/publication/?m=33057&l=1&view=issuelistBrowser\"><b>FreeBSD Journal</b></a> - it is a great list of periodical magazines about FreeBSD and other important things.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bregman-arie/devops-interview-questions\"><b>devops-interview-questions</b></a> - contains interview questions on various DevOps and SRE related topics.<br></p>\n\n##### :black_small_square: Developers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/kamranahmedse/developer-roadmap\"><b>Web Developer Roadmap</b></a> - roadmaps, articles and resources to help you choose your path, learn and improve.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/thedaviddias/Front-End-Checklist\"><b>Front-End-Checklist</b></a> - the perfect Front-End Checklist for modern websites and meticulous developers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/thedaviddias/Front-End-Performance-Checklist\"><b>Front-End-Performance-Checklist</b></a> - Front-End Performance Checklist that runs faster than the others.<br>\n&nbsp;&nbsp; <a href=\"https://rszalski.github.io/magicmethods/\"><b>Python's Magic Methods</b></a> - what are magic methods? They're everything in object-oriented Python.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/satwikkansal/wtfpython\"><b>wtfpython</b></a> - a collection of surprising Python snippets and lesser-known features.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/twhite96/js-dev-reads\"><b>js-dev-reads</b></a> - a list of books and articles for the discerning web developer to read.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/RomuloOliveira/commit-messages-guide\"><b>Commit messages guide</b></a> - a guide to understand the importance of commit messages.<br>\n</p>\n\n##### :black_small_square: Security/Pentesting\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/qazbnm456/awesome-web-security\"><b>Awesome Web Security</b></a> - a curated list of Web Security materials and resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/joe-shenouda/awesome-cyber-skills\"><b>awesome-cyber-skills</b></a> - a curated list of hacking environments where you can train your cyber skills.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/devsecops/awesome-devsecops\"><b>awesome-devsecops</b></a> - an authoritative list of awesome devsecops tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jivoi/awesome-osint\"><b>awesome-osint</b></a> - is a curated list of amazingly awesome OSINT.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/HolyBugx/HolyTips\"><b>HolyTips</b></a> - tips and tutorials on Bug Bounty Hunting and Web App Security.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/hslatman/awesome-threat-intelligence\"><b>awesome-threat-intelligence</b></a> - a curated list of Awesome Threat Intelligence resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/infosecn1nja/Red-Teaming-Toolkit\"><b>Red-Teaming-Toolkit</b></a> - a collection of open source and commercial tools that aid in red team operations.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/snoopysecurity/awesome-burp-extensions\"><b>awesome-burp-extensions</b></a> - a curated list of amazingly awesome Burp Extensions.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Hack-with-Github/Free-Security-eBooks\"><b>Free Security eBooks</b></a> - list of a Free Security and Hacking eBooks.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/yeahhub/Hacking-Security-Ebooks\"><b>Hacking-Security-Ebooks</b></a> - top 100 Hacking & Security E-Books.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/nikitavoloboev/privacy-respecting\"><b>privacy-respecting</b></a> - curated list of privacy respecting services and software.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/wtsxDev/reverse-engineering\"><b>reverse-engineering</b></a> - list of awesome reverse engineering resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/michalmalik/linux-re-101\"><b>linux-re-101</b></a> - a collection of resources for linux reverse engineering.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/onethawt/reverseengineering-reading-list\"><b>reverseengineering-reading-list</b></a> - a list of Reverse Engineering articles, books, and papers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/0xInfection/Awesome-WAF\"><b>Awesome-WAF</b></a> - a curated list of awesome web-app firewall (WAF) stuff.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jakejarvis/awesome-shodan-queries\"><b>awesome-shodan-queries</b></a> - interesting, funny, and depressing search queries to plug into shodan.io.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/danielmiessler/RobotsDisallowed\"><b>RobotsDisallowed</b></a> - a curated list of the most common and most interesting robots.txt disallowed directories.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Kayzaks/HackingNeuralNetworks\"><b>HackingNeuralNetworks</b></a> - is a small course on exploiting and defending neural networks.<br>\n&nbsp;&nbsp; <a href=\"https://gist.github.com/joepie91/7e5cad8c0726fd6a5e90360a754fc568\"><b>wildcard-certificates</b></a> - why you probably shouldn't use a wildcard certificate.<br>\n&nbsp;&nbsp; <a href=\"https://gist.github.com/joepie91/5a9909939e6ce7d09e29\"><b>Don't use VPN services</b></a> -  which is what every third-party \"VPN provider\" does.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/InQuest/awesome-yara\"><b>awesome-yara</b></a> - a curated list of awesome YARA rules, tools, and people.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/drduh/macOS-Security-and-Privacy-Guide\"><b>macOS-Security-and-Privacy-Guide</b></a> - guide to securing and improving privacy on macOS.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/usnistgov/macos_security\"><b>macos_security</b></a> - macOS Security Compliance Project.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/PaulSec/awesome-sec-talks\"><b>awesome-sec-talks</b></a> - is a collected list of awesome security talks.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/k4m4/movies-for-hackers\"><b>Movies for Hackers</b></a> - list of movies every hacker & cyberpunk must watch.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/danieldizzy/Cryptography_1\"><b>Cryptography_1</b></a> - materials used whilst taking Prof. Dan Boneh Stanford Crypto course.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ashutosh1206/Crypton\"><b>Crypton</b></a> - library to learn and practice Offensive and Defensive Cryptography.<br>\n</p>\n\n##### :black_small_square: Other\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.cheatography.com/\"><b>Cheatography</b></a> - over 3,000 free cheat sheets, revision aids and quick references.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mre/awesome-static-analysis\"><b>awesome-static-analysis</b></a> - static analysis tools for all programming languages.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ossu/computer-science\"><b>computer-science</b></a> - path to a free self-taught education in Computer Science.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/danluu/post-mortems\"><b>post-mortems</b></a> - is a collection of postmortems (config errors, hardware failures, and more).<br>\n&nbsp;&nbsp; <a href=\"https://github.com/danistefanovic/build-your-own-x\"><b>build-your-own-x</b></a> - build your own (insert technology here).<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rby90/Project-Based-Tutorials-in-C\"><b>Project-Based-Tutorials-in-C</b></a> - is a curated list of project-based tutorials in C.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/kylelobo/The-Documentation-Compendium\"><b>The-Documentation-Compendium</b></a> - various README templates & tips on writing high-quality documentation.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mahmoud/awesome-python-applications\"><b>awesome-python-applications</b></a> - free software that works great, and also happens to be open-source Python.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/awesomedata/awesome-public-datasets\"><b>awesome-public-datasets</b></a> - a topic-centric list of HQ open datasets.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Sahith02/machine-learning-algorithms\"><b>machine-learning-algorithms</b></a> - a curated list of all machine learning algorithms and concepts.<br>\n</p>\n\n#### Blogs/Podcasts/Videos &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: SysOps/DevOps\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/watch?v=nAFpkV5-vuI\"><b>Varnish for PHP developers</b></a> - very interesting presentation of Varnish by Mattias Geniar.<br>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/watch?v=CZ3wIuvmHeM\"><b>A Netflix Guide to Microservices</b></a> - talks about the chaotic and vibrant world of microservices at Netflix.<br>\n</p>\n\n##### :black_small_square: Developers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/watch?v=yOyaJXpAYZQ\"><b>Comparing C to machine lang</b></a> - compare a simple C app with the compiled machine code of that program.<br>\n</p>\n\n##### :black_small_square: Geeky Persons\n\n<p>\n&nbsp;&nbsp; <a href=\"http://www.brendangregg.com/\"><b>Brendan Gregg's Blog</b></a> - is an industry expert in computing performance and cloud computing.<br>\n&nbsp;&nbsp; <a href=\"https://gynvael.coldwind.pl/\"><b>Gynvael \"GynDream\" Coldwind</b></a> - is a IT security engineer at Google.<br>\n&nbsp;&nbsp; <a href=\"http://lcamtuf.coredump.cx/\"><b>Michał \"lcamtuf\" Zalewski</b></a> - white hat hacker, computer security expert.<br>\n&nbsp;&nbsp; <a href=\"https://ma.ttias.be/\"><b>Mattias Geniar</b></a> - developer, sysadmin, blogger, podcaster and public speaker.<br>\n&nbsp;&nbsp; <a href=\"https://nickcraver.com/\"><b>Nick Craver</b></a> - software developer and systems administrator for Stack Exchange.<br>\n&nbsp;&nbsp; <a href=\"https://scotthelme.co.uk/\"><b>Scott Helme</b></a> - security researcher, speaker and founder of securityheaders.com and report-uri.com.<br>\n&nbsp;&nbsp; <a href=\"https://krebsonsecurity.com/\"><b>Brian Krebs</b></a> - The Washington Post and now an Independent investigative journalist.<br>\n&nbsp;&nbsp; <a href=\"https://www.schneier.com/\"><b>Bruce Schneier</b></a> - is an internationally renowned security technologist, called a \"security guru\".<br>\n&nbsp;&nbsp; <a href=\"https://chrissymorgan.co.uk/\"><b>Chrissy Morgan</b></a> - advocate of practical learning, Chrissy also takes part in bug bounty programs.<br>\n&nbsp;&nbsp; <a href=\"https://blog.zsec.uk/\"><b>Andy Gill</b></a> - is a hacker at heart who works as a senior penetration tester.<br>\n&nbsp;&nbsp; <a href=\"https://danielmiessler.com/\"><b>Daniel Miessler</b></a> - cybersecurity expert and writer.<br>\n&nbsp;&nbsp; <a href=\"https://samy.pl/\"><b>Samy Kamkar</b></a> -  is an American privacy and security researcher, computer hacker.<br>\n&nbsp;&nbsp; <a href=\"https://www.j4vv4d.com/\"><b>Javvad Malik</b></a> - is a security advocate at AlienVault, a blogger event speaker and industry commentator.<br>\n&nbsp;&nbsp; <a href=\"https://www.grahamcluley.com/\"><b>Graham Cluley</b></a> - public speaker and independent computer security analyst.<br>\n&nbsp;&nbsp; <a href=\"https://security.szurek.pl/\"><b>Kacper Szurek</b></a> - detection engineer at ESET.<br>\n&nbsp;&nbsp; <a href=\"https://www.troyhunt.com/\"><b>Troy Hunt</b></a> - web security expert known for public education and outreach on security topics.<br>\n&nbsp;&nbsp; <a href=\"https://raymii.org/s/index.html\"><b>raymii.org</b></a> - sysadmin specializing in building high availability cloud environments.<br>\n&nbsp;&nbsp; <a href=\"https://robert.penz.name/\"><b>Robert Penz</b></a> - IT security expert.<br>\n</p>\n\n##### :black_small_square: Geeky Blogs\n\n<p>\n&nbsp;&nbsp; <a href=\"https://linux-audit.com/\"><b>Linux Audit</b></a> - the Linux security blog about auditing, hardening and compliance by Michael Boelen.<br>\n&nbsp;&nbsp; <a href=\"https://linuxsecurity.expert/\"><b>\nLinux Security Expert</b></a> - trainings, howtos, checklists, security tools, and more.<br>\n&nbsp;&nbsp; <a href=\"http://www.grymoire.com/\"><b>The Grymoire</b></a> - collection of useful incantations for wizards, be you computer wizards, magicians, or whatever.<br>\n&nbsp;&nbsp; <a href=\"https://www.secjuice.com\"><b>Secjuice</b></a> - is the only non-profit, independent and volunteer led publication in the information security space.<br>\n&nbsp;&nbsp; <a href=\"https://duo.com/decipher\"><b>Decipher</b></a> - security news that informs and inspires.<br>\n</p>\n\n##### :black_small_square: Geeky Vendor Blogs\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.tenable.com/podcast\"><b>Tenable Podcast</b></a> - conversations and interviews related to Cyber Exposure, and more.<br>\n&nbsp;&nbsp; <a href=\"https://nakedsecurity.sophos.com/\"><b>Sophos</b></a> - threat news room, giving you news, opinion, advice and research on computer security issues.<br>\n&nbsp;&nbsp; <a href=\"https://www.tripwire.com/state-of-security/\"><b>Tripwire State of Security</b></a> - blog featuring the latest news, trends and insights on current security issues.<br>\n&nbsp;&nbsp; <a href=\"https://blog.malwarebytes.com/\"><b>Malwarebytes Labs Blog</b></a> - security blog aims to provide insider news about cybersecurity.<br>\n&nbsp;&nbsp; <a href=\"https://www.trustedsec.com/category/articles/\"><b>TrustedSec</b></a> - latest news, and trends about cybersecurity.<br>\n&nbsp;&nbsp; <a href=\"https://portswigger.net/blog\"><b>PortSwigger Web Security Blog</b></a> - about web app security vulns and top tips from our team of web security.<br>\n&nbsp;&nbsp; <a href=\"https://www.alienvault.com/blogs\"><b>AT&T Cybersecurity blog</b></a> - news on emerging threats and practical advice to simplify threat detection.<br>\n&nbsp;&nbsp; <a href=\"https://thycotic.com/company/blog/\"><b>Thycotic</b></a> - where CISOs and IT Admins come to learn about industry trends, IT security, and more.<br>\n</p>\n\n##### :black_small_square: Geeky Cybersecurity Podcasts\n\n<p>\n&nbsp;&nbsp; <a href=\"https://risky.biz/netcasts/risky-business/\"><b>Risky Business</b></a> - is a weekly information security podcast featuring news and in-depth interviews.<br>\n&nbsp;&nbsp; <a href=\"https://www.vice.com/en_us/topic/cyber\"><b>Cyber, by Motherboard</b></a> - stories, and focus on the ideas  about cybersecurity.<br>\n&nbsp;&nbsp; <a href=\"https://www.tenable.com/podcast\"><b>Tenable Podcast</b></a> - conversations and interviews related to Cyber Exposure, and more.<br>\n&nbsp;&nbsp; <a href=\"https://podcasts.apple.com/gb/podcast/cybercrime-investigations/id1428801405\"><b>\nCybercrime Investigations</b></a> - podcast by Geoff White about cybercrimes.<br>\n&nbsp;&nbsp; <a href=\"https://themanyhats.club/tag/episodes/\"><b>The many hats club</b></a> - featuring stories from a wide range of Infosec people (Whitehat, Greyhat and Blackhat).<br>\n&nbsp;&nbsp; <a href=\"https://darknetdiaries.com/\"><b>Darknet Diaries</b></a> - true stories from the dark side of the Internet.<br>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/playlist?list=PL423I_gHbWUXah3dmt_q_XNp0NlGAKjis\"><b>OSINTCurious Webcasts</b></a> - is the investigative curiosity that helps people be successful in OSINT.<br>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/user/SecurityWeeklyTV\"><b>Security Weekly</b></a> - the latest information security and hacking news.<br>\n</p>\n\n##### :black_small_square: Geeky Cybersecurity Video Blogs\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/channel/UCzvJStjySZVvOBsPl-Vgj0g\"><b>rev3rse security</b></a> - offensive, binary exploitation, web app security, hardening, red team, blue team.<br>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w\"><b>LiveOverflow</b></a> - a lot more advanced topics than what is typically offered in paid online courses - but for free.<br>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/infoseccynic\"><b>J4vv4D</b></a> - the important information regarding our internet security.<br>\n&nbsp;&nbsp; <a href=\"https://cybertalks.co.uk/\"><b>\nCyberTalks</b></a> - talks, interviews, and article about cybersecurity.<br>\n</p>\n\n##### :black_small_square: Best Personal Twitter Accounts\n\n<p>\n&nbsp;&nbsp; <a href=\"https://twitter.com/blackroomsec\"><b>@blackroomsec</b></a> - a white-hat hacker/pentester. Intergalactic Minesweeper Champion 1990.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/MarcoCiappelli\"><b>@MarcoCiappelli</b></a> - Co-Founder @ITSPmagazine, at the intersection of IT security and society.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/binitamshah\"><b>@binitamshah</b></a> - Linux Evangelist. Malwares. Kernel Dev. Security Enthusiast.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/joe_carson\"><b>@joe_carson</b></a> - an InfoSec Professional and Tech Geek.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/mikko\"><b>@mikko</b></a> - CRO at F-Secure, Reverse Engineer, TED Speaker, Supervillain.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/esrtweet\"><b>@esrtweet</b></a> - often referred to as ESR, is an American software developer, and open-source software advocate.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/gynvael\"><b>@gynvael</b></a> - security researcher/programmer, @DragonSectorCTF founder/player, technical streamer.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/x0rz\"><b>@x0rz</b></a> - Security Researcher & Cyber Observer.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/hasherezade\"><b>@hasherezade</b></a> - programmer, malware analyst. Author of PEbear, PEsieve, libPeConv.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/TinkerSec\"><b>@TinkerSec</b></a> - tinkerer, cypherpunk, hacker.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/alisaesage\"><b>@alisaesage</b></a> - independent hacker and researcher.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/SwiftOnSecurity\"><b>@SwiftOnSecurity</b></a> - systems security, industrial safety, sysadmin, author of decentsecurity.com.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/dakami\"><b>@dakami</b></a> - is one of just seven people with the authority to restore the DNS root keys.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/samykamkar\"><b>@samykamkar</b></a> - is a famous \"grey hat\" hacker, security researcher, creator of the MySpace \"Samy\" worm.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/securityweekly\"><b>@securityweekly</b></a> - founder & CTO of Security Weekly podcast network.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/jack_daniel\"><b>@jack_daniel</b></a> - @SecurityBSides co-founder.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/thegrugq\"><b>@thegrugq</b></a> - Security Researcher.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/matthew_d_green\"><b>@matthew_d_green</b></a> - a cryptographer and professor at Johns Hopkins University.<br>\n</p>\n\n##### :black_small_square: Best Commercial Twitter Accounts\n\n<p>\n&nbsp;&nbsp; <a href=\"https://twitter.com/haveibeenpwned\"><b>@haveibeenpwned</b></a> - check if you have an account that has been compromised in a data breach.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/bugcrowd\"><b>@bugcrowd</b></a> - trusted by more of the Fortune 500 than any other crowdsourced security platform.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/Malwarebytes\"><b>@Malwarebytes</b></a> - most trusted security company. Unmatched threat visibility.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/sansforensics\"><b>@sansforensics</b></a> - the world's leading Digital Forensics and Incident Response provider.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/attcyber\"><b>@attcyber</b></a> - AT&T Cybersecurity’s Edge-to-Edge technologies provide threat intelligence, and more.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/TheManyHatsClub\"><b>@TheManyHatsClub</b></a> - an information security focused podcast and group of individuals from all walks of life.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/hedgehogsec\"><b>@hedgehogsec</b></a> - Hedgehog Cyber. Gibraltar and Manchester's top boutique information security firm.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/NCSC\"><b>@NCSC</b></a> - the National Cyber Security Centre. Helping to make the UK the safest place to live and work online.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/Synacktiv\"><b>@Synacktiv</b></a> - IT security experts.<br>\n</p>\n\n##### :black_small_square: A piece of history\n\n<p>\n&nbsp;&nbsp; <a href=\"http://web.archive.org/web/20190221103734/https://ftp.arl.army.mil/~mike/howto/\"><b>How to Do Things at ARL</b></a> - how to configure modems, scan images, record CD-ROMs, and other.<b>*</b><br>\n</p>\n\n##### :black_small_square: Other\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.youtube.com/watch?v=3QnD2c4Xovk\"><b>Diffie-Hellman Key Exchange (short version)</b></a> - how Diffie-Hellman Key Exchange worked.<br>\n</p>\n\n#### Hacking/Penetration Testing &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: Pentesters arsenal tools\n\n<p>\n&nbsp;&nbsp; <a href=\"http://www.syhunt.com/sandcat/\"><b>Sandcat Browser</b></a> - a penetration-oriented browser with plenty of advanced functionality already built in.<br>\n&nbsp;&nbsp; <a href=\"https://www.metasploit.com/\"><b>Metasploit</b></a> - tool and framework for pentesting system, web and many more.<br>\n&nbsp;&nbsp; <a href=\"https://portswigger.net/burp\"><b>Burp Suite</b></a> - tool for testing web app security, intercepting proxy to replay, inject, scan and fuzz.<br>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project\"><b>OWASP Zed Attack Proxy</b></a> - intercepting proxy to replay, inject, scan and fuzz HTTP requests.<br>\n&nbsp;&nbsp; <a href=\"http://w3af.org/\"><b>w3af</b></a> - is a Web Application Attack and Audit Framework.<br>\n&nbsp;&nbsp; <a href=\"https://mitmproxy.org/\"><b>mitmproxy</b></a> - an interactive TLS-capable intercepting HTTP proxy for penetration testers.<br>\n&nbsp;&nbsp; <a href=\"https://cirt.net/Nikto2\"><b>Nikto2</b></a> - web server scanner which performs comprehensive tests against web servers for multiple items.<br>\n&nbsp;&nbsp; <a href=\"http://sqlmap.org/\"><b>sqlmap</b></a> - tool that automates the process of detecting and exploiting SQL injection flaws.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/lanmaster53/recon-ng\"><b>Recon-ng</b></a> - is a full-featured Web Reconnaissance framework written in Python.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Tib3rius/AutoRecon\"><b>AutoRecon</b></a> - is a network reconnaissance tool which performs automated enumeration of services.<br>\n&nbsp;&nbsp; <a href=\"https://www.faradaysec.com/\"><b>Faraday</b></a> - an Integrated Multiuser Pentest Environment.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/s0md3v/Photon\"><b>Photon</b></a> - incredibly fast crawler designed for OSINT.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/s0md3v/XSStrike\"><b>XSStrike</b></a> - most advanced XSS detection suite.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/1N3/Sn1per\"><b>Sn1per</b></a> - automated pentest framework for offensive security experts.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/future-architect/vuls\"><b>vuls</b></a> - is an agent-less vulnerability scanner for Linux, FreeBSD, and other.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/google/tsunami-security-scanner\"><b>tsunami</b></a> - is a general purpose network security scanner with an extensible plugin system.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/michenriksen/aquatone\"><b>aquatone</b></a> - a tool for domain flyovers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/GitHackTools/BillCipher\"><b>BillCipher</b></a> - information gathering tool for a website or IP address.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Ekultek/WhatWaf\"><b>WhatWaf</b></a> - detect and bypass web application firewalls and protection systems.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/s0md3v/Corsy\"><b>Corsy</b></a> - CORS misconfiguration scanner.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/evyatarmeged/Raccoon\"><b>Raccoon</b></a> - is a high performance offensive security tool for reconnaissance and vulnerability scanning.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Nekmo/dirhunt\"><b>dirhunt</b></a> - find web directories without bruteforce.<br>\n&nbsp;&nbsp; <a href=\"https://www.openwall.com/john/\"><b>John The Ripper</b></a> - is a fast password cracker, currently available for many flavors of Unix, Windows, and other.<br>\n&nbsp;&nbsp; <a href=\"https://hashcat.net/hashcat/\"><b>hashcat</b></a> - world's fastest and most advanced password recovery utility.<br>\n&nbsp;&nbsp; <a href=\"http://lcamtuf.coredump.cx/p0f3/\"><b>p0f</b></a> - is a tool to identify the players behind any incidental TCP/IP communications.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/mozilla/ssh_scan\"><b>ssh_scan</b></a> - a prototype SSH configuration and policy scanner.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/woj-ciech/LeakLooker\"><b>LeakLooker</b></a> - find open databases - powered by Binaryedge.io<br>\n&nbsp;&nbsp; <a href=\"https://github.com/offensive-security/exploitdb\"><b>exploitdb</b></a> - searchable archive from The Exploit Database.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/vulnersCom/getsploit\"><b>getsploit</b></a> - is a command line utility for searching and downloading exploits.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/zardus/ctf-tools\"><b>ctf-tools</b></a> - some setup scripts for security research tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Gallopsled/pwntools\"><b>pwntools</b></a> - CTF framework and exploit development library.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bl4de/security-tools\"><b>security-tools</b></a> - collection of small security tools created mostly in Python. CTFs, pentests and so on.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/leonteale/pentestpackage\"><b>pentestpackage</b></a> - is a package of Pentest scripts.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/dloss/python-pentest-tools\"><b>python-pentest-tools</b></a> - python tools for penetration testers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/fuzzdb-project/fuzzdb\"><b>fuzzdb</b></a> - dictionary of attack patterns and primitives for black-box application fault injection.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/google/AFL\"><b>AFL</b></a> - is a free software fuzzer maintained by Google.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/AFLplusplus/AFLplusplus\"><b>AFL++</b></a> - is AFL with community patches.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/google/syzkaller\"><b>syzkaller</b></a> - is an unsupervised, coverage-guided kernel fuzzer.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/pwndbg/pwndbg\"><b>pwndbg</b></a> - exploit development and reverse engineering with GDB made easy.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/longld/peda\"><b>GDB PEDA</b></a> - Python Exploit Development Assistance for GDB.<br>\n&nbsp;&nbsp; <a href=\"https://www.hex-rays.com/products/ida/index.shtml\"><b>IDA</b></a> - multi-processor disassembler and debugger useful for reverse engineering malware.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/radare/radare2\"><b>radare2</b></a> - framework for reverse-engineering and analyzing binaries.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/threat9/routersploit\"><b>routersploit</b></a> - exploitation framework for embedded devices.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/NationalSecurityAgency/ghidra\"><b>Ghidra</b></a> - is a software reverse engineering (SRE) framework.<br>\n&nbsp;&nbsp; <a href=\"https://cutter.re/\"><b>Cutter</b></a> - is an SRE platform integrating Ghidra's decompiler.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/salesforce/vulnreport\"><b>Vulnreport</b></a> - open-source pentesting management and automation platform by Salesforce Product Security.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/sc0tfree/mentalist\"><b>Mentalist</b></a> - is a graphical tool for custom wordlist generation.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/archerysec/archerysec\"><b>archerysec</b></a> - vulnerability assessment and management helps to perform scans and manage vulnerabilities.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/j3ssie/Osmedeus\"><b>Osmedeus</b></a> - fully automated offensive security tool for reconnaissance and vulnerability scanning.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/beefproject/beef\"><b>beef</b></a> - the browser exploitation framework project.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/NullArray/AutoSploit\"><b>AutoSploit</b></a> - automated mass exploiter.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/TH3xACE/SUDO_KILLER\"><b>SUDO_KILLER</b></a> - is a tool to identify and exploit sudo rules' misconfigurations and vulnerabilities.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/VirusTotal/yara\"><b>yara</b></a> - the pattern matching swiss knife.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/gentilkiwi/mimikatz\"><b>mimikatz</b></a> - a little tool to play with Windows security.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/sherlock-project/sherlock\"><b>sherlock</b></a> - hunt down social media accounts by username across social networks.<br>\n&nbsp;&nbsp; <a href=\"https://owasp.org/www-project-threat-dragon/\"><b>OWASP Threat Dragon</b></a> - is a tool used to create threat model diagrams and to record possible threats.<br>\n</p>\n\n##### :black_small_square: Pentests bookmarks collection\n\n<p>\n&nbsp;&nbsp; <a href=\"http://www.pentest-standard.org/index.php/Main_Page\"><b>PTES</b></a> - the penetration testing execution standard.<br>\n&nbsp;&nbsp; <a href=\"https://www.amanhardikar.com/mindmaps/Practice.html\"><b>Pentests MindMap</b></a> - amazing mind map with vulnerable apps and systems.<br>\n&nbsp;&nbsp; <a href=\"https://www.amanhardikar.com/mindmaps/webapptest.html\"><b>WebApps Security Tests MindMap</b></a> - incredible mind map for WebApps security tests.<br>\n&nbsp;&nbsp; <a href=\"https://brutelogic.com.br/blog/\"><b>Brute XSS</b></a> - master the art of Cross Site Scripting.<br>\n&nbsp;&nbsp; <a href=\"https://portswigger.net/web-security/cross-site-scripting/cheat-sheet\"><b>XSS cheat sheet</b></a> - contains many vectors that can help you bypass WAFs and filters.<br>\n&nbsp;&nbsp; <a href=\"https://jivoi.github.io/2015/07/03/offensive-security-bookmarks/\"><b>Offensive Security Bookmarks</b></a> - security bookmarks collection, all things that author need to pass OSCP.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/coreb1t/awesome-pentest-cheat-sheets\"><b>Awesome Pentest Cheat Sheets</b></a> - collection of the cheat sheets useful for pentesting.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Hack-with-Github/Awesome-Hacking\"><b>Awesome Hacking by HackWithGithub</b></a> - awesome lists for hackers, pentesters and security researchers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/carpedm20/awesome-hacking\"><b>Awesome Hacking by carpedm20</b></a> - a curated list of awesome hacking tutorials, tools and resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/vitalysim/Awesome-Hacking-Resources\"><b>Awesome Hacking Resources</b></a> - collection of hacking/penetration testing resources to make you better.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/enaqx/awesome-pentest\"><b>Awesome Pentest</b></a> - collection of awesome penetration testing resources, tools and other shiny things.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/m4ll0k/Awesome-Hacking-Tools\"><b>Awesome-Hacking-Tools</b></a> - is a curated list of awesome Hacking Tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ksanchezcld/Hacking_Cheat_Sheet\"><b>Hacking Cheat Sheet</b></a> - author hacking and pentesting notes.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/toolswatch/blackhat-arsenal-tools\"><b>blackhat-arsenal-tools</b></a> - official Black Hat arsenal security tools repository.<br>\n&nbsp;&nbsp; <a href=\"https://www.peerlyst.com/posts/the-complete-list-of-infosec-related-cheat-sheets-claus-cramon\"><b>Penetration Testing and WebApp Cheat Sheets</b></a> - the complete list of Infosec related cheat sheets.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/The-Art-of-Hacking/h4cker\"><b>Cyber Security Resources</b></a> - includes thousands of cybersecurity-related references and resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jhaddix/pentest-bookmarks\"><b>Pentest Bookmarks</b></a> - there are a LOT of pentesting blogs.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OlivierLaflamme/Cheatsheet-God\"><b>Cheatsheet-God</b></a> - Penetration Testing Reference Bank - OSCP/PTP & PTX Cheatsheet.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Cyb3rWard0g/ThreatHunter-Playbook\"><b>ThreatHunter-Playbook</b></a> - to aid the development of techniques and hypothesis for hunting campaigns.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/hmaverickadams/Beginner-Network-Pentesting\"><b>Beginner-Network-Pentesting</b></a> - notes for beginner network pentesting course.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rewardone/OSCPRepo\"><b>OSCPRepo</b></a> - is a list of resources that author have been gathering in preparation for the OSCP.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/swisskyrepo/PayloadsAllTheThings\"><b>PayloadsAllTheThings</b></a> - a list of useful payloads and bypass for Web Application Security and Pentest/CTF.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/foospidy/payloads\"><b>payloads</b></a> - git all the Payloads! A collection of web attack payloads.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/payloadbox/command-injection-payload-list\"><b>command-injection-payload-list</b></a> - command injection payload list.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/jakejarvis/awesome-shodan-queries\"><b>Awesome Shodan Search Queries</b></a> - great search queries to plug into Shodan.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/s0md3v/AwesomeXSS\"><b>AwesomeXSS</b></a> - is a collection of Awesome XSS resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/JohnTroony/php-webshells\"><b>php-webshells</b></a> - common php webshells.<br>\n&nbsp;&nbsp; <a href=\"https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/\"><b>Pentesting Tools Cheat Sheet</b></a> - a quick reference high level overview for typical penetration testing.<br>\n&nbsp;&nbsp; <a href=\"https://cheatsheetseries.owasp.org/\"><b>OWASP Cheat Sheet Series</b></a> - is a collection of high value information on specific application security topics.<br>\n&nbsp;&nbsp; <a href=\"https://jeremylong.github.io/DependencyCheck/index.html\"><b>OWASP dependency-check</b></a> - is an open source solution the OWASP Top 10 2013 entry.<br>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/OWASP_Proactive_Controls\"><b>OWASP ProActive Controls</b></a> - OWASP Top 10 Proactive Controls 2018.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/blaCCkHatHacEEkr/PENTESTING-BIBLE\"><b>PENTESTING-BIBLE</b></a> - hacking & penetration testing & red team & cyber security resources.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/nixawk/pentest-wiki\"><b>pentest-wiki</b></a> - is a free online security knowledge library for pentesters/researchers.<br>\n&nbsp;&nbsp; <a href=\"https://media.defcon.org/\"><b>DEF CON Media Server</b></a> - great stuff from DEFCON.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rshipp/awesome-malware-analysis\"><b>Awesome Malware Analysis</b></a> - a curated list of awesome malware analysis tools and resources.<br>\n&nbsp;&nbsp; <a href=\"https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/\"><b>SQL Injection Cheat Sheet</b></a> - detailed technical stuff about the many different variants of the SQL Injection.<br>\n&nbsp;&nbsp; <a href=\"http://kb.entersoft.co.in/\"><b>Entersoft Knowledge Base</b></a> - great and detailed reference about vulnerabilities.<br>\n&nbsp;&nbsp; <a href=\"http://html5sec.org/\"><b>HTML5 Security Cheatsheet</b></a> - a collection of HTML5 related XSS attack vectors.<br>\n&nbsp;&nbsp; <a href=\"http://evuln.com/tools/xss-encoder/\"><b>XSS String Encoder</b></a> - for generating XSS code to check your input validation filters against XSS.<br>\n&nbsp;&nbsp; <a href=\"https://gtfobins.github.io/\"><b>GTFOBins</b></a> - list of Unix binaries that can be exploited by an attacker to bypass local security restrictions.<br>\n&nbsp;&nbsp; <a href=\"https://guif.re/\"><b>Guifre Ruiz Notes</b></a> - collection of security, system, network and pentest cheatsheets.<br>\n&nbsp;&nbsp; <a href=\"http://blog.safebuff.com/2016/07/03/SSRF-Tips/index.html\"><b>SSRF Tips</b></a> - a collection of SSRF Tips.<br>\n&nbsp;&nbsp; <a href=\"http://shell-storm.org/repo/CTF/\"><b>shell-storm repo CTF</b></a> - great archive of CTFs.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/bl4de/ctf\"><b>ctf</b></a> - CTF (Capture The Flag) writeups, code snippets, notes, scripts.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/orangetw/My-CTF-Web-Challenges\"><b>My-CTF-Web-Challenges</b></a> - collection of CTF Web challenges.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OWASP/owasp-mstg\"><b>MSTG</b></a> - The Mobile Security Testing Guide (MSTG) is a comprehensive manual for mobile app security testing.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/sdcampbell/Internal-Pentest-Playbook\"><b>Internal-Pentest-Playbook</b></a> - notes on the most common things for an Internal Network Penetration Test.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/streaak/keyhacks\"><b>KeyHacks</b></a> - shows quick ways in which API keys leaked by a bug bounty program can be checked.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/securitum/research\"><b>securitum/research</b></a> - various Proof of Concepts of security research performed by Securitum.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/juliocesarfort/public-pentesting-reports\"><b>public-pentesting-reports</b></a> - is a list of public pentest reports released by several consulting security groups.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/djadmin/awesome-bug-bounty\"><b>awesome-bug-bounty</b></a> - is a comprehensive curated list of available Bug Bounty.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/ngalongc/bug-bounty-reference\"><b>bug-bounty-reference</b></a> - is a list of bug bounty write-ups.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/devanshbatham/Awesome-Bugbounty-Writeups\"><b>Awesome-Bugbounty-Writeups</b></a> - is a curated list of bugbounty writeups.<br>\n&nbsp;&nbsp; <a href=\"https://pentester.land/list-of-bug-bounty-writeups.html\"><b>Bug bounty writeups</b></a> - list of bug bounty writeups (2012-2020).<br>\n&nbsp;&nbsp; <a href=\"https://hackso.me/\"><b>hackso.me</b></a> - a great journey into security.<br>\n</p>\n\n##### :black_small_square: Backdoors/exploits\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/bartblaze/PHP-backdoors\"><b>PHP-backdoors</b></a> - a collection of PHP backdoors. For educational or testing purposes only.<br>\n</p>\n\n##### :black_small_square: Wordlists and Weak passwords\n\n<p>\n&nbsp;&nbsp; <a href=\"https://weakpass.com/\"><b>Weakpass</b></a> - for any kind of bruteforce find wordlists or unleash the power of them all at once!<br>\n&nbsp;&nbsp; <a href=\"https://hashes.org/\"><b>Hashes.org</b></a> - is a free online hash resolving service incorporating many unparalleled techniques.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/danielmiessler/SecLists\"><b>SecLists</b></a> - collection of multiple types of lists used during security assessments, collected in one place.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/berzerk0/Probable-Wordlists\"><b>Probable-Wordlists</b></a> - sorted by probability originally created for password generation and testing.<br>\n&nbsp;&nbsp; <a href=\"https://wiki.skullsecurity.org/index.php?title=Passwords\"><b>skullsecurity passwords</b></a> - password dictionaries and leaked passwords repository.<br>\n&nbsp;&nbsp; <a href=\"https://bezpieka.org/polski-slownik-premium-polish-wordlist\"><b>Polish PREMIUM Dictionary</b></a> - official dictionary created by the team on the forum bezpieka.org.<b>*</b> <sup><a href=\"https://sourceforge.net/projects/kali-linux/files/Wordlist/\">1</sup><br>\n&nbsp;&nbsp; <a href=\"https://github.com/insidetrust/statistically-likely-usernames\"><b>statistically-likely-usernames</b></a> - wordlists for creating statistically likely username lists.<br>\n</p>\n\n##### :black_small_square: Bounty platforms\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.yeswehack.com/\"><b>YesWeHack</b></a> - bug bounty platform with infosec jobs.<br>\n&nbsp;&nbsp; <a href=\"https://www.openbugbounty.org/\"><b>Openbugbounty</b></a> - allows any security researcher reporting a vulnerability on any website.<br>\n&nbsp;&nbsp; <a href=\"https://www.hackerone.com/\"><b>hackerone</b></a> - global hacker community to surface the most relevant security issues.<br>\n&nbsp;&nbsp; <a href=\"https://www.bugcrowd.com/\"><b>bugcrowd</b></a> - crowdsourced cybersecurity for the enterprise.<br>\n&nbsp;&nbsp; <a href=\"https://crowdshield.com/\"><b>Crowdshield</b></a> - crowdsourced security & bug bounty management.<br>\n&nbsp;&nbsp; <a href=\"https://www.synack.com/\"><b>Synack</b></a> - crowdsourced security & bug bounty programs, crowd security intelligence platform, and more.<br>\n&nbsp;&nbsp; <a href=\"https://hacktrophy.com/en/\"><b>Hacktrophy</b></a> - bug bounty platform.<br>\n</p>\n\n##### :black_small_square: Web Training Apps (local installation)\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/OWASP_Vulnerable_Web_Applications_Directory_Project\"><b>OWASP-VWAD</b></a> - comprehensive and well maintained registry of all known vulnerable web applications.<br>\n&nbsp;&nbsp; <a href=\"http://www.dvwa.co.uk/\"><b>DVWA</b></a> - PHP/MySQL web application that is damn vulnerable.<br>\n&nbsp;&nbsp; <a href=\"https://metasploit.help.rapid7.com/docs/metasploitable-2\"><b>metasploitable2</b></a> - vulnerable web application amongst security researchers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rapid7/metasploitable3\"><b>metasploitable3</b></a> - is a VM that is built from the ground up with a large amount of security vulnerabilities.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/stamparm/DSVW\"><b>DSVW</b></a> - is a deliberately vulnerable web application written in under 100 lines of code.<br>\n&nbsp;&nbsp; <a href=\"https://sourceforge.net/projects/mutillidae/\"><b>OWASP Mutillidae II</b></a> - free, open source, deliberately vulnerable web-application.<br>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/OWASP_Juice_Shop_Project\"><b>OWASP Juice Shop Project</b></a> - the most bug-free vulnerable application in existence.<br>\n&nbsp;&nbsp; <a href=\"https://www.owasp.org/index.php/Projects/OWASP_Node_js_Goat_Project\"><b>OWASP Node js Goat Project</b></a> - OWASP Top 10 security risks apply to web apps developed using Node.js.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/iteratec/juicy-ctf\"><b>juicy-ctf</b></a> - run Capture the Flags and Security Trainings with OWASP Juice Shop.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/OWASP/SecurityShepherd\"><b>SecurityShepherd</b></a> - web and mobile application security training platform.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/opendns/Security_Ninjas_AppSec_Training\"><b>Security Ninjas</b></a> - open source application security training program.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rapid7/hackazon\"><b>hackazon</b></a> - a modern vulnerable web app.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/appsecco/dvna\"><b>dvna</b></a> - damn vulnerable NodeJS application.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/DefectDojo/django-DefectDojo\"><b>django-DefectDojo</b></a> - is an open-source application vulnerability correlation and security orchestration tool.<br>\n&nbsp;&nbsp; <a href=\"https://google-gruyere.appspot.com/\"><b>Google Gruyere</b></a> - web application exploits and defenses.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/amolnaik4/bodhi\"><b>Bodhi</b></a> - is a playground focused on learning the exploitation of client-side web vulnerabilities.<br>\n&nbsp;&nbsp; <a href=\"https://websploit.h4cker.org/\"><b>Websploit</b></a> - single vm lab with the purpose of combining several vulnerable appliations in one environment.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/vulhub/vulhub\"><b>vulhub</b></a> - pre-built Vulnerable Environments based on docker-compose.<br>\n&nbsp;&nbsp; <a href=\"https://rhinosecuritylabs.com/aws/introducing-cloudgoat-2/\"><b>CloudGoat 2</b></a> - the new & improved \"Vulnerable by Design\"\nAWS deployment tool.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/globocom/secDevLabs\"><b>secDevLabs</b></a> - is a laboratory for learning secure web development in a practical manner.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/incredibleindishell/CORS-vulnerable-Lab\"><b>CORS-vulnerable-Lab</b></a> - sample vulnerable code and its exploit code.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/moloch--/RootTheBox\"><b>RootTheBox</b></a> - a Game of Hackers (CTF Scoreboard & Game Manager).<br>\n&nbsp;&nbsp; <a href=\"https://application.security/\"><b>KONTRA</b></a> - application security training (OWASP Top Web & Api).<br>\n</p>\n\n##### :black_small_square: Labs (ethical hacking platforms/trainings/CTFs)\n\n<p>\n&nbsp;&nbsp; <a href=\"https://www.offensive-security.com/\"><b>Offensive Security</b></a> - true performance-based penetration testing training for over a decade.<br>\n&nbsp;&nbsp; <a href=\"https://www.hackthebox.eu/\"><b>Hack The Box</b></a> - online platform allowing you to test your penetration testing skills.<br>\n&nbsp;&nbsp; <a href=\"https://www.hacking-lab.com/index.html\"><b>Hacking-Lab</b></a> - online ethical hacking, computer network and security challenge platform.<br>\n&nbsp;&nbsp; <a href=\"http://pwnable.kr/index.php\"><b>pwnable.kr</b></a> - non-commercial wargame site which provides various pwn challenges.<br>\n&nbsp;&nbsp; <a href=\"https://pwnable.tw/\"><b>Pwnable.tw</b></a> - is a wargame site for hackers to test and expand their binary exploiting skills.<br>\n&nbsp;&nbsp; <a href=\"https://picoctf.com/\"><b>picoCTF</b></a> - is a free computer security game targeted at middle and high school students.<br>\n&nbsp;&nbsp; <a href=\"https://ctflearn.com/\"><b>CTFlearn</b></a> - is an online platform built to help ethical hackers learn and practice their cybersecurity knowledge.<br>\n&nbsp;&nbsp; <a href=\"https://ctftime.org/\"><b>ctftime</b></a> - CTF archive and a place, where you can get some another CTF-related info.<br>\n&nbsp;&nbsp; <a href=\"https://silesiasecuritylab.com/\"><b>Silesia Security Lab</b></a> - high quality security testing services.<br>\n&nbsp;&nbsp; <a href=\"https://practicalpentestlabs.com/\"><b>Practical Pentest Labs</b></a> - pentest lab, take your Hacking skills to the next level.<br>\n&nbsp;&nbsp; <a href=\"https://www.root-me.org/?lang=en\"><b>Root Me</b></a> - the fast, easy, and affordable way to train your hacking skills.<br>\n&nbsp;&nbsp; <a href=\"https://rozwal.to/login\"><b>rozwal.to</b></a> - a great platform to train your pentesting skills.<br>\n&nbsp;&nbsp; <a href=\"https://tryhackme.com/\"><b>TryHackMe</b></a> - learning Cyber Security made easy.<br>\n&nbsp;&nbsp; <a href=\"https://hackxor.net/\"><b>hackxor</b></a> - is a realistic web application hacking game, designed to help players of all abilities develop their skills.<br>\n&nbsp;&nbsp; <a href=\"http://hack-yourself-first.com/\"><b>Hack Yourself First</b></a> - it's full of nasty app sec holes.<br>\n&nbsp;&nbsp; <a href=\"http://overthewire.org/wargames/\"><b>OverTheWire</b></a> - can help you to learn and practice security concepts in the form of fun-filled games.<br>\n&nbsp;&nbsp; <a href=\"https://labs.wizard-security.net/\"><b>Wizard Labs</b></a> - is an online Penetration Testing Lab.<br>\n&nbsp;&nbsp; <a href=\"https://pentesterlab.com/\"><b>PentesterLab</b></a> - provides vulnerable systems that can be used to test and understand vulnerabilities.<br>\n&nbsp;&nbsp; <a href=\"https://ringzer0ctf.com/\"><b>RingZer0</b></a> - tons of challenges designed to test and improve your hacking skills.<br>\n&nbsp;&nbsp; <a href=\"http://www.try2hack.nl/\"><b>try2hack</b></a> - several security-oriented challenges for your entertainment.<br>\n&nbsp;&nbsp; <a href=\"https://www.ubeeri.com/preconfig-labs\"><b>Ubeeri</b></a> - preconfigured lab environments.<br>\n&nbsp;&nbsp; <a href=\"https://lab.pentestit.ru/\"><b>Pentestit</b></a> - emulate IT infrastructures of real companies for legal pen testing and improving pentest skills.<br>\n&nbsp;&nbsp; <a href=\"https://microcorruption.com/login\"><b>Microcorruption</b></a> - reversal challenges done in the web interface.<br>\n&nbsp;&nbsp; <a href=\"https://crackmes.one/\"><b>Crackmes</b></a> - download crackmes to help improve your reverse engineering skills.<br>\n&nbsp;&nbsp; <a href=\"https://domgo.at/cxss/intro\"><b>DomGoat</b></a> - DOM XSS security learning and practicing platform.<br>\n&nbsp;&nbsp; <a href=\"https://chall.stypr.com\"><b>Stereotyped Challenges</b></a> - upgrade your web hacking techniques today!<br>\n&nbsp;&nbsp; <a href=\"https://www.vulnhub.com/\"><b>Vulnhub</b></a> - allows anyone to gain practical 'hands-on' experience in digital security.<br>\n&nbsp;&nbsp; <a href=\"https://w3challs.com/\"><b>W3Challs</b></a> - is a penetration testing training platform, which offers various computer challenges.<br>\n&nbsp;&nbsp; <a href=\"https://ringzer0ctf.com/challenges\"><b>RingZer0 CTF</b></a> - offers you tons of challenges designed to test and improve your hacking skills.<br>\n&nbsp;&nbsp; <a href=\"https://hack.me/\"><b>Hack.me</b></a> - a platform where you can build, host and share vulnerable web apps for educational purposes.<br>\n&nbsp;&nbsp; <a href=\"https://www.hackthis.co.uk/levels/\"><b>HackThis!</b></a> - discover how hacks, dumps and defacements are performed and secure your website.<br>\n&nbsp;&nbsp; <a href=\"https://www.enigmagroup.org/#\"><b>Enigma Group WebApp Training</b></a> - these challenges cover the exploits listed in the OWASP Top 10 Project.<br>\n&nbsp;&nbsp; <a href=\"https://challenges.re/\"><b>Reverse Engineering Challenges</b></a> - challenges, exercises, problems and tasks - by level, by type, and more.<br>\n&nbsp;&nbsp; <a href=\"https://0x00sec.org/\"><b>0x00sec</b></a> - the home of the Hacker - Malware, Reverse Engineering, and Computer Science.<br>\n&nbsp;&nbsp; <a href=\"https://www.wechall.net/challs\"><b>We Chall</b></a> - there are exist a lots of different challenge types.<br>\n&nbsp;&nbsp; <a href=\"https://www.hackergateway.com/\"><b>Hacker Gateway</b></a> - is the go-to place for hackers who want to test their skills.<br>\n&nbsp;&nbsp; <a href=\"https://www.hacker101.com/\"><b>Hacker101</b></a> - is a free class for web security.<br>\n&nbsp;&nbsp; <a href=\"https://contained.af/\"><b>contained.af</b></a> - a stupid game for learning about containers, capabilities, and syscalls.<br>\n&nbsp;&nbsp; <a href=\"http://flaws.cloud/\"><b>flAWS challenge!</b></a> - a series of levels you'll learn about common mistakes and gotchas when using AWS.<br>\n&nbsp;&nbsp; <a href=\"https://cybersecurity.wtf\"><b>CyberSec WTF</b></a> - provides web hacking challenges derived from bounty write-ups.<br>\n&nbsp;&nbsp; <a href=\"https://ctfchallenge.co.uk/login\"><b>CTF Challenge</b></a> - CTF Web App challenges.<br>\n&nbsp;&nbsp; <a href=\"https://capturetheflag.withgoogle.com\"><b>gCTF</b></a> - most of the challenges used in the Google CTF 2017.<br>\n&nbsp;&nbsp; <a href=\"https://www.hackthissite.org/pages/index/index.php\"><b>Hack This Site</b></a> - is a free, safe and legal training ground for hackers.<br>\n&nbsp;&nbsp; <a href=\"https://attackdefense.com\"><b>Attack & Defense</b></a> - is a browser-based cloud labs.<br>\n&nbsp;&nbsp; <a href=\"https://cryptohack.org/\"><b>Cryptohack</b></a> - a fun platform for learning modern cryptography.<br>\n&nbsp;&nbsp; <a href=\"https://cryptopals.com/\"><b>Cryptopals</b></a> - the cryptopals crypto challenges.<br>\n</p>\n\n##### :black_small_square: CTF platforms\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/facebook/fbctf\"><b>fbctf</b></a> - platform to host Capture the Flag competitions.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/google/ctfscoreboard\"><b>ctfscoreboard</b></a> - scoreboard for Capture The Flag competitions.<br>\n</p>\n\n##### :black_small_square: Other resources\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/bugcrowd/bugcrowd_university\"><b>Bugcrowd University</b></a> - open source education content for the researcher community.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/rewardone/OSCPRepo\"><b>OSCPRepo</b></a> - a list of resources and scripts that I have been gathering in preparation for the OSCP.<br>\n&nbsp;&nbsp; <a href=\"https://medium.com/@cxosmo/owasp-top-10-real-world-examples-part-1-a540c4ea2df5\"><b>OWASP Top 10: Real-World Examples</b></a> - test your web apps with real-world examples (two-part series).<br>\n&nbsp;&nbsp; <a href=\"http://phrack.org/index.html\"><b>phrack.org</b></a> - an awesome collection of articles from several respected hackers and other thinkers.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/Gr1mmie/Practical-Ethical-Hacking-Resources\"><b>Practical-Ethical-Hacking-Resources</b></a> - compilation of resources from TCM's Udemy Course.<br>\n</p>\n\n#### Your daily knowledge and news &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### :black_small_square: RSS Readers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://feedly.com/\"><b>Feedly</b></a> - organize, read and share what matters to you.<br>\n&nbsp;&nbsp; <a href=\"https://www.inoreader.com/\"><b>Inoreader</b></a> - similar to feedly with a support for filtering what you fetch from rss.<br>\n</p>\n\n##### :black_small_square: IRC Channels\n\n<p>\n&nbsp;&nbsp; <a href=\"https://wiki.hackerspaces.org/IRC_Channel\"><b>#hackerspaces</b></a> - hackerspace IRC channels.<br>\n</p>\n\n##### :black_small_square: Security\n\n<p>\n&nbsp;&nbsp; <a href=\"https://thehackernews.com/\"><b>The Hacker News</b></a> - leading news source dedicated to promoting awareness for security experts and hackers.<br>\n&nbsp;&nbsp; <a href=\"https://latesthackingnews.com/\"><b>Latest Hacking News</b></a> - provides the latest hacking news, exploits and vulnerabilities for ethical hackers.<br>\n&nbsp;&nbsp; <a href=\"https://securitynewsletter.co/\"><b>Security Newsletter</b></a> - security news as a weekly digest (email notifications).<br>\n&nbsp;&nbsp; <a href=\"https://security.googleblog.com/\"><b>Google Online Security Blog</b></a> - the latest news and insights from Google on security and safety on the Internet.<br>\n&nbsp;&nbsp; <a href=\"https://blog.qualys.com/\"><b>Qualys Blog</b></a> - expert network security guidance and news.<br>\n&nbsp;&nbsp; <a href=\"https://www.darkreading.com/\"><b>DARKReading</b></a> - connecting the Information Security Community.<br>\n&nbsp;&nbsp; <a href=\"https://www.darknet.org.uk/\"><b>Darknet</b></a> - latest hacking tools, hacker news, cybersecurity best practices, ethical hacking & pen-testing.<br>\n&nbsp;&nbsp; <a href=\"https://twitter.com/disclosedh1\"><b>publiclyDisclosed</b></a> - public disclosure watcher who keeps you up to date about the recently disclosed bugs.<br>\n&nbsp;&nbsp; <a href=\"https://www.reddit.com/r/hacking/\"><b>Reddit - Hacking</b></a> - a subreddit dedicated to hacking and hackers.<br>\n&nbsp;&nbsp; <a href=\"https://packetstormsecurity.com/\"><b>Packet Storm</b></a> - information security services, news, files, tools, exploits, advisories and whitepapers.<br>\n&nbsp;&nbsp; <a href=\"https://sekurak.pl/\"><b>Sekurak</b></a> - about security, penetration tests, vulnerabilities and many others (PL/EN).<br>\n&nbsp;&nbsp; <a href=\"https://nfsec.pl/\"><b>nf.sec</b></a> - basic aspects and mechanisms of Linux operating system security (PL).<br>\n</p>\n\n##### :black_small_square: Other/All-in-one\n\n<p>\n&nbsp;&nbsp; <a href=\"https://changelog.com/\"><b>Changelog</b></a> - is a community of hackers; news & podcasts for developers and hackers.<br>\n</p>\n\n#### Other Cheat Sheets &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n###### Build your own DNS Servers\n\n<p>\n&nbsp;&nbsp; <a href=\"https://calomel.org/unbound_dns.html\"><b>Unbound DNS Tutorial</b></a> - a validating, recursive, and caching DNS server.<br>\n&nbsp;&nbsp; <a href=\"https://www.ctrl.blog/entry/knot-dns-resolver-tutorial.html\"><b>Knot Resolver on Fedora</b></a> - how to get faster and more secure DNS resolution with Knot Resolver on Fedora.<br>\n&nbsp;&nbsp; <a href=\"https://www.aaflalo.me/2018/10/tutorial-setup-dns-over-https-server/\"><b>DNS-over-HTTPS</b></a> - tutorial to setup your own DNS-over-HTTPS (DoH) server.<br>\n&nbsp;&nbsp; <a href=\"https://hacks.mozilla.org/2018/05/a-cartoon-intro-to-dns-over-https/\"><b>dns-over-https</b></a> - a cartoon intro to DNS over HTTPS.<br>\n&nbsp;&nbsp; <a href=\"https://www.aaflalo.me/2019/03/dns-over-tls/\"><b>DNS-over-TLS</b></a> - following to your DoH server, setup your DNS-over-TLS (DoT) server.<br>\n&nbsp;&nbsp; <a href=\"https://zwischenzugs.com/2018/01/26/how-and-why-i-run-my-own-dns-servers/\"><b>DNS Servers</b></a> - how (and why) i run my own DNS Servers.<br>\n</p>\n\n###### Build your own Certificate Authority\n\n<p>\n&nbsp;&nbsp; <a href=\"https://jamielinux.com/docs/openssl-certificate-authority/\"><b>OpenSSL Certificate Authority</b></a> - build your own certificate authority (CA) using the OpenSSL tools.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/smallstep/certificates\"><b>step-ca Certificate Authority</b></a> - build your own certificate authority (CA) using open source step-ca.<br>\n</p>\n\n###### Build your own System/Virtual Machine\n\n<p>\n&nbsp;&nbsp; <a href=\"https://github.com/cfenollosa/os-tutorial\"><b>os-tutorial</b></a> - how to create an OS from scratch.<br>\n&nbsp;&nbsp; <a href=\"https://justinmeiners.github.io/lc3-vm/\"><b>Write your Own Virtual Machine</b></a> - how to write your own virtual machine (VM).<br>\n&nbsp;&nbsp; <a href=\"https://github.com/cirosantilli/x86-bare-metal-examples\"><b>x86 Bare Metal Examples</b></a> - dozens of minimal operating systems to learn x86 system programming.<br>\n&nbsp;&nbsp; <a href=\"https://github.com/djhworld/simple-computer\"><b>simple-computer</b></a> - the scott CPU from \"But How Do It Know?\" by J. Clark Scott.<br>\n&nbsp;&nbsp; <a href=\"https://littleosbook.github.io/\"><b>littleosbook</b></a> - the little book about OS development.<br>\n</p>\n\n###### DNS Servers list (privacy)\n\n| <b><u>IP</u></b> | <b><u>URL</u></b> |\n| :---         | :---         |\n| **`84.200.69.80`** | [dns.watch](https://dns.watch/) |\n| **`94.247.43.254`** | [opennic.org](https://www.opennic.org/) |\n| **`64.6.64.6`** | [verisign.com](https://www.verisign.com/en_US/security-services/public-dns/index.xhtml) |\n| **`89.233.43.71`** | [censurfridns.dk](https://blog.uncensoreddns.org/) |\n| **`1.1.1.1`** | [cloudflare.com](https://1.1.1.1/) |\n| **`94.130.110.185`** | [dnsprivacy.at](https://dnsprivacy.at/) |\n\n###### TOP Browser extensions\n\n| <b><u>Extension name</u></b> | <b><u>Description</u></b> |\n| :---         | :---         |\n| **`IPvFoo`** | Display the server IP address and HTTPS information across all page elements. |\n| **`FoxyProxy`** | Simplifies configuring browsers to access proxy-servers. |\n| **`HTTPS Everywhere`** | Automatically use HTTPS security on many sites. |\n| **`uMatrix`** | Point & click to forbid/allow any class of requests made by your browser. |\n| **`uBlock Origin`** | An efficient blocker: easy on memory and CPU footprint. |\n| **`Session Buddy`** | Manage browser tabs and bookmarks with ease. |\n| **`SuperSorter`** | Sort bookmarks recursively, delete duplicates, merge folders, and more. |\n| **`Clear Cache`** | Clear your cache and browsing data. |\n| **`d3coder`** | Encoding/Decoding plugin for various types of encoding. |\n| **`Web Developer`** | Adds a toolbar button with various web developer tools. |\n| **`ThreatPinch Lookup`** | Add threat intelligence hover tool tips. |\n\n###### TOP Burp extensions\n\n| <b><u>Extension name</u></b> | <b><u>Description</u></b> |\n| :---         | :---         |\n| **`Active Scan++`** | Extends Burp's active and passive scanning capabilities. |\n| **`Autorize`** | Automatically detects authorization enforcement. |\n| **`AuthMatrix`** | A simple matrix grid to define the desired levels of access privilege. |\n| **`Logger++`** | Logs requests and responses for all Burp tools in a sortable table. |\n| **`Bypass WAF`** | Adds headers useful for bypassing some WAF devices. |\n| **`JSON Beautifier`** | Beautifies JSON content in the HTTP message viewer. |\n| **`JSON Web Tokens`** | Enables Burp to decode and manipulate JSON web tokens. |\n| **`CSP Auditor`** | Displays CSP headers for responses, and passively reports CSP weaknesses. |\n| **`CSP-Bypass`** | Passively scans for CSP headers that contain known bypasses. |\n| **`Hackvertor`** | Converts data using a tag-based configuration to apply various encoding. |\n| **`HTML5 Auditor`** | Scans for usage of risky HTML5 features. |\n| **`Software Vulnerability Scanner`** | Vulnerability scanner based on vulners.com audit API. |\n| **`Turbo Intruder`** | Is a powerful bruteforcing tool. |\n| **`Upload Scanner`** | Upload a number of different file types, laced with different forms of payload. |\n\n###### Hack Mozilla Firefox address bar\n\nIn Firefox's address bar, you can limit results by typing special characters before or after your term:\n\n- `^` - for matches in your browsing history\n- `*` - for matches in your bookmarks.\n- `%` - for matches in your currently open tabs.\n- `#` - for matches in page titles.\n- `@` - for matches in web addresses.\n\n###### Chrome hidden commands\n\n- `chrome://chrome-urls` - list of all commands\n- `chrome://flags` - enable experiments and development features\n- `chrome://interstitials` - errors and warnings\n- `chrome://net-internals` - network internals (events, dns, cache)\n- `chrome://network-errors` - network errors\n- `chrome://net-export` - start logging future network activity to a file\n- `chrome://safe-browsing` - safe browsing options\n- `chrome://user-actions` - record all user actions\n- `chrome://restart` - restart chrome\n- `chrome://dino` - ERR_INTERNET_DISCONNECTED...\n- `cache:<website-address>` - view the cached version of the web page\n\n###### Bypass WAFs by Shortening IP Address (by [0xInfection](https://twitter.com/0xInfection))\n\nIP addresses can be shortened by dropping the zeroes:\n\n```\nhttp://1.0.0.1 → http://1.1\nhttp://127.0.0.1 → http://127.1\nhttp://192.168.0.1 → http://192.168.1\n\nhttp://0xC0A80001 or http://3232235521 → 192.168.0.1\nhttp://192.168.257 → 192.168.1.1\nhttp://192.168.516 → 192.168.2.4\n```\n\n  > This bypasses WAF filters for SSRF, open-redirect, etc where any IP as input gets blacklisted.\n\nFor more information please see [How to Obscure Any URL](http://www.pc-help.org/obscure.htm) and [Magic IP Address Shortcuts](https://stuff-things.net/2014/09/25/magic-ip-address-shortcuts/).\n\n###### Hashing, encryption and encoding (by [Michal Špaček](https://twitter.com/spazef0rze))\n\n_Hashing_\n\nplaintext :arrow_right: hash<br>\nhash :no_entry: plaintext\n\n_Symmetric encryption_\n\nplaintext :arrow_right: :key: :arrow_right: ciphertext<br>\nplaintext :arrow_left: :key: :arrow_left: ciphertext<br>\n(:key: shared key)\n\n_Asymmetric encryption_\n\nplaintext :arrow_right: :key: :arrow_right: ciphertext<br>\nplaintext :arrow_left: :part_alternation_mark: :arrow_left: ciphertext<br>\n(:key: public key, :part_alternation_mark: private key)<br>\n\n_Encoding_\n\ntext :arrow_right: encoded<br>\ntext :arrow_left: encoded\n\n#### Shell One-liners &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### Table of Contents\n\n  * [terminal](#tool-terminal)\n  * [busybox](#tool-busybox)\n  * [mount](#tool-mount)\n  * [fuser](#tool-fuser)\n  * [lsof](#tool-lsof)\n  * [ps](#tool-ps)\n  * [top](#tool-top)\n  * [vmstat](#tool-vmstat)\n  * [iostat](#tool-iostat)\n  * [strace](#tool-strace)\n  * [kill](#tool-kill)\n  * [find](#tool-find)\n  * [diff](#tool-diff)\n  * [vimdiff](#tool-vimdiff)\n  * [tail](#tool-tail)\n  * [cpulimit](#tool-cpulimit)\n  * [pwdx](#tool-pwdx)\n  * [tr](#tool-tr)\n  * [chmod](#tool-chmod)\n  * [who](#tool-who)\n  * [last](#tool-last)\n  * [screen](#tool-screen)\n  * [script](#tool-script)\n  * [du](#tool-du)\n  * [inotifywait](#tool-inotifywait)\n  * [openssl](#tool-openssl)\n  * [secure-delete](#tool-secure-delete)\n  * [dd](#tool-dd)\n  * [gpg](#tool-gpg)\n  * [system-other](#tool-system-other)\n  * [curl](#tool-curl)\n  * [httpie](#tool-httpie)\n  * [ssh](#tool-ssh)\n  * [linux-dev](#tool-linux-dev)\n  * [tcpdump](#tool-tcpdump)\n  * [tcpick](#tool-tcpick)\n  * [ngrep](#tool-ngrep)\n  * [hping3](#tool-hping3)\n  * [nmap](#tool-nmap)\n  * [netcat](#tool-netcat)\n  * [socat](#tool-socat)\n  * [p0f](#tool-p0f)\n  * [gnutls-cli](#tool-gnutls-cli)\n  * [netstat](#tool-netstat)\n  * [rsync](#tool-rsync)\n  * [host](#tool-host)\n  * [dig](#tool-dig)\n  * [certbot](#tool-certbot)\n  * [network-other](#tool-network-other)\n  * [git](#tool-git)\n  * [awk](#tool-awk)\n  * [sed](#tool-sed)\n  * [grep](#tool-grep)\n  * [perl](#tool-perl)\n\n##### Tool: [terminal](https://en.wikipedia.org/wiki/Linux_console)\n\n###### Reload shell without exit\n\n```bash\nexec $SHELL -l\n```\n\n###### Close shell keeping all subprocess running\n\n```bash\ndisown -a && exit\n```\n\n###### Exit without saving shell history\n\n```bash\nkill -9 $$\nunset HISTFILE && exit\n```\n\n###### Perform a branching conditional\n\n```bash\ntrue && echo success\nfalse || echo failed\n```\n\n###### Pipe stdout and stderr to separate commands\n\n```bash\nsome_command > >(/bin/cmd_for_stdout) 2> >(/bin/cmd_for_stderr)\n```\n\n###### Redirect stdout and stderr each to separate files and print both to the screen\n\n```bash\n(some_command 2>&1 1>&3 | tee errorlog ) 3>&1 1>&2 | tee stdoutlog\n```\n\n###### List of commands you use most often\n\n```bash\nhistory | \\\nawk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] \" \" CMD[a]/count*100 \"% \" a;}' | \\\ngrep -v \"./\" | \\\ncolumn -c3 -s \" \" -t | \\\nsort -nr | nl |  head -n 20\n```\n\n###### Sterilize bash history\n\n```bash\nfunction sterile() {\n\n  history | awk '$2 != \"history\" { $1=\"\"; print $0 }' | egrep -vi \"\\\ncurl\\b+.*(-E|--cert)\\b+.*\\b*|\\\ncurl\\b+.*--pass\\b+.*\\b*|\\\ncurl\\b+.*(-U|--proxy-user).*:.*\\b*|\\\ncurl\\b+.*(-u|--user).*:.*\\b*\n.*(-H|--header).*(token|auth.*)\\b+.*|\\\nwget\\b+.*--.*password\\b+.*\\b*|\\\nhttp.?://.+:.+@.*\\\n\" > $HOME/histbuff; history -r $HOME/histbuff;\n\n}\n\nexport PROMPT_COMMAND=\"sterile\"\n```\n\n  > Look also: [A naive utility to censor credentials in command history](https://github.com/lbonanomi/go/blob/master/revisionist.go).\n\n###### Quickly backup a file\n\n```bash\ncp filename{,.orig}\n```\n\n###### Empty a file (truncate to 0 size)\n\n```bash\n>filename\n```\n\n###### Delete all files in a folder that don't match a certain file extension\n\n```bash\nrm !(*.foo|*.bar|*.baz)\n```\n\n###### Pass multi-line string to a file\n\n```bash\n# cat  >filename ... - overwrite the file\n# cat >>filename ... - append to a file\ncat > filename << __EOF__\ndata data data\n__EOF__\n```\n\n###### Edit a file on a remote host using vim\n\n```bash\nvim scp://user@host//etc/fstab\n```\n\n###### Create a directory and change into it at the same time\n\n```bash\nmkd() { mkdir -p \"$@\" && cd \"$@\"; }\n```\n\n###### Convert uppercase files to lowercase files\n\n```bash\nrename 'y/A-Z/a-z/' *\n```\n\n###### Print a row of characters across the terminal\n\n```bash\nprintf \"%`tput cols`s\" | tr ' ' '#'\n```\n\n###### Show shell history without line numbers\n\n```bash\nhistory | cut -c 8-\nfc -l -n 1 | sed 's/^\\s*//'\n```\n\n###### Run command(s) after exit session\n\n```bash\ncat > /etc/profile << __EOF__\n_after_logout() {\n\n  username=$(whoami)\n\n  for _pid in $(ps afx | grep sshd | grep \"$username\" | awk '{print $1}') ; do\n\n    kill -9 $_pid\n\n  done\n\n}\ntrap _after_logout EXIT\n__EOF__\n```\n\n###### Generate a sequence of numbers\n\n```bash\nfor ((i=1; i<=10; i+=2)) ; do echo $i ; done\n# alternative: seq 1 2 10\n\nfor ((i=5; i<=10; ++i)) ; do printf '%02d\\n' $i ; done\n# alternative: seq -w 5 10\n\nfor i in {1..10} ; do echo $i ; done\n```\n\n###### Simple Bash filewatching\n\n```bash\nunset MAIL; export MAILCHECK=1; export MAILPATH='$FILE_TO_WATCH?$MESSAGE'\n```\n\n---\n\n##### Tool: [busybox](https://www.busybox.net/)\n\n###### Static HTTP web server\n\n```bash\nbusybox httpd -p $PORT -h $HOME [-c httpd.conf]\n```\n\n___\n\n##### Tool: [mount](https://en.wikipedia.org/wiki/Mount_(Unix))\n\n###### Mount a temporary ram partition\n\n```bash\nmount -t tmpfs tmpfs /mnt -o size=64M\n```\n\n  * `-t` - filesystem type\n  * `-o` - mount options\n\n###### Remount a filesystem as read/write\n\n```bash\nmount -o remount,rw /\n```\n\n___\n\n##### Tool: [fuser](https://en.wikipedia.org/wiki/Fuser_(Unix))\n\n###### Show which processes use the files/directories\n\n```bash\nfuser /var/log/daemon.log\nfuser -v /home/supervisor\n```\n\n###### Kills a process that is locking a file\n\n```bash\nfuser -ki filename\n```\n\n  * `-i` - interactive option\n\n###### Kills a process that is locking a file with specific signal\n\n```bash\nfuser -k -HUP filename\n```\n\n  * `--list-signals` - list available signal names\n\n###### Show what PID is listening on specific port\n\n```bash\nfuser -v 53/udp\n```\n\n###### Show all processes using the named filesystems or block device\n\n```bash\nfuser -mv /var/www\n```\n\n___\n\n##### Tool: [lsof](https://en.wikipedia.org/wiki/Lsof)\n\n###### Show process that use internet connection at the moment\n\n```bash\nlsof -P -i -n\n```\n\n###### Show process that use specific port number\n\n```bash\nlsof -i tcp:443\n```\n\n###### Lists all listening ports together with the PID of the associated process\n\n```bash\nlsof -Pan -i tcp -i udp\n```\n\n###### List all open ports and their owning executables\n\n```bash\nlsof -i -P | grep -i \"listen\"\n```\n\n###### Show all open ports\n\n```bash\nlsof -Pnl -i\n```\n\n###### Show open ports (LISTEN)\n\n```bash\nlsof -Pni4 | grep LISTEN | column -t\n```\n\n###### List all files opened by a particular command\n\n```bash\nlsof -c \"process\"\n```\n\n###### View user activity per directory\n\n```bash\nlsof -u username -a +D /etc\n```\n\n###### Show 10 largest open files\n\n```bash\nlsof / | \\\nawk '{ if($7 > 1048576) print $7/1048576 \"MB\" \" \" $9 \" \" $1 }' | \\\nsort -n -u | tail | column -t\n```\n\n###### Show current working directory of a process\n\n```bash\nlsof -p <PID> | grep cwd\n```\n\n___\n\n##### Tool: [ps](https://en.wikipedia.org/wiki/Ps_(Unix))\n\n###### Show a 4-way scrollable process tree with full details\n\n```bash\nps awwfux | less -S\n```\n\n###### Processes per user counter\n\n```bash\nps hax -o user | sort | uniq -c | sort -r\n```\n\n###### Show all processes by name with main header\n\n```bash\nps -lfC nginx\n```\n\n___\n\n##### Tool: [find](https://en.wikipedia.org/wiki/Find_(Unix))\n\n###### Find files that have been modified on your system in the past 60 minutes\n\n```bash\nfind / -mmin 60 -type f\n```\n\n###### Find all files larger than 20M\n\n```bash\nfind / -type f -size +20M\n```\n\n###### Find duplicate files (based on MD5 hash)\n\n```bash\nfind -type f -exec md5sum '{}' ';' | sort | uniq --all-repeated=separate -w 33\n```\n\n###### Change permission only for files\n\n```bash\ncd /var/www/site && find . -type f -exec chmod 766 {} \\;\ncd /var/www/site && find . -type f -exec chmod 664 {} +\n```\n\n###### Change permission only for directories\n\n```bash\ncd /var/www/site && find . -type d -exec chmod g+x {} \\;\ncd /var/www/site && find . -type d -exec chmod g+rwx {} +\n```\n\n###### Find files and directories for specific user/group\n\n```bash\n# User:\nfind . -user <username> -print\nfind /etc -type f -user <username> -name \"*.conf\"\n\n# Group:\nfind /opt -group <group>\nfind /etc -type f -group <group> -iname \"*.conf\"\n```\n\n###### Find files and directories for all without specific user/group\n\n```bash\n# User:\nfind . \\! -user <username> -print\n\n# Group:\nfind . \\! -group <group>\n```\n\n###### Looking for files/directories that only have certain permission\n\n```bash\n# User\nfind . -user <username> -perm -u+rw # -rw-r--r--\nfind /home -user $(whoami) -perm 777 # -rwxrwxrwx\n\n# Group:\nfind /home -type d -group <group> -perm 755 # -rwxr-xr-x\n```\n\n###### Delete older files than 60 days\n\n```bash\nfind . -type f -mtime +60 -delete\n```\n\n###### Recursively remove all empty sub-directories from a directory\n\n```bash\nfind . -depth  -type d  -empty -exec rmdir {} \\;\n```\n\n###### How to find all hard links to a file\n\n```bash\nfind </path/to/dir> -xdev -samefile filename\n```\n\n###### Recursively find the latest modified files\n\n```bash\nfind . -type f -exec stat --format '%Y :%y %n' \"{}\" \\; | sort -nr | cut -d: -f2- | head\n```\n\n###### Recursively find/replace of a string with sed\n\n```bash\nfind . -not -path '*/\\.git*' -type f -print0 | xargs -0 sed -i 's/foo/bar/g'\n```\n\n###### Recursively find/replace of a string in directories and file names\n\n```bash\nfind . -depth -name '*test*' -execdir bash -c 'mv -v \"$1\" \"${1//foo/bar}\"' _ {} \\;\n```\n\n###### Recursively find suid executables\n\n```bash\nfind / \\( -perm -4000 -o -perm -2000 \\) -type f -exec ls -la {} \\;\n```\n\n___\n\n##### Tool: [top](https://en.wikipedia.org/wiki/Top_(software))\n\n###### Use top to monitor only all processes with the specific string\n\n```bash\ntop -p $(pgrep -d , <str>)\n```\n\n  * `<str>` - process containing string (eg. nginx, worker)\n\n___\n\n##### Tool: [vmstat](https://en.wikipedia.org/wiki/Vmstat)\n\n###### Show current system utilization (fields in kilobytes)\n\n```bash\nvmstat 2 20 -t -w\n```\n\n  * `2` - number of times with a defined time interval (delay)\n  * `20` - each execution of the command (count)\n  * `-t` - show timestamp\n  * `-w` - wide output\n  * `-S M` - output of the fields in megabytes instead of kilobytes\n\n###### Show current system utilization will get refreshed every 5 seconds\n\n```bash\nvmstat 5 -w\n```\n\n###### Display report a summary of disk operations\n\n```bash\nvmstat -D\n```\n\n###### Display report of event counters and memory stats\n\n```bash\nvmstat -s\n```\n\n###### Display report about kernel objects stored in slab layer cache\n\n```bash\nvmstat -m\n```\n\n##### Tool: [iostat](https://en.wikipedia.org/wiki/Iostat)\n\n###### Show information about the CPU usage, and I/O statistics about all the partitions\n\n```bash\niostat 2 10 -t -m\n```\n\n  * `2` - number of times with a defined time interval (delay)\n  * `10` - each execution of the command (count)\n  * `-t` - show timestamp\n  * `-m` - fields in megabytes (`-k` - in kilobytes, default)\n\n###### Show information only about the CPU utilization\n\n```bash\niostat 2 10 -t -m -c\n```\n\n###### Show information only about the disk utilization\n\n```bash\niostat 2 10 -t -m -d\n```\n\n###### Show information only about the LVM utilization\n\n```bash\niostat -N\n```\n\n___\n\n##### Tool: [strace](https://en.wikipedia.org/wiki/Strace)\n\n###### Track with child processes\n\n```bash\n# 1)\nstrace -f -p $(pidof glusterfsd)\n\n# 2)\nstrace -f $(pidof php-fpm | sed 's/\\([0-9]*\\)/\\-p \\1/g')\n```\n\n###### Track process with 30 seconds limit\n\n```bash\ntimeout 30 strace $(< /var/run/zabbix/zabbix_agentd.pid)\n```\n\n###### Track processes and redirect output to a file\n\n```bash\nps auxw | grep '[a]pache' | awk '{print \" -p \" $2}' | \\\nxargs strace -o /tmp/strace-apache-proc.out\n```\n\n###### Track with print time spent in each syscall and limit length of print strings\n\n```bash\nps auxw | grep '[i]init_policy' | awk '{print \" -p \" $2}' | \\\nxargs strace -f -e trace=network -T -s 10000\n```\n\n###### Track the open request of a network port\n\n```bash\nstrace -f -e trace=bind nc -l 80\n```\n\n###### Track the open request of a network port (show TCP/UDP)\n\n```bash\nstrace -f -e trace=network nc -lu 80\n```\n\n___\n\n##### Tool: [kill](https://en.wikipedia.org/wiki/Kill_(command))\n\n###### Kill a process running on port\n\n```bash\nkill -9 $(lsof -i :<port> | awk '{l=$2} END {print l}')\n```\n\n___\n\n##### Tool: [diff](https://en.wikipedia.org/wiki/Diff)\n\n###### Compare two directory trees\n\n```bash\ndiff <(cd directory1 && find | sort) <(cd directory2 && find | sort)\n```\n\n###### Compare output of two commands\n\n```bash\ndiff <(cat /etc/passwd) <(cut -f2 /etc/passwd)\n```\n\n___\n\n##### Tool: [vimdiff](http://vimdoc.sourceforge.net/htmldoc/diff.html)\n\n###### Highlight the exact differences, based on characters and words\n\n```bash\nvimdiff file1 file2\n```\n\n###### Compare two JSON files\n\n```bash\nvimdiff <(jq -S . A.json) <(jq -S . B.json)\n```\n\n###### Compare Hex dump\n\n```bash\nd(){ vimdiff <(f $1) <(f $2);};f(){ hexdump -C $1 | cut -d' ' -f3- | tr -s ' ';}; d ~/bin1 ~/bin2\n```\n\n###### diffchar\n\nSave [diffchar](https://raw.githubusercontent.com/vim-scripts/diffchar.vim/master/plugin/diffchar.vim) @ `~/.vim/plugins`\n\nClick `F7` to switch between diff modes\n\nUsefull `vimdiff` commands:\n\n* `qa` to exit all windows\n* `:vertical resize 70` to resize window\n* set window width `Ctrl+W [N columns]+(Shift+)<\\>`\n\n___\n\n##### Tool: [tail](https://en.wikipedia.org/wiki/Tail_(Unix))\n\n###### Annotate tail -f with timestamps\n\n```bash\ntail -f file | while read ; do echo \"$(date +%T.%N) $REPLY\" ; done\n```\n\n###### Analyse an Apache access log for the most common IP addresses\n\n```bash\ntail -10000 access_log | awk '{print $1}' | sort | uniq -c | sort -n | tail\n```\n\n###### Analyse web server log and show only 5xx http codes\n\n```bash\ntail -n 100 -f /path/to/logfile | grep \"HTTP/[1-2].[0-1]\\\" [5]\"\n```\n\n___\n\n##### Tool: [tar](https://en.wikipedia.org/wiki/Tar_(computing))\n\n###### System backup with exclude specific directories\n\n```bash\ncd /\ntar -czvpf /mnt/system$(date +%d%m%Y%s).tgz --directory=/ \\\n--exclude=proc/* --exclude=sys/* --exclude=dev/* --exclude=mnt/* .\n```\n\n###### System backup with exclude specific directories (pigz)\n\n```bash\ncd /\ntar cvpf /backup/snapshot-$(date +%d%m%Y%s).tgz --directory=/ \\\n--exclude=proc/* --exclude=sys/* --exclude=dev/* \\\n--exclude=mnt/* --exclude=tmp/* --use-compress-program=pigz .\n```\n\n___\n\n##### Tool: [dump](https://en.wikipedia.org/wiki/Dump_(program))\n\n###### System backup to file\n\n```bash\ndump -y -u -f /backup/system$(date +%d%m%Y%s).lzo /\n```\n\n###### Restore system from lzo file\n\n```bash\ncd /\nrestore -rf /backup/system$(date +%d%m%Y%s).lzo\n```\n\n___\n\n##### Tool: [cpulimit](http://cpulimit.sourceforge.net/)\n\n###### Limit the cpu usage of a process\n\n```bash\ncpulimit -p pid -l 50\n```\n\n___\n\n##### Tool: [pwdx](https://www.cyberciti.biz/faq/unix-linux-pwdx-command-examples-usage-syntax/)\n\n###### Show current working directory of a process\n\n```bash\npwdx <pid>\n```\n\n___\n\n##### Tool: [taskset](https://www.cyberciti.biz/faq/taskset-cpu-affinity-command/)\n\n###### Start a command on only one CPU core\n\n```bash\ntaskset -c 0 <command>\n```\n\n___\n\n##### Tool: [tr](https://en.wikipedia.org/wiki/Tr_(Unix))\n\n###### Show directories in the PATH, one per line\n\n```bash\ntr : '\\n' <<<$PATH\n```\n\n___\n\n##### Tool: [chmod](https://en.wikipedia.org/wiki/Chmod)\n\n###### Remove executable bit from all files in the current directory\n\n```bash\nchmod -R -x+X *\n```\n\n###### Restore permission for /bin/chmod\n\n```bash\n# 1:\ncp /bin/ls chmod.01\ncp /bin/chmod chmod.01\n./chmod.01 700 file\n\n# 2:\n/bin/busybox chmod 0700 /bin/chmod\n\n# 3:\nsetfacl --set u::rwx,g::---,o::--- /bin/chmod\n```\n\n___\n\n##### Tool: [who](https://en.wikipedia.org/wiki/Who_(Unix))\n\n###### Find last reboot time\n\n```bash\nwho -b\n```\n\n###### Detect a user sudo-su'd into the current shell\n\n```bash\n[[ $(who -m | awk '{ print $1 }') == $(whoami) ]] || echo \"You are su-ed to $(whoami)\"\n```\n\n___\n\n##### Tool: [last](https://www.howtoforge.com/linux-last-command/)\n\n###### Was the last reboot a panic?\n\n```bash\n(last -x -f $(ls -1t /var/log/wtmp* | head -2 | tail -1); last -x -f /var/log/wtmp) | \\\ngrep -A1 reboot | head -2 | grep -q shutdown && echo \"Expected reboot\" || echo \"Panic reboot\"\n```\n\n___\n\n##### Tool: [screen](https://en.wikipedia.org/wiki/GNU_Screen)\n\n###### Start screen in detached mode\n\n```bash\nscreen -d -m <command>\n```\n\n###### Attach to an existing screen session\n\n```bash\nscreen -r -d <pid>\n```\n\n___\n\n##### Tool: [script](https://en.wikipedia.org/wiki/Script_(Unix))\n\n###### Record and replay terminal session\n\n```bash\n### Record session\n# 1)\nscript -t 2>~/session.time -a ~/session.log\n\n# 2)\nscript --timing=session.time session.log\n\n### Replay session\nscriptreplay --timing=session.time session.log\n```\n\n___\n\n##### Tool: [du](https://en.wikipedia.org/wiki/GNU_Screen)\n\n###### Show 20 biggest directories with 'K M G'\n\n```bash\ndu | \\\nsort -r -n | \\\nawk '{split(\"K M G\",v); s=1; while($1>1024){$1/=1024; s++} print int($1)\" \"v[s]\"\\t\"$2}' | \\\nhead -n 20\n```\n\n___\n\n##### Tool: [inotifywait](https://en.wikipedia.org/wiki/GNU_Screen)\n\n###### Init tool everytime a file in a directory is modified\n\n```bash\nwhile true ; do inotifywait -r -e MODIFY dir/ && ls dir/ ; done;\n```\n\n___\n\n##### Tool: [openssl](https://www.openssl.org/)\n\n###### Testing connection to the remote host\n\n```bash\necho | openssl s_client -connect google.com:443 -showcerts\n```\n\n###### Testing connection to the remote host (debug mode)\n\n```bash\necho | openssl s_client -connect google.com:443 -showcerts -tlsextdebug -status\n```\n\n###### Testing connection to the remote host (with SNI support)\n\n```bash\necho | openssl s_client -showcerts -servername google.com -connect google.com:443\n```\n\n###### Testing connection to the remote host with specific ssl version\n\n```bash\nopenssl s_client -tls1_2 -connect google.com:443\n```\n\n###### Testing connection to the remote host with specific ssl cipher\n\n```bash\nopenssl s_client -cipher 'AES128-SHA' -connect google.com:443\n```\n\n###### Verify 0-RTT\n\n```bash\n_host=\"example.com\"\n\ncat > req.in << __EOF__\nHEAD / HTTP/1.1\nHost: $_host\nConnection: close\n__EOF__\n\nopenssl s_client -connect ${_host}:443 -tls1_3 -sess_out session.pem -ign_eof < req.in\nopenssl s_client -connect ${_host}:443 -tls1_3 -sess_in session.pem -early_data req.in\n```\n\n###### Generate private key without passphrase\n\n```bash\n# _len: 2048, 4096\n( _fd=\"private.key\" ; _len=\"2048\" ; \\\nopenssl genrsa -out ${_fd} ${_len} )\n```\n\n###### Generate private key with passphrase\n\n```bash\n# _ciph: aes128, aes256\n# _len: 2048, 4096\n( _ciph=\"aes128\" ; _fd=\"private.key\" ; _len=\"2048\" ; \\\nopenssl genrsa -${_ciph} -out ${_fd} ${_len} )\n```\n\n###### Remove passphrase from private key\n\n```bash\n( _fd=\"private.key\" ; _fd_unp=\"private_unp.key\" ; \\\nopenssl rsa -in ${_fd} -out ${_fd_unp} )\n```\n\n###### Encrypt existing private key with a passphrase\n\n```bash\n# _ciph: aes128, aes256\n( _ciph=\"aes128\" ; _fd=\"private.key\" ; _fd_pass=\"private_pass.key\" ; \\\nopenssl rsa -${_ciph} -in ${_fd} -out ${_fd_pass}\n```\n\n###### Check private key\n\n```bash\n( _fd=\"private.key\" ; \\\nopenssl rsa -check -in ${_fd} )\n```\n\n###### Get public key from private key\n\n```bash\n( _fd=\"private.key\" ; _fd_pub=\"public.key\" ; \\\nopenssl rsa -pubout -in ${_fd} -out ${_fd_pub} )\n```\n\n###### Generate private key and CSR\n\n```bash\n( _fd=\"private.key\" ; _fd_csr=\"request.csr\" ; _len=\"2048\" ; \\\nopenssl req -out ${_fd_csr} -new -newkey rsa:${_len} -nodes -keyout ${_fd} )\n```\n\n###### Generate CSR\n\n```bash\n( _fd=\"private.key\" ; _fd_csr=\"request.csr\" ; \\\nopenssl req -out ${_fd_csr} -new -key ${_fd} )\n```\n\n###### Generate CSR (metadata from existing certificate)\n\n  > Where `private.key` is the existing private key. As you can see you do not generate this CSR from your certificate (public key). Also you do not generate the \"same\" CSR, just a new one to request a new certificate.\n\n```bash\n( _fd=\"private.key\" ; _fd_csr=\"request.csr\" ; _fd_crt=\"cert.crt\" ; \\\nopenssl x509 -x509toreq -in ${_fd_crt} -out ${_fd_csr} -signkey ${_fd} )\n```\n\n###### Generate CSR with -config param\n\n```bash\n( _fd=\"private.key\" ; _fd_csr=\"request.csr\" ; \\\nopenssl req -new -sha256 -key ${_fd} -out ${_fd_csr} \\\n-config <(\ncat << __EOF__\n[req]\ndefault_bits        = 2048\ndefault_md          = sha256\nprompt              = no\ndistinguished_name  = dn\nreq_extensions      = req_ext\n\n[ dn ]\nC   = \"<two-letter ISO abbreviation for your country>\"\nST  = \"<state or province where your organisation is legally located>\"\nL   = \"<city where your organisation is legally located>\"\nO   = \"<legal name of your organisation>\"\nOU  = \"<section of the organisation>\"\nCN  = \"<fully qualified domain name>\"\n\n[ req_ext ]\nsubjectAltName = @alt_names\n\n[ alt_names ]\nDNS.1 = <fully qualified domain name>\nDNS.2 = <next domain>\nDNS.3 = <next domain>\n__EOF__\n))\n```\n\nOther values in `[ dn ]`:\n\n```\ncountryName            = \"DE\"                     # C=\nstateOrProvinceName    = \"Hessen\"                 # ST=\nlocalityName           = \"Keller\"                 # L=\npostalCode             = \"424242\"                 # L/postalcode=\npostalAddress          = \"Keller\"                 # L/postaladdress=\nstreetAddress          = \"Crater 1621\"            # L/street=\norganizationName       = \"apfelboymschule\"        # O=\norganizationalUnitName = \"IT Department\"          # OU=\ncommonName             = \"example.com\"            # CN=\nemailAddress           = \"webmaster@example.com\"  # CN/emailAddress=\n```\n\nExample of `oids` (you'll probably also have to make OpenSSL know about the new fields required for EV by adding the following under `[new_oids]`):\n\n```\n[req]\n...\noid_section         = new_oids\n\n[ new_oids ]\npostalCode = 2.5.4.17\nstreetAddress = 2.5.4.9\n```\n\nFull example:\n\n```bash\n( _fd=\"private.key\" ; _fd_csr=\"request.csr\" ; \\\nopenssl req -new -sha256 -key ${_fd} -out ${_fd_csr} \\\n-config <(\ncat << __EOF__\n[req]\ndefault_bits        = 2048\ndefault_md          = sha256\nprompt              = no\ndistinguished_name  = dn\nreq_extensions      = req_ext\noid_section         = new_oids\n\n[ new_oids ]\nserialNumber = 2.5.4.5\nstreetAddress = 2.5.4.9\npostalCode = 2.5.4.17\nbusinessCategory = 2.5.4.15\n\n[ dn ]\nserialNumber=00001111\nbusinessCategory=Private Organization\njurisdictionC=DE\nC=DE\nST=Hessen\nL=Keller\npostalCode=424242\nstreetAddress=Crater 1621\nO=AV Company\nOU=IT\nCN=example.com\n\n[ req_ext ]\nsubjectAltName = @alt_names\n\n[ alt_names ]\nDNS.1 = example.com\n__EOF__\n))\n```\n\nFor more information please look at these great explanations:\n\n- [RFC 5280](https://tools.ietf.org/html/rfc5280)\n- [How to create multidomain certificates using config files](https://apfelboymchen.net/gnu/notes/openssl%20multidomain%20with%20config%20files.html)\n- [Generate a multi domains certificate using config files](https://gist.github.com/romainnorberg/464758a6620228b977212a3cf20c3e08)\n- [Your OpenSSL CSR command is out of date](https://expeditedsecurity.com/blog/openssl-csr-command/)\n- [OpenSSL example configuration file](https://www.tbs-certificats.com/openssl-dem-server-cert.cnf)\n- [Object Identifiers (OIDs)](https://www.alvestrand.no/objectid/)\n- [openssl objects.txt](https://github.com/openssl/openssl/blob/master/crypto/objects/objects.txt)\n\n###### List available EC curves\n\n```bash\nopenssl ecparam -list_curves\n```\n\n###### Print ECDSA private and public keys\n\n```bash\n( _fd=\"private.key\" ; \\\nopenssl ec -in ${_fd} -noout -text )\n\n# For x25519 only extracting public key\n( _fd=\"private.key\" ; _fd_pub=\"public.key\" ; \\\nopenssl pkey -in ${_fd} -pubout -out ${_fd_pub} )\n```\n\n###### Generate ECDSA private key\n\n```bash\n# _curve: prime256v1, secp521r1, secp384r1\n( _fd=\"private.key\" ; _curve=\"prime256v1\" ; \\\nopenssl ecparam -out ${_fd} -name ${_curve} -genkey )\n\n# _curve: X25519\n( _fd=\"private.key\" ; _curve=\"x25519\" ; \\\nopenssl genpkey -algorithm ${_curve} -out ${_fd} )\n```\n\n###### Generate private key and CSR (ECC)\n\n```bash\n# _curve: prime256v1, secp521r1, secp384r1\n( _fd=\"domain.com.key\" ; _fd_csr=\"domain.com.csr\" ; _curve=\"prime256v1\" ; \\\nopenssl ecparam -out ${_fd} -name ${_curve} -genkey ; \\\nopenssl req -new -key ${_fd} -out ${_fd_csr} -sha256 )\n```\n\n###### Generate self-signed certificate\n\n```bash\n# _len: 2048, 4096\n( _fd=\"domain.key\" ; _fd_out=\"domain.crt\" ; _len=\"2048\" ; _days=\"365\" ; \\\nopenssl req -newkey rsa:${_len} -nodes \\\n-keyout ${_fd} -x509 -days ${_days} -out ${_fd_out} )\n```\n\n###### Generate self-signed certificate from existing private key\n\n```bash\n# _len: 2048, 4096\n( _fd=\"domain.key\" ; _fd_out=\"domain.crt\" ; _days=\"365\" ; \\\nopenssl req -key ${_fd} -nodes \\\n-x509 -days ${_days} -out ${_fd_out} )\n```\n\n###### Generate self-signed certificate from existing private key and csr\n\n```bash\n# _len: 2048, 4096\n( _fd=\"domain.key\" ; _fd_csr=\"domain.csr\" ; _fd_out=\"domain.crt\" ; _days=\"365\" ; \\\nopenssl x509 -signkey ${_fd} -nodes \\\n-in ${_fd_csr} -req -days ${_days} -out ${_fd_out} )\n```\n\n###### Generate DH public parameters\n\n```bash\n( _dh_size=\"2048\" ; \\\nopenssl dhparam -out /etc/nginx/ssl/dhparam_${_dh_size}.pem \"$_dh_size\" )\n```\n\n###### Display DH public parameters\n\n```bash\nopenssl pkeyparam -in dhparam.pem -text\n```\n\n###### Extract private key from pfx\n\n```bash\n( _fd_pfx=\"cert.pfx\" ; _fd_key=\"key.pem\" ; \\\nopenssl pkcs12 -in ${_fd_pfx} -nocerts -nodes -out ${_fd_key} )\n```\n\n###### Extract private key and certs from pfx\n\n```bash\n( _fd_pfx=\"cert.pfx\" ; _fd_pem=\"key_certs.pem\" ; \\\nopenssl pkcs12 -in ${_fd_pfx} -nodes -out ${_fd_pem} )\n```\n\n###### Extract certs from p7b\n\n```bash\n# PKCS#7 file doesn't include private keys.\n( _fd_p7b=\"cert.p7b\" ; _fd_pem=\"cert.pem\" ; \\\nopenssl pkcs7 -inform DER -outform PEM -in ${_fd_p7b} -print_certs > ${_fd_pem})\n# or:\nopenssl pkcs7 -print_certs -in -in ${_fd_p7b} -out ${_fd_pem})\n```\n\n###### Convert DER to PEM\n\n```bash\n( _fd_der=\"cert.crt\" ; _fd_pem=\"cert.pem\" ; \\\nopenssl x509 -in ${_fd_der} -inform der -outform pem -out ${_fd_pem} )\n```\n\n###### Convert PEM to DER\n\n```bash\n( _fd_der=\"cert.crt\" ; _fd_pem=\"cert.pem\" ; \\\nopenssl x509 -in ${_fd_pem} -outform der -out ${_fd_der} )\n```\n\n###### Verification of the private key\n\n```bash\n( _fd=\"private.key\" ; \\\nopenssl rsa -noout -text -in ${_fd} )\n```\n\n###### Verification of the public key\n\n```bash\n# 1)\n( _fd=\"public.key\" ; \\\nopenssl pkey -noout -text -pubin -in ${_fd} )\n\n# 2)\n( _fd=\"private.key\" ; \\\nopenssl rsa -inform PEM -noout -in ${_fd} &> /dev/null ; \\\nif [ $? = 0 ] ; then echo -en \"OK\\n\" ; fi )\n```\n\n###### Verification of the certificate\n\n```bash\n( _fd=\"certificate.crt\" ; # format: pem, cer, crt \\\nopenssl x509 -noout -text -in ${_fd} )\n```\n\n###### Verification of the CSR\n\n```bash\n( _fd_csr=\"request.csr\" ; \\\nopenssl req -text -noout -in ${_fd_csr} )\n```\n\n###### Check the private key and the certificate are match\n\n```bash\n(openssl rsa -noout -modulus -in private.key | openssl md5 ; \\\nopenssl x509 -noout -modulus -in certificate.crt | openssl md5) | uniq\n```\n\n###### Check the private key and the CSR are match\n\n```bash\n(openssl rsa -noout -modulus -in private.key | openssl md5 ; \\\nopenssl req -noout -modulus -in request.csr | openssl md5) | uniq\n```\n\n___\n\n##### Tool: [secure-delete](https://wiki.archlinux.org/index.php/Securely_wipe_disk)\n\n###### Secure delete with shred\n\n```bash\nshred -vfuz -n 10 file\nshred --verbose --random-source=/dev/urandom -n 1 /dev/sda\n```\n\n###### Secure delete with scrub\n\n```bash\nscrub -p dod /dev/sda\nscrub -p dod -r file\n```\n\n###### Secure delete with badblocks\n\n```bash\nbadblocks -s -w -t random -v /dev/sda\nbadblocks -c 10240 -s -w -t random -v /dev/sda\n```\n\n###### Secure delete with secure-delete\n\n```bash\nsrm -vz /tmp/file\nsfill -vz /local\nsdmem -v\nswapoff /dev/sda5 && sswap -vz /dev/sda5\n```\n\n___\n\n##### Tool: [dd](https://en.wikipedia.org/wiki/Dd_(Unix))\n\n###### Show dd status every so often\n\n```bash\ndd <dd_params> status=progress\nwatch --interval 5 killall -USR1 dd\n```\n\n###### Redirect output to a file with dd\n\n```bash\necho \"string\" | dd of=filename\n```\n\n___\n\n##### Tool: [gpg](https://www.gnupg.org/)\n\n###### Export public key\n\n```bash\ngpg --export --armor \"<username>\" > username.pkey\n```\n\n  * `--export` - export all keys from all keyrings or specific key\n  * `-a|--armor` - create ASCII armored output\n\n###### Encrypt file\n\n```bash\ngpg -e -r \"<username>\" dump.sql\n```\n\n  * `-e|--encrypt` - encrypt data\n  * `-r|--recipient` - encrypt for specific <username>\n\n###### Decrypt file\n\n```bash\ngpg -o dump.sql -d dump.sql.gpg\n```\n\n  * `-o|--output` - use as output file\n  * `-d|--decrypt` - decrypt data (default)\n\n###### Search recipient\n\n```bash\ngpg --keyserver hkp://keyserver.ubuntu.com --search-keys \"<username>\"\n```\n\n  * `--keyserver` - set specific key server\n  * `--search-keys` - search for keys on a key server\n\n###### List all of the packets in an encrypted file\n\n```bash\ngpg --batch --list-packets archive.gpg\ngpg2 --batch --list-packets archive.gpg\n```\n\n___\n\n##### Tool: [system-other](https://github.com/trimstray/the-book-of-secret-knowledge#tool-system-other)\n\n###### Reboot system from init\n\n```bash\nexec /sbin/init 6\n```\n\n###### Init system from single user mode\n\n```bash\nexec /sbin/init\n```\n\n###### Show current working directory of a process\n\n```bash\nreadlink -f /proc/<PID>/cwd\n```\n\n###### Show actual pathname of the executed command\n\n```bash\nreadlink -f /proc/<PID>/exe\n```\n\n##### Tool: [curl](https://curl.haxx.se)\n\n```bash\ncurl -Iks https://www.google.com\n```\n\n  * `-I` - show response headers only\n  * `-k` - insecure connection when using ssl\n  * `-s` - silent mode (not display body)\n\n```bash\ncurl -Iks --location -X GET -A \"x-agent\" https://www.google.com\n```\n\n  * `--location` - follow redirects\n  * `-X` - set method\n  * `-A` - set user-agent\n\n```bash\ncurl -Iks --location -X GET -A \"x-agent\" --proxy http://127.0.0.1:16379 https://www.google.com\n```\n\n  * `--proxy [socks5://|http://]` - set proxy server\n\n```bash\ncurl -o file.pdf -C - https://example.com/Aiju2goo0Ja2.pdf\n```\n\n  * `-o` - write output to file\n  * `-C` - resume the transfer\n\n###### Find your external IP address (external services)\n\n```bash\ncurl ipinfo.io\ncurl ipinfo.io/ip\ncurl icanhazip.com\ncurl ifconfig.me/ip ; echo\n```\n\n###### Repeat URL request\n\n```bash\n# URL sequence substitution with a dummy query string:\ncurl -ks https://example.com/?[1-20]\n\n# With shell 'for' loop:\nfor i in {1..20} ; do curl -ks https://example.com/ ; done\n```\n\n###### Check DNS and HTTP trace with headers for specific domains\n\n```bash\n### Set domains and external dns servers.\n_domain_list=(google.com) ; _dns_list=(\"8.8.8.8\" \"1.1.1.1\")\n\nfor _domain in \"${_domain_list[@]}\" ; do\n\n  printf '=%.0s' {1..48}\n\n  echo\n\n  printf \"[\\\\e[1;32m+\\\\e[m] resolve: %s\\\\n\" \"$_domain\"\n\n  for _dns in \"${_dns_list[@]}\" ; do\n\n    # Resolve domain.\n    host \"${_domain}\" \"${_dns}\"\n\n    echo\n\n  done\n\n  for _proto in http https ; do\n\n    printf \"[\\\\e[1;32m+\\\\e[m] trace + headers: %s://%s\\\\n\" \"$_proto\" \"$_domain\"\n\n    # Get trace and http headers.\n    curl -Iks -A \"x-agent\" --location \"${_proto}://${_domain}\"\n\n    echo\n\n  done\n\ndone\n\nunset _domain_list _dns_list\n```\n\n___\n\n##### Tool: [httpie](https://httpie.org/)\n\n```bash\nhttp -p Hh https://www.google.com\n```\n\n  * `-p` - print request and response headers\n    * `H` - request headers\n    * `B` - request body\n    * `h` - response headers\n    * `b` - response body\n\n```bash\nhttp -p Hh https://www.google.com --follow --verify no\n```\n\n  * `-F, --follow` - follow redirects\n  * `--verify no` - skip SSL verification\n\n```bash\nhttp -p Hh https://www.google.com --follow --verify no \\\n--proxy http:http://127.0.0.1:16379\n```\n\n  * `--proxy [http:]` - set proxy server\n\n##### Tool: [ssh](https://www.openssh.com/)\n\n###### Escape Sequence\n\n```\n# Supported escape sequences:\n~.  - terminate connection (and any multiplexed sessions)\n~B  - send a BREAK to the remote system\n~C  - open a command line\n~R  - Request rekey (SSH protocol 2 only)\n~^Z - suspend ssh\n~#  - list forwarded connections\n~&  - background ssh (when waiting for connections to terminate)\n~?  - this message\n~~  - send the escape character by typing it twice\n```\n\n###### Compare a remote file with a local file\n\n```bash\nssh user@host cat /path/to/remotefile | diff /path/to/localfile -\n```\n\n###### SSH connection through host in the middle\n\n```bash\nssh -t reachable_host ssh unreachable_host\n```\n\n###### Run command over SSH on remote host\n\n```bash\ncat > cmd.txt << __EOF__\ncat /etc/hosts\n__EOF__\n\nssh host -l user $(<cmd.txt)\n```\n\n###### Get public key from private key\n\n```bash\nssh-keygen -y -f ~/.ssh/id_rsa\n```\n\n###### Get all fingerprints\n\n```bash\nssh-keygen -l -f .ssh/known_hosts\n```\n\n###### SSH authentication with user password\n\n```bash\nssh -o PreferredAuthentications=password -o PubkeyAuthentication=no user@remote_host\n```\n\n###### SSH authentication with publickey\n\n```bash\nssh -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes -i id_rsa user@remote_host\n```\n\n###### Simple recording SSH session\n\n```bash\nfunction _ssh_sesslog() {\n\n  _sesdir=\"<path/to/session/logs>\"\n\n  mkdir -p \"${_sesdir}\" && \\\n  ssh $@ 2>&1 | tee -a \"${_sesdir}/$(date +%Y%m%d).log\"\n\n}\n\n# Alias:\nalias ssh='_ssh_sesslog'\n```\n\n###### Using Keychain for SSH logins\n\n```bash\n### Delete all of ssh-agent's keys.\nfunction _scl() {\n\n  /usr/bin/keychain --clear\n\n}\n\n### Add key to keychain.\nfunction _scg() {\n\n  /usr/bin/keychain /path/to/private-key\n  source \"$HOME/.keychain/$HOSTNAME-sh\"\n\n}\n```\n\n###### SSH login without processing any login scripts\n\n```bash\nssh -tt user@host bash\n```\n\n###### SSH local port forwarding\n\nExample 1:\n\n```bash\n# Forwarding our local 2250 port to nmap.org:443 from localhost through localhost\nhost1> ssh -L 2250:nmap.org:443 localhost\n\n# Connect to the service:\nhost1> curl -Iks --location -X GET https://localhost:2250\n```\n\nExample 2:\n\n```bash\n# Forwarding our local 9051 port to db.d.x:5432 from localhost through node.d.y\nhost1> ssh -nNT -L 9051:db.d.x:5432 node.d.y\n\n# Connect to the service:\nhost1> psql -U db_user -d db_dev -p 9051 -h localhost\n```\n\n  * `-n` - redirects stdin from `/dev/null`\n  * `-N` - do not execute a remote command\n  * `-T` - disable pseudo-terminal allocation\n\n###### SSH remote port forwarding\n\n```bash\n# Forwarding our local 9051 port to db.d.x:5432 from host2 through node.d.y\nhost1> ssh -nNT -R 9051:db.d.x:5432 node.d.y\n\n# Connect to the service:\nhost2> psql -U postgres -d postgres -p 8000 -h localhost\n```\n\n___\n\n##### Tool: [linux-dev](https://www.tldp.org/LDP/abs/html/devref1.html)\n\n###### Testing remote connection to port\n\n```bash\ntimeout 1 bash -c \"</dev/<proto>/<host>/<port>\" >/dev/null 2>&1 ; echo $?\n```\n\n  * `<proto` - set protocol (tcp/udp)\n  * `<host>` - set remote host\n  * `<port>` - set destination port\n\n###### Read and write to TCP or UDP sockets with common bash tools\n\n```bash\nexec 5<>/dev/tcp/<host>/<port>; cat <&5 & cat >&5; exec 5>&-\n```\n\n___\n\n##### Tool: [tcpdump](http://www.tcpdump.org/)\n\n###### Filter incoming (on interface) traffic (specific <ip:port>)\n\n```bash\ntcpdump -ne -i eth0 -Q in host 192.168.252.1 and port 443\n```\n\n  * `-n` - don't convert addresses (`-nn` will not resolve hostnames or ports)\n  * `-e` - print the link-level headers\n  * `-i [iface|any]` - set interface\n  * `-Q|-D [in|out|inout]` - choose send/receive direction (`-D` - for old tcpdump versions)\n  * `host [ip|hostname]` - set host, also `[host not]`\n  * `[and|or]` - set logic\n  * `port [1-65535]` - set port number, also `[port not]`\n\n###### Filter incoming (on interface) traffic (specific <ip:port>) and write to a file\n\n```bash\ntcpdump -ne -i eth0 -Q in host 192.168.252.1 and port 443 -c 5 -w tcpdump.pcap\n```\n\n  * `-c [num]` - capture only num number of packets\n  * `-w [filename]` - write packets to file, `-r [filename]` - reading from file\n\n###### Capture all ICMP packets\n\n```bash\ntcpdump -nei eth0 icmp\n```\n\n###### Check protocol used (TCP or UDP) for service\n\n```bash\ntcpdump -nei eth0 tcp port 22 -vv -X | egrep \"TCP|UDP\"\n```\n\n###### Display ASCII text (to parse the output using grep or other)\n\n```bash\ntcpdump -i eth0 -A -s0 port 443\n```\n\n###### Grab everything between two keywords\n\n```bash\ntcpdump -i eth0 port 80 -X | sed -n -e '/username/,/=ldap/ p'\n```\n\n###### Grab user and pass ever plain http\n\n```bash\ntcpdump -i eth0  port http -l -A | egrep -i \\\n'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user ' \\\n--color=auto --line-buffered -B20\n```\n\n###### Extract HTTP User Agent from HTTP request header\n\n```bash\ntcpdump -ei eth0 -nn -A -s1500 -l | grep \"User-Agent:\"\n```\n\n###### Capture only HTTP GET and POST packets\n\n```bash\ntcpdump -ei eth0 -s 0 -A -vv \\\n'tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420' or 'tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354'\n```\n\nor simply:\n\n```bash\ntcpdump -ei eth0 -s 0 -v -n -l | egrep -i \"POST /|GET /|Host:\"\n```\n\n###### Rotate capture files\n\n```bash\ntcpdump -ei eth0 -w /tmp/capture-%H.pcap -G 3600 -C 200\n```\n\n  * `-G <num>` - pcap will be created every `<num>` seconds\n  * `-C <size>` - close the current pcap and open a new one if is larger than `<size>`\n\n###### Top hosts by packets\n\n```bash\ntcpdump -ei enp0s25 -nnn -t -c 200 | cut -f 1,2,3,4 -d '.' | sort | uniq -c | sort -nr | head -n 20\n```\n\n###### Excludes any RFC 1918 private address\n\n```bash\ntcpdump -nei eth0 'not (src net (10 or 172.16/12 or 192.168/16) and dst net (10 or 172.16/12 or 192.168/16))'\n```\n\n___\n\n##### Tool: [tcpick](http://tcpick.sourceforge.net/)\n\n###### Analyse packets in real-time\n\n```bash\nwhile true ; do tcpick -a -C -r dump.pcap ; sleep 2 ; clear ; done\n```\n\n___\n\n##### Tool: [ngrep](http://ngrep.sourceforge.net/usage.html)\n\n```bash\nngrep -d eth0 \"www.domain.com\" port 443\n```\n\n  * `-d [iface|any]` - set interface\n  * `[domain]` - set hostname\n  * `port [1-65535]` - set port number\n\n```bash\nngrep -d eth0 \"www.domain.com\" src host 10.240.20.2 and port 443\n```\n\n  * `(host [ip|hostname])` - filter by ip or hostname\n  * `(port [1-65535])` - filter by port number\n\n```bash\nngrep -d eth0 -qt -O ngrep.pcap \"www.domain.com\" port 443\n```\n\n  * `-q` - quiet mode (only payloads)\n  * `-t` - added timestamps\n  * `-O [filename]` - save output to file, `-I [filename]` - reading from file\n\n```bash\nngrep -d eth0 -qt 'HTTP' 'tcp'\n```\n\n  * `HTTP` - show http headers\n  * `tcp|udp` - set protocol\n  * `[src|dst] host [ip|hostname]` - set direction for specific node\n\n```bash\nngrep -l -q -d eth0 -i \"User-Agent: curl*\"\n```\n\n  * `-l` - stdout line buffered\n  * `-i` - case-insensitive search\n\n___\n\n##### Tool: [hping3](http://www.hping.org/)\n\n```bash\nhping3 -V -p 80 -s 5050 <scan_type> www.google.com\n```\n\n  * `-V|--verbose` - verbose mode\n  * `-p|--destport` - set destination port\n  * `-s|--baseport` - set source port\n  * `<scan_type>` - set scan type\n    * `-F|--fin` - set FIN flag, port open if no reply\n    * `-S|--syn` - set SYN flag\n    * `-P|--push` - set PUSH flag\n    * `-A|--ack` - set ACK flag (use when ping is blocked, RST response back if the port is open)\n    * `-U|--urg` - set URG flag\n    * `-Y|--ymas` - set Y unused flag (0x80 - nullscan), port open if no reply\n    * `-M 0 -UPF` - set TCP sequence number and scan type (URG+PUSH+FIN), port open if no reply\n\n```bash\nhping3 -V -c 1 -1 -C 8 www.google.com\n```\n\n  * `-c [num]` - packet count\n  * `-1` - set ICMP mode\n  * `-C|--icmptype [icmp-num]` - set icmp type (default icmp-echo = 8)\n\n```bash\nhping3 -V -c 1000000 -d 120 -S -w 64 -p 80 --flood --rand-source <remote_host>\n```\n\n  * `--flood` - sent packets as fast as possible (don't show replies)\n  * `--rand-source` - random source address mode\n  * `-d --data` - data size\n  * `-w|--win` - winsize (default 64)\n\n___\n\n##### Tool: [nmap](https://nmap.org/)\n\n###### Ping scans the network\n\n```bash\nnmap -sP 192.168.0.0/24\n```\n\n###### Show only open ports\n\n```bash\nnmap -F --open 192.168.0.0/24\n```\n\n###### Full TCP port scan using with service version detection\n\n```bash\nnmap -p 1-65535 -sV -sS -T4 192.168.0.0/24\n```\n\n###### Nmap scan and pass output to Nikto\n\n```bash\nnmap -p80,443 192.168.0.0/24 -oG - | nikto.pl -h -\n```\n\n###### Recon specific ip:service with Nmap NSE scripts stack\n\n```bash\n# Set variables:\n_hosts=\"192.168.250.10\"\n_ports=\"80,443\"\n\n# Set Nmap NSE scripts stack:\n_nmap_nse_scripts=\"+dns-brute,\\\n                   +http-auth-finder,\\\n                   +http-chrono,\\\n                   +http-cookie-flags,\\\n                   +http-cors,\\\n                   +http-cross-domain-policy,\\\n                   +http-csrf,\\\n                   +http-dombased-xss,\\\n                   +http-enum,\\\n                   +http-errors,\\\n                   +http-git,\\\n                   +http-grep,\\\n                   +http-internal-ip-disclosure,\\\n                   +http-jsonp-detection,\\\n                   +http-malware-host,\\\n                   +http-methods,\\\n                   +http-passwd,\\\n                   +http-phpself-xss,\\\n                   +http-php-version,\\\n                   +http-robots.txt,\\\n                   +http-sitemap-generator,\\\n                   +http-shellshock,\\\n                   +http-stored-xss,\\\n                   +http-title,\\\n                   +http-unsafe-output-escaping,\\\n                   +http-useragent-tester,\\\n                   +http-vhosts,\\\n                   +http-waf-detect,\\\n                   +http-waf-fingerprint,\\\n                   +http-xssed,\\\n                   +traceroute-geolocation.nse,\\\n                   +ssl-enum-ciphers,\\\n                   +whois-domain,\\\n                   +whois-ip\"\n\n# Set Nmap NSE script params:\n_nmap_nse_scripts_args=\"dns-brute.domain=${_hosts},http-cross-domain-policy.domain-lookup=true,\"\n_nmap_nse_scripts_args+=\"http-waf-detect.aggro,http-waf-detect.detectBodyChanges,\"\n_nmap_nse_scripts_args+=\"http-waf-fingerprint.intensive=1\"\n\n# Perform scan:\nnmap --script=\"$_nmap_nse_scripts\" --script-args=\"$_nmap_nse_scripts_args\" -p \"$_ports\" \"$_hosts\"\n```\n\n___\n\n##### Tool: [netcat](http://netcat.sourceforge.net/)\n\n```bash\nnc -kl 5000\n```\n\n  * `-l` - listen for an incoming connection\n  * `-k` - listening after client has disconnected\n  * `>filename.out` - save receive data to file (optional)\n\n```bash\nnc 192.168.0.1 5051 < filename.in\n```\n\n  * `< filename.in` - send data to remote host\n\n```bash\nnc -vz 10.240.30.3 5000\n```\n\n  * `-v` - verbose output\n  * `-z` - scan for listening daemons\n\n```bash\nnc -vzu 10.240.30.3 1-65535\n```\n\n  * `-u` - scan only udp ports\n\n###### Transfer data file (archive)\n\n```bash\nserver> nc -l 5000 | tar xzvfp -\nclient> tar czvfp - /path/to/dir | nc 10.240.30.3 5000\n```\n\n###### Launch remote shell\n\n```bash\n# 1)\nserver> nc -l 5000 -e /bin/bash\nclient> nc 10.240.30.3 5000\n\n# 2)\nserver> rm -f /tmp/f; mkfifo /tmp/f\nserver> cat /tmp/f | /bin/bash -i 2>&1 | nc -l 127.0.0.1 5000 > /tmp/f\nclient> nc 10.240.30.3 5000\n```\n\n###### Simple file server\n\n```bash\nwhile true ; do nc -l 5000 | tar -xvf - ; done\n```\n\n###### Simple minimal HTTP Server\n\n```bash\nwhile true ; do nc -l -p 1500 -c 'echo -e \"HTTP/1.1 200 OK\\n\\n $(date)\"' ; done\n```\n\n###### Simple HTTP Server\n\n  > Restarts web server after each request - remove `while` condition for only single connection.\n\n```bash\ncat > index.html << __EOF__\n<!doctype html>\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title></title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    </head>\n    <body>\n\n    <p>\n\n      Hello! It's a site.\n\n    </p>\n\n    </body>\n</html>\n__EOF__\n```\n\n```bash\nserver> while : ; do \\\n(echo -ne \"HTTP/1.1 200 OK\\r\\nContent-Length: $(wc -c <index.html)\\r\\n\\r\\n\" ; cat index.html;) | \\\nnc -l -p 5000 \\\n; done\n```\n\n  * `-p` - port number\n\n###### Simple HTTP Proxy (single connection)\n\n```bash\n#!/usr/bin/env bash\n\nif [[ $# != 2 ]] ; then\n  printf \"%s\\\\n\" \\\n         \"usage: ./nc-proxy listen-port bk_host:bk_port\"\nfi\n\n_listen_port=\"$1\"\n_bk_host=$(echo \"$2\" | cut -d \":\" -f1)\n_bk_port=$(echo \"$2\" | cut -d \":\" -f2)\n\nprintf \"  lport: %s\\\\nbk_host: %s\\\\nbk_port: %s\\\\n\\\\n\" \\\n       \"$_listen_port\" \"$_bk_host\" \"$_bk_port\"\n\n_tmp=$(mktemp -d)\n_back=\"$_tmp/pipe.back\"\n_sent=\"$_tmp/pipe.sent\"\n_recv=\"$_tmp/pipe.recv\"\n\ntrap 'rm -rf \"$_tmp\"' EXIT\n\nmkfifo -m 0600 \"$_back\" \"$_sent\" \"$_recv\"\n\nsed \"s/^/=> /\" <\"$_sent\" &\nsed \"s/^/<=  /\" <\"$_recv\" &\n\nnc -l -p \"$_listen_port\" <\"$_back\" | \\\ntee \"$_sent\" | \\\nnc \"$_bk_host\" \"$_bk_port\" | \\\ntee \"$_recv\" >\"$_back\"\n```\n\n```bash\nserver> chmod +x nc-proxy && ./nc-proxy 8080 192.168.252.10:8000\n  lport: 8080\nbk_host: 192.168.252.10\nbk_port: 8000\n\nclient> http -p h 10.240.30.3:8080\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nCache-Control: max-age=31536000\nContent-Length: 2748\nContent-Type: text/html; charset=utf-8\nDate: Sun, 01 Jul 2018 20:12:08 GMT\nLast-Modified: Sun, 01 Apr 2018 21:53:37 GMT\n```\n\n###### Create a single-use TCP or UDP proxy\n\n```bash\n### TCP -> TCP\nnc -l -p 2000 -c \"nc [ip|hostname] 3000\"\n\n### TCP -> UDP\nnc -l -p 2000 -c \"nc -u [ip|hostname] 3000\"\n\n### UDP -> UDP\nnc -l -u -p 2000 -c \"nc -u [ip|hostname] 3000\"\n\n### UDP -> TCP\nnc -l -u -p 2000 -c \"nc [ip|hostname] 3000\"\n```\n\n___\n\n##### Tool: [gnutls-cli](https://gnutls.org/manual/html_node/gnutls_002dcli-Invocation.html)\n\n###### Testing connection to remote host (with SNI support)\n\n```bash\ngnutls-cli -p 443 google.com\n```\n\n###### Testing connection to remote host (without SNI support)\n\n```bash\ngnutls-cli --disable-sni -p 443 google.com\n```\n\n___\n\n##### Tool: [socat](http://www.dest-unreach.org/socat/doc/socat.html)\n\n###### Testing remote connection to port\n\n```bash\nsocat - TCP4:10.240.30.3:22\n```\n\n  * `-` - standard input (STDIO)\n  * `TCP4:<params>` - set tcp4 connection with specific params\n    * `[hostname|ip]` - set hostname/ip\n    * `[1-65535]` - set port number\n\n###### Redirecting TCP-traffic to a UNIX domain socket under Linux\n\n```bash\nsocat TCP-LISTEN:1234,bind=127.0.0.1,reuseaddr,fork,su=nobody,range=127.0.0.0/8 UNIX-CLIENT:/tmp/foo\n```\n\n  * `TCP-LISTEN:<params>` - set tcp listen with specific params\n    * `[1-65535]` - set port number\n    * `bind=[hostname|ip]` - set bind hostname/ip\n    * `reuseaddr` - allows other sockets to bind to an address\n    * `fork` - keeps the parent process attempting to produce more connections\n    * `su=nobody` - set user\n    * `range=[ip-range]` - ip range\n  * `UNIX-CLIENT:<params>` - communicates with the specified peer socket\n    * `filename` - define socket\n\n___\n\n##### Tool: [p0f](http://lcamtuf.coredump.cx/p0f3/)\n\n###### Set iface in promiscuous mode and dump traffic to the log file\n\n```bash\np0f -i enp0s25 -p -d -o /dump/enp0s25.log\n```\n\n  * `-i` - listen on the specified interface\n  * `-p` - set interface in promiscuous mode\n  * `-d` - fork into background\n  * `-o` - output file\n\n___\n\n##### Tool: [netstat](https://en.wikipedia.org/wiki/Netstat)\n\n###### Graph # of connections for each hosts\n\n```bash\nnetstat -an | awk '/ESTABLISHED/ { split($5,ip,\":\"); if (ip[1] !~ /^$/) print ip[1] }' | \\\nsort | uniq -c | awk '{ printf(\"%s\\t%s\\t\",$2,$1) ; for (i = 0; i < $1; i++) {printf(\"*\")}; print \"\" }'\n```\n\n###### Monitor open connections for specific port including listen, count and sort it per IP\n\n```bash\nwatch \"netstat -plan | grep :443 | awk {'print \\$5'} | cut -d: -f 1 | sort | uniq -c | sort -nk 1\"\n```\n\n###### Grab banners from local IPv4 listening ports\n\n```bash\nnetstat -nlt | grep 'tcp ' | grep -Eo \"[1-9][0-9]*\" | xargs -I {} sh -c \"echo \"\" | nc -v -n -w1 127.0.0.1 {}\"\n```\n\n___\n\n##### Tool: [rsync](https://en.wikipedia.org/wiki/Rsync)\n\n###### Rsync remote data as root using sudo\n\n```bash\nrsync --rsync-path 'sudo rsync' username@hostname:/path/to/dir/ /local/\n```\n\n___\n\n##### Tool: [host](https://en.wikipedia.org/wiki/Host_(Unix))\n\n###### Resolves the domain name (using external dns server)\n\n```bash\nhost google.com 9.9.9.9\n```\n\n###### Checks the domain administrator (SOA record)\n\n```bash\nhost -t soa google.com 9.9.9.9\n```\n\n___\n\n##### Tool: [dig](https://en.wikipedia.org/wiki/Dig_(command))\n\n###### Resolves the domain name (short output)\n\n```bash\ndig google.com +short\n```\n\n###### Lookup NS record for specific domain\n\n```bash\ndig @9.9.9.9 google.com NS\n```\n\n###### Query only answer section\n\n```bash\ndig google.com +nocomments +noquestion +noauthority +noadditional +nostats\n```\n\n###### Query ALL DNS Records\n\n```bash\ndig google.com ANY +noall +answer\n```\n\n###### DNS Reverse Look-up\n\n```bash\ndig -x 172.217.16.14 +short\n```\n\n___\n\n##### Tool: [certbot](https://certbot.eff.org/)\n\n###### Generate multidomain certificate\n\n```bash\ncertbot certonly -d example.com -d www.example.com\n```\n\n###### Generate wildcard certificate\n\n```bash\ncertbot certonly --manual --preferred-challenges=dns -d example.com -d *.example.com\n```\n\n###### Generate certificate with 4096 bit private key\n\n```bash\ncertbot certonly -d example.com -d www.example.com --rsa-key-size 4096\n```\n\n___\n\n##### Tool: [network-other](https://github.com/trimstray/the-book-of-secret-knowledge#tool-network-other)\n\n###### Get all subnets for specific AS (Autonomous system)\n\n```bash\nAS=\"AS32934\"\nwhois -h whois.radb.net -- \"-i origin ${AS}\" | \\\ngrep \"^route:\" | \\\ncut -d \":\" -f2 | \\\nsed -e 's/^[ \\t]//' | \\\nsort -n -t . -k 1,1 -k 2,2 -k 3,3 -k 4,4 | \\\ncut -d \":\" -f2 | \\\nsed -e 's/^[ \\t]/allow /' | \\\nsed 's/$/;/' | \\\nsed 's/allow  */subnet -> /g'\n```\n\n###### Resolves domain name from dns.google.com with curl and jq\n\n```bash\n_dname=\"google.com\" ; curl -s \"https://dns.google.com/resolve?name=${_dname}&type=A\" | jq .\n```\n\n##### Tool: [git](https://git-scm.com/)\n\n###### Log alias for a decent view of your repo\n\n```bash\n# 1)\ngit log --oneline --decorate --graph --all\n\n# 2)\ngit log --graph \\\n--pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \\\n--abbrev-commit\n```\n\n___\n\n##### Tool: [python](https://www.python.org/)\n\n###### Static HTTP web server\n\n```bash\n# Python 3.x\npython3 -m http.server 8000 --bind 127.0.0.1\n\n# Python 2.x\npython -m SimpleHTTPServer 8000\n```\n\n###### Static HTTP web server with SSL support\n\n```bash\n# Python 3.x\nfrom http.server import HTTPServer, BaseHTTPRequestHandler\nimport ssl\n\nhttpd = HTTPServer(('localhost', 4443), BaseHTTPRequestHandler)\n\nhttpd.socket = ssl.wrap_socket (httpd.socket,\n        keyfile=\"path/to/key.pem\",\n        certfile='path/to/cert.pem', server_side=True)\n\nhttpd.serve_forever()\n\n# Python 2.x\nimport BaseHTTPServer, SimpleHTTPServer\nimport ssl\n\nhttpd = BaseHTTPServer.HTTPServer(('localhost', 4443),\n        SimpleHTTPServer.SimpleHTTPRequestHandler)\n\nhttpd.socket = ssl.wrap_socket (httpd.socket,\n        keyfile=\"path/tp/key.pem\",\n        certfile='path/to/cert.pem', server_side=True)\n\nhttpd.serve_forever()\n```\n\n###### Encode base64\n\n```bash\npython -m base64 -e <<< \"sample string\"\n```\n\n###### Decode base64\n\n```bash\npython -m base64 -d <<< \"dGhpcyBpcyBlbmNvZGVkCg==\"\n```\n\n##### Tool: [awk](http://www.grymoire.com/Unix/Awk.html)\n\n###### Search for matching lines\n\n```bash\n# egrep foo\nawk '/foo/' filename\n```\n\n###### Search non matching lines\n\n```bash\n# egrep -v foo\nawk '!/foo/' filename\n```\n\n###### Print matching lines with numbers\n\n```bash\n# egrep -n foo\nawk '/foo/{print FNR,$0}' filename\n```\n\n###### Print the last column\n\n```bash\nawk '{print $NF}' filename\n```\n\n###### Find all the lines longer than 80 characters\n\n```bash\nawk 'length($0)>80{print FNR,$0}' filename\n```\n\n###### Print only lines of less than 80 characters\n\n```bash\nawk 'length < 80' filename\n```\n\n###### Print double new lines a file\n\n```bash\nawk '1; { print \"\" }' filename\n```\n\n###### Print line numbers\n\n```bash\nawk '{ print FNR \"\\t\" $0 }' filename\nawk '{ printf(\"%5d : %s\\n\", NR, $0) }' filename   # in a fancy manner\n```\n\n###### Print line numbers for only non-blank lines\n\n```bash\nawk 'NF { $0=++a \" :\" $0 }; { print }' filename\n```\n\n###### Print the line and the next two (i=5) lines after the line matching regexp\n\n```bash\nawk '/foo/{i=5+1;}{if(i){i--; print;}}' filename\n```\n\n###### Print the lines starting at the line matching 'server {' until the line matching '}'\n\n```bash\nawk '/server {/,/}/' filename\n```\n\n###### Print multiple columns with separators\n\n```bash\nawk -F' ' '{print \"ip:\\t\" $2 \"\\n port:\\t\" $3' filename\n```\n\n###### Remove empty lines\n\n```bash\nawk 'NF > 0' filename\n\n# alternative:\nawk NF filename\n```\n\n###### Delete trailing white space (spaces, tabs)\n\n```bash\nawk '{sub(/[ \\t]*$/, \"\");print}' filename\n```\n\n###### Delete leading white space\n\n```bash\nawk '{sub(/^[ \\t]+/, \"\"); print}' filename\n```\n\n###### Remove duplicate consecutive lines\n\n```bash\n# uniq\nawk 'a !~ $0{print}; {a=$0}' filename\n```\n\n###### Remove duplicate entries in a file without sorting\n\n```bash\nawk '!x[$0]++' filename\n```\n\n###### Exclude multiple columns\n\n```bash\nawk '{$1=$3=\"\"}1' filename\n```\n\n###### Substitute foo for bar on lines matching regexp\n\n```bash\nawk '/regexp/{gsub(/foo/, \"bar\")};{print}' filename\n```\n\n###### Add some characters at the beginning of matching lines\n\n```bash\nawk '/regexp/{sub(/^/, \"++++\"); print;next;}{print}' filename\n```\n\n###### Get the last hour of Apache logs\n\n```bash\nawk '/'$(date -d \"1 hours ago\" \"+%d\\\\/%b\\\\/%Y:%H:%M\")'/,/'$(date \"+%d\\\\/%b\\\\/%Y:%H:%M\")'/ { print $0 }' \\\n/var/log/httpd/access_log\n```\n\n___\n\n##### Tool: [sed](http://www.grymoire.com/Unix/Sed.html)\n\n###### Print a specific line from a file\n\n```bash\nsed -n 10p /path/to/file\n```\n\n###### Remove a specific line from a file\n\n```bash\nsed -i 10d /path/to/file\n# alternative (BSD): sed -i'' 10d /path/to/file\n```\n\n###### Remove a range of lines from a file\n\n```bash\nsed -i <file> -re '<start>,<end>d'\n```\n\n###### Replace newline(s) with a space\n\n```bash\nsed ':a;N;$!ba;s/\\n/ /g' /path/to/file\n\n# cross-platform compatible syntax:\nsed -e ':a' -e 'N' -e '$!ba' -e 's/\\n/ /g' /path/to/file\n```\n\n- `:a` create a label `a`\n- `N` append the next line to the pattern space\n- `$!` if not the last line, ba branch (go to) label `a`\n- `s` substitute, `/\\n/` regex for new line, `/ /` by a space, `/g` global match (as many times as it can)\n\nAlternatives:\n\n```bash\n# perl version (sed-like speed):\nperl -p -e 's/\\n/ /' /path/to/file\n\n# bash version (slow):\nwhile read line ; do printf \"%s\" \"$line \" ; done < file\n```\n\n###### Delete string +N next lines\n\n```bash\nsed '/start/,+4d' /path/to/file\n```\n\n___\n\n##### Tool: [grep](http://www.grymoire.com/Unix/Grep.html)\n\n###### Search for a \"pattern\" inside all files in the current directory\n\n```bash\ngrep -rn \"pattern\"\ngrep -RnisI \"pattern\" *\nfgrep \"pattern\" * -R\n```\n\n###### Show only for multiple patterns\n\n```bash\ngrep 'INFO*'\\''WARN' filename\ngrep 'INFO\\|WARN' filename\ngrep -e INFO -e WARN filename\ngrep -E '(INFO|WARN)' filename\negrep \"INFO|WARN\" filename\n```\n\n###### Except multiple patterns\n\n```bash\ngrep -vE '(error|critical|warning)' filename\n```\n\n###### Show data from file without comments\n\n```bash\ngrep -v ^[[:space:]]*# filename\n```\n\n###### Show data from file without comments and new lines\n\n```bash\negrep -v '#|^$' filename\n```\n\n###### Show strings with a dash/hyphen\n\n```bash\ngrep -e -- filename\ngrep -- -- filename\ngrep \"\\-\\-\" filename\n```\n\n###### Remove blank lines from a file and save output to new file\n\n```bash\ngrep . filename > newfilename\n```\n\n##### Tool: [perl](https://www.perl.org/)\n\n###### Search and replace (in place)\n\n```bash\nperl -i -pe's/SEARCH/REPLACE/' filename\n```\n\n###### Edit of `*.conf` files changing all foo to bar (and backup original)\n\n```bash\nperl -p -i.orig -e 's/\\bfoo\\b/bar/g' *.conf\n```\n\n###### Prints the first 20 lines from `*.conf` files\n\n```bash\nperl -pe 'exit if $. > 20' *.conf\n```\n\n###### Search lines 10 to 20\n\n```bash\nperl -ne 'print if 10 .. 20' filename\n```\n\n###### Delete first 10 lines (and backup original)\n\n```bash\nperl -i.orig -ne 'print unless 1 .. 10' filename\n```\n\n###### Delete all but lines between foo and bar (and backup original)\n\n```bash\nperl -i.orig -ne 'print unless /^foo$/ .. /^bar$/' filename\n```\n\n###### Reduce multiple blank lines to a single line\n\n```bash\nperl -p -i -00pe0 filename\n```\n\n###### Convert tabs to spaces (1t = 2sp)\n\n```bash\nperl -p -i -e 's/\\t/  /g' filename\n```\n\n###### Read input from a file and report number of lines and characters\n\n```bash\nperl -lne '$i++; $in += length($_); END { print \"$i lines, $in characters\"; }' filename\n```\n\n#### Shell Tricks &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\nWhen you get a shell, it is generally not very clean, but after following these steps, you will have a fairly clean and comfortable shell to work with.\n\n1) `script /dev/null -c bash`\n2) Ctrl-Z (to send it to background)\n3) `stty raw -echo; fg` (returns the shell to foreground)\n4) `reset` (to reset terminal)\n5) `xterm` (when asked for terminal type)\n6) `export TERM=xterm; export SHELL=bash`\n\n#### Shell functions &nbsp;[<sup>[TOC]</sup>](#anger-table-of-contents)\n\n##### Table of Contents\n\n- [Domain resolve](#domain-resolve)\n- [Get ASN](#get-asn)\n\n###### Domain resolve\n\n```bash\n# Dependencies:\n#   - curl\n#   - jq\n\nfunction DomainResolve() {\n\n  local _host=\"$1\"\n\n  local _curl_base=\"curl --request GET\"\n  local _timeout=\"15\"\n\n  _host_ip=$($_curl_base -ks -m \"$_timeout\" \"https://dns.google.com/resolve?name=${_host}&type=A\" | \\\n  jq '.Answer[0].data' | tr -d \"\\\"\" 2>/dev/null)\n\n  if [[ -z \"$_host_ip\" ]] || [[ \"$_host_ip\" == \"null\" ]] ; then\n\n    echo -en \"Unsuccessful domain name resolution.\\\\n\"\n\n  else\n\n    echo -en \"$_host > $_host_ip\\\\n\"\n\n  fi\n\n}\n```\n\nExample:\n\n```bash\nshell> DomainResolve nmap.org\nnmap.org > 45.33.49.119\n\nshell> DomainResolve nmap.org\nUnsuccessful domain name resolution.\n```\n\n###### Get ASN\n\n```bash\n# Dependencies:\n#   - curl\n\nfunction GetASN() {\n\n  local _ip=\"$1\"\n\n  local _curl_base=\"curl --request GET\"\n  local _timeout=\"15\"\n\n  _asn=$($_curl_base -ks -m \"$_timeout\" \"http://ip-api.com/line/${_ip}?fields=as\")\n\n  _state=$(echo $?)\n\n  if [[ -z \"$_ip\" ]] || [[ \"$_ip\" == \"null\" ]] || [[ \"$_state\" -ne 0 ]]; then\n\n    echo -en \"Unsuccessful ASN gathering.\\\\n\"\n\n  else\n\n    echo -en \"$_ip > $_asn\\\\n\"\n\n  fi\n\n}\n```\n\nExample:\n\n```bash\nshell> GetASN 1.1.1.1\n1.1.1.1 > AS13335 Cloudflare, Inc.\n\nshell> GetASN 0.0.0.0\nUnsuccessful ASN gathering.\n```\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/trimstray/the-book-of-secret-knowledge",
        "repo_name": "the-book-of-secret-knowledge",
        "owner_name": "trimstray",
        "theme_id": "0307c1c2b2654a70bb1e3c8cffa25242",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451404",
        "keywords": [
          "collection",
          "inspiring",
          "lists",
          "manuals",
          "cheatsheets",
          "blogs",
          "hacks",
          "liners",
          "tools",
          "more"
        ]
      },
      {
        "full_name": "avelino/awesome-go",
        "description": "A curated list of awesome Go frameworks, libraries and software",
        "stars": 154047,
        "files": [],
        "readme": "# Awesome Go\n\n<a href=\"https://awesome-go.com/\"><img align=\"right\" src=\"https://github.com/avelino/awesome-go/raw/main/tmpl/assets/logo.png\" alt=\"awesome-go\" title=\"awesome-go\" /></a>\n\n[![Build Status](https://github.com/avelino/awesome-go/actions/workflows/tests.yaml/badge.svg?branch=main)](https://github.com/avelino/awesome-go/actions/workflows/tests.yaml?query=branch%3Amain)\n[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n[![Slack Widget](https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&logo=slack&colorB=red)](https://gophers.slack.com/messages/awesome)\n[![Netlify Status](https://api.netlify.com/api/v1/badges/83a6dcbe-0da6-433e-b586-f68109286bd5/deploy-status)](https://app.netlify.com/sites/awesome-go/deploys)\n[![Track Awesome List](https://www.trackawesomelist.com/badge.svg)](https://www.trackawesomelist.com/avelino/awesome-go/)\n[![Last Commit](https://img.shields.io/github/last-commit/avelino/awesome-go)](https://github.com/avelino/awesome-go/commits/main)\n\nWe use the _[Golang Bridge](https://github.com/gobridge/about-us/blob/master/README.md)_ community Slack for instant communication, follow the [form here to join](https://invite.slack.golangbridge.org/).\n\n<a href=\"https://www.producthunt.com/posts/awesome-go?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-awesome-go\" target=\"_blank\"><img src=\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=291535&theme=light\" alt=\"awesome-go - Curated list awesome Go frameworks, libraries and software | Product Hunt\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>\n\n**Sponsorships:**\n\n_Special thanks to_\n\n<div align=\"center\">\n<table cellpadding=\"5\">\n<tbody align=\"center\">\n<tr>\n<td colspan=\"2\">\n<a href=\"https://bit.ly/awesome-go-workos\">\n<img src=\"https://avelino.run/sponsors/workos-logo-white-bg.svg\" width=\"200\" alt=\"WorkOS\"><br/>\n<b>Your app, enterprise-ready.</b><br/>\n<sub>Start selling to enterprise customers with just a few lines of code.</sub><br/>\n<sup>Add Single Sign-On (and more) in minutes instead of months.</sup>\n</a>\n</td>\n</tr>\n<tr>\n<td colspan=\"2\">\n<a href=\"https://bit.ly/awesome-go-digitalocean\">\n<img src=\"https://avelino.run/sponsors/do_logo_horizontal_blue-210.png\" width=\"200\" alt=\"Digital Ocean\">\n</a>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n**Awesome Go has no monthly fee**_, but we have employees who **work hard** to keep it running. With money raised, we can repay the effort of each person involved! You can see how we calculate our billing and distribution as it is open to the entire community. Want to be a supporter of the project click [here](mailto:avelinorun+oss@gmail.com?subject=awesome-go%3A%20project%20support)._\n\n> A curated list of awesome Go frameworks, libraries, and software. Inspired by [awesome-python](https://github.com/vinta/awesome-python).\n\n**Contributing:**\n\nPlease take a quick gander at the [contribution guidelines](https://github.com/avelino/awesome-go/blob/main/CONTRIBUTING.md) first. Thanks to all [contributors](https://github.com/avelino/awesome-go/graphs/contributors); you rock!\n\n> _If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!_\n\n## Contents\n\n- [Awesome Go](#awesome-go)\n  - [Contents](#contents)\n  - [Actor Model](#actor-model)\n  - [Artificial Intelligence](#artificial-intelligence)\n  - [Audio and Music](#audio-and-music)\n  - [Authentication and Authorization](#authentication-and-authorization)\n  - [Blockchain](#blockchain)\n  - [Bot Building](#bot-building)\n  - [Build Automation](#build-automation)\n  - [Command Line](#command-line)\n    - [Advanced Console UIs](#advanced-console-uis)\n    - [Standard CLI](#standard-cli)\n  - [Configuration](#configuration)\n  - [Continuous Integration](#continuous-integration)\n  - [CSS Preprocessors](#css-preprocessors)\n  - [Data Integration Frameworks](#data-integration-frameworks)\n  - [Data Structures and Algorithms](#data-structures-and-algorithms)\n    - [Bit-packing and Compression](#bit-packing-and-compression)\n    - [Bit Sets](#bit-sets)\n    - [Bloom and Cuckoo Filters](#bloom-and-cuckoo-filters)\n    - [Data Structure and Algorithm Collections](#data-structure-and-algorithm-collections)\n    - [Iterators](#iterators)\n    - [Maps](#maps)\n    - [Miscellaneous Data Structures and Algorithms](#miscellaneous-data-structures-and-algorithms)\n    - [Nullable Types](#nullable-types)\n    - [Queues](#queues)\n    - [Sets](#sets)\n    - [Text Analysis](#text-analysis)\n    - [Trees](#trees)\n    - [Pipes](#pipes)\n  - [Database](#database)\n    - [Caches](#caches)\n    - [Databases Implemented in Go](#databases-implemented-in-go)\n    - [Database Schema Migration](#database-schema-migration)\n    - [Database Tools](#database-tools)\n    - [SQL Query Builders](#sql-query-builders)\n  - [Database Drivers](#database-drivers)\n    - [Interfaces to Multiple Backends](#interfaces-to-multiple-backends)\n    - [Relational Database Drivers](#relational-database-drivers)\n    - [NoSQL Database Drivers](#nosql-database-drivers)\n    - [Search and Analytic Databases](#search-and-analytic-databases)\n  - [Date and Time](#date-and-time)\n  - [Distributed Systems](#distributed-systems)\n  - [Dynamic DNS](#dynamic-dns)\n  - [Email](#email)\n  - [Embeddable Scripting Languages](#embeddable-scripting-languages)\n  - [Error Handling](#error-handling)\n  - [File Handling](#file-handling)\n  - [Financial](#financial)\n  - [Forms](#forms)\n  - [Functional](#functional)\n  - [Game Development](#game-development)\n  - [Generators](#generators)\n  - [Geographic](#geographic)\n  - [Go Compilers](#go-compilers)\n  - [Goroutines](#goroutines)\n  - [GUI](#gui)\n  - [Hardware](#hardware)\n  - [Images](#images)\n  - [IoT (Internet of Things)](#iot-internet-of-things)\n  - [Job Scheduler](#job-scheduler)\n  - [JSON](#json)\n  - [Logging](#logging)\n  - [Machine Learning](#machine-learning)\n  - [Messaging](#messaging)\n  - [Microsoft Office](#microsoft-office)\n    - [Microsoft Excel](#microsoft-excel)\n    - [Microsoft Word](#microsoft-word)\n  - [Miscellaneous](#miscellaneous)\n    - [Dependency Injection](#dependency-injection)\n    - [Project Layout](#project-layout)\n    - [Strings](#strings)\n    - [Uncategorized](#uncategorized)\n  - [Natural Language Processing](#natural-language-processing)\n    - [Language Detection](#language-detection)\n    - [Morphological Analyzers](#morphological-analyzers)\n    - [Slugifiers](#slugifiers)\n    - [Tokenizers](#tokenizers)\n    - [Translation](#translation)\n    - [Transliteration](#transliteration)\n  - [Networking](#networking)\n    - [HTTP Clients](#http-clients)\n  - [OpenGL](#opengl)\n  - [ORM](#orm)\n  - [Package Management](#package-management)\n  - [Performance](#performance)\n  - [Query Language](#query-language)\n  - [Reflection](#reflection)\n  - [Resource Embedding](#resource-embedding)\n  - [Science and Data Analysis](#science-and-data-analysis)\n  - [Security](#security)\n  - [Serialization](#serialization)\n  - [Server Applications](#server-applications)\n  - [Stream Processing](#stream-processing)\n  - [Template Engines](#template-engines)\n  - [Testing](#testing)\n    - [Testing Frameworks](#testing-frameworks)\n    - [Mock](#mock)\n    - [Fuzzing and delta-debugging/reducing/shrinking](#fuzzing-and-delta-debuggingreducingshrinking)\n    - [Selenium and browser control tools](#selenium-and-browser-control-tools)\n    - [Fail injection](#fail-injection)\n  - [Text Processing](#text-processing)\n    - [Formatters](#formatters)\n    - [Markup Languages](#markup-languages)\n    - [Parsers/Encoders/Decoders](#parsersencodersdecoders)\n    - [Regular Expressions](#regular-expressions)\n    - [Sanitation](#sanitation)\n    - [Scrapers](#scrapers)\n    - [RSS](#rss)\n    - [Utility/Miscellaneous](#utilitymiscellaneous)\n  - [Third-party APIs](#third-party-apis)\n  - [Utilities](#utilities)\n  - [UUID](#uuid)\n  - [Validation](#validation)\n  - [Version Control](#version-control)\n  - [Video](#video)\n  - [Web Frameworks](#web-frameworks)\n    - [Middlewares](#middlewares)\n      - [Actual middlewares](#actual-middlewares)\n      - [Libraries for creating HTTP middlewares](#libraries-for-creating-http-middlewares)\n    - [Routers](#routers)\n  - [WebAssembly](#webassembly)\n  - [Webhooks Server](#webhooks-server)\n  - [Windows](#windows)\n  - [Workflow Frameworks](#workflow-frameworks)\n  - [XML](#xml)\n  - [Zero Trust](#zero-trust)\n  - [Code Analysis](#code-analysis)\n  - [Editor Plugins](#editor-plugins)\n  - [Go Generate Tools](#go-generate-tools)\n  - [Go Tools](#go-tools)\n  - [Software Packages](#software-packages)\n    - [DevOps Tools](#devops-tools)\n    - [Other Software](#other-software)\n- [Resources](#resources)\n  - [Benchmarks](#benchmarks)\n  - [Conferences](#conferences)\n  - [E-Books](#e-books)\n    - [E-books for purchase](#e-books-for-purchase)\n    - [Free e-books](#free-e-books)\n  - [Gophers](#gophers)\n  - [Meetups](#meetups)\n  - [Style Guides](#style-guides)\n  - [Social Media](#social-media)\n    - [Twitter](#twitter)\n    - [Reddit](#reddit)\n  - [Websites](#websites)\n    - [Tutorials](#tutorials)\n    - [Guided Learning](#guided-learning)\n\n**[⬆ back to top](#contents)**\n\n## Actor Model\n\n_Libraries for building actor-based programs._\n\n- [Ergo](https://github.com/ergo-services/ergo) - An actor-based Framework with network transparency for creating event-driven architecture in Golang. Inspired by Erlang.\n- [Goakt](https://github.com/Tochemey/goakt) - Fast and Distributed Actor framework using protocol buffers as message for Golang.\n- [Hollywood](https://github.com/anthdm/hollywood) - Blazingly fast and light-weight Actor engine written in Golang.\n- [ProtoActor](https://github.com/asynkron/protoactor-go) - Proto Actor - Ultra fast distributed actors for Go, C# and Java/Kotlin.\n\n## Artificial Intelligence\n\n_Libraries for building programs that leverage AI._\n\n- [chromem-go](https://github.com/philippgille/chromem-go) - Embeddable vector database for Go with Chroma-like interface and zero third-party dependencies. In-memory with optional persistence.\n- [fun](https://gitlab.com/tozd/go/fun) - The simplest but powerful way to use large language models (LLMs) in Go.\n- [langchaingo](https://github.com/tmc/langchaingo) - LangChainGo is a framework for developing applications powered by language models.\n- [LocalAI](https://github.com/mudler/LocalAI) - Open Source OpenAI alternative, self-host AI models.\n- [Ollama](https://github.com/jmorganca/ollama) - Run large language models locally.\n- [OllamaFarm](https://github.com/presbrey/ollamafarm) - Manage, load-balance, and failover packs of Ollamas.\n\n**[⬆ back to top](#contents)**\n\n## Audio and Music\n\n_Libraries for manipulating audio._\n\n- [beep](https://github.com/faiface/beep) - A simple library for playback and audio manipulation.\n- [flac](https://github.com/mewkiz/flac) - Native Go FLAC encoder/decoder with support for FLAC streams.\n- [gaad](https://github.com/Comcast/gaad) - Native Go AAC bitstream parser.\n- [GoAudio](https://github.com/DylanMeeus/GoAudio) - Native Go Audio Processing Library.\n- [gosamplerate](https://github.com/dh1tw/gosamplerate) - libsamplerate bindings for go.\n- [id3v2](https://github.com/bogem/id3v2) - ID3 decoding and encoding library for Go.\n- [malgo](https://github.com/gen2brain/malgo) - Mini audio library.\n- [minimp3](https://github.com/tosone/minimp3) - Lightweight MP3 decoder library.\n- [Oto](https://github.com/hajimehoshi/oto) - A low-level library to play sound on multiple platforms.\n- [PortAudio](https://github.com/gordonklaus/portaudio) - Go bindings for the PortAudio audio I/O library.\n\n**[⬆ back to top](#contents)**\n\n## Authentication and Authorization\n\n_Libraries for implementing authentication and authorization._\n\n- [authboss](https://github.com/volatiletech/authboss) - Modular authentication system for the web. It tries to remove as much boilerplate and \"hard things\" as possible so that each time you start a new web project in Go, you can plug it in, configure it, and start building your app without having to build an authentication system each time.\n- [branca](https://github.com/essentialkaos/branca) - branca token [specification implementation](https://github.com/tuupola/branca-spec) for Golang 1.15+.\n- [casbin](https://github.com/hsluoyz/casbin) - Authorization library that supports access control models like ACL, RBAC, and ABAC.\n- [cookiestxt](https://github.com/mengzhuo/cookiestxt) - provides a parser of cookies.txt file format.\n- [go-iam](https://github.com/melvinodsa/go-iam) - Developer-first Identity and Access Management system with a simple UI.\n- [go-jose](https://github.com/go-jose/go-jose) - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs.\n- [goiabada](https://github.com/leodip/goiabada) - An open-source authentication and authorization server supporting OAuth2 and OpenID Connect.\n- [gologin](https://github.com/dghubble/gologin) - chainable handlers for login with OAuth1 and OAuth2 authentication providers.\n- [gorbac](https://github.com/mikespook/gorbac) - provides a lightweight role-based access control (RBAC) implementation in Golang.\n- [gosession](https://github.com/Kwynto/gosession) - This is quick session for net/http in GoLang. This package is perhaps the best implementation of the session mechanism, or at least it tries to become one.\n- [goth](https://github.com/markbates/goth) - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box.\n- [jeff](https://github.com/abraithwaite/jeff) - Simple, flexible, secure, and idiomatic web session management with pluggable backends.\n- [jwt](https://github.com/pascaldekloe/jwt) - Lightweight JSON Web Token (JWT) library.\n- [jwt](https://github.com/cristalhq/jwt) - Safe, simple, and fast JSON Web Tokens for Go.\n- [jwt-auth](https://github.com/adam-hanna/jwt-auth) - JWT middleware for Golang http servers with many configuration options.\n- [jwt-go](https://github.com/golang-jwt/jwt) - A full featured implementation of JSON Web Tokens (JWT). This library supports the parsing and verification as well as the generation and signing of JWTs.\n- [jwx](https://github.com/lestrrat-go/jwx) - Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies.\n- [keto](https://github.com/ory/keto) - Open Source (Go) implementation of \"Zanzibar: Google's Consistent, Global Authorization System\". Ships gRPC, REST APIs, newSQL, and an easy and granular permission language. Supports ACL, RBAC, and other access models.\n- [loginsrv](https://github.com/tarent/loginsrv) - JWT login microservice with pluggable backends such as OAuth2 (Github), htpasswd, osiam.\n- [oauth2](https://github.com/golang/oauth2) - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine, and App Engine support.\n- [oidc](https://github.com/zitadel/oidc) - Easy to use OpenID Connect client and server library written for Go and certified by the OpenID Foundation.\n- [openfga](https://github.com/openfga/openfga) - Implementation of fine-grained authorization based on the \"Zanzibar: Google's Consistent, Global Authorization System\" paper. Backed by [CNCF](https://www.cncf.io/).\n- [osin](https://github.com/openshift/osin) - Golang OAuth2 server library.\n- [otpgen](https://github.com/grijul/otpgen) - Library to generate TOTP/HOTP codes.\n- [otpgo](https://github.com/jltorresm/otpgo) - Time-Based One-Time Password (TOTP) and HMAC-Based One-Time Password (HOTP) library for Go.\n- [paseto](https://github.com/o1egl/paseto) - Golang implementation of Platform-Agnostic Security Tokens (PASETO).\n- [permissions](https://github.com/xyproto/permissions) - Library for keeping track of users, login states, and permissions. Uses secure cookies and bcrypt.\n- [scope](https://github.com/SonicRoshan/scope) - Easily Manage OAuth2 Scopes In Go.\n- [scs](https://github.com/alexedwards/scs) - Session Manager for HTTP servers.\n- [securecookie](https://github.com/chmike/securecookie) - Efficient secure cookie encoding/decoding.\n- [session](https://github.com/icza/session) - Go session management for web servers (including support for Google App Engine - GAE).\n- [sessions](https://github.com/adam-hanna/sessions) - Dead simple, highly performant, highly customizable sessions service for go http servers.\n- [sessionup](https://github.com/swithek/sessionup) - Simple, yet effective HTTP session management and identification package.\n- [sjwt](https://github.com/brianvoe/sjwt) - Simple jwt generator and parser.\n- [spicedb](https://github.com/authzed/spicedb) - A Zanzibar-inspired database that enables fine-grained authorization.\n- [x509proxy](https://github.com/vkuznet/x509proxy) - Library to handle X509 proxy certificates.\n\n**[⬆ back to top](#contents)**\n\n## Blockchain\n\n_Tools for building blockchains._\n\n- [cometbft](https://github.com/cometbft/cometbft) - A distributed, Byzantine fault-tolerant, deterministic state machine replication engine. It is a fork of Tendermint Core and implements the Tendermint consensus algorithm.\n- [cosmos-sdk](https://github.com/cosmos/cosmos-sdk) - A Framework for Building Public Blockchains in the Cosmos Ecosystem.\n- [gno](https://github.com/gnolang/gno) - A comprehensive smart contract suite built with Golang and Gnolang, a deterministic, purpose-built Go variant for blockchains.\n- [go-ethereum](https://github.com/ethereum/go-ethereum) - Official Go implementation of the Ethereum protocol.\n- [gosemble](https://github.com/LimeChain/gosemble) - A Go-based framework for building Polkadot/Substrate-compatible runtimes.\n- [gossamer](https://github.com/ChainSafe/gossamer) - A Go implementation of the Polkadot Host.\n- [kubo](https://github.com/ipfs/kubo) - An IPFS implementation in Go. It provides content-addressable storage which can be used for decentralized storage in DApps. It is based on the IPFS protocol.\n- [lnd](https://github.com/lightningnetwork/lnd) - A complete implementation of a Lightning Network node.\n- [solana-go](https://github.com/gagliardetto/solana-go) - Go library to interface with Solana JSON RPC and WebSocket interfaces.\n- [tendermint](https://github.com/tendermint/tendermint) - High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols.\n\n**[⬆ back to top](#contents)**\n\n## Bot Building\n\n_Libraries for building and working with bots._\n\n- [arikawa](https://github.com/diamondburned/arikawa) - A library and framework for the Discord API.\n- [bot](https://github.com/go-telegram/bot) - Zero-dependencies Telegram Bot library with additional UI components.\n- [echotron](https://github.com/NicoNex/echotron) - An elegant and concurrent library for Telegram Bots in Go.\n- [go-joe](https://joe-bot.net) - A general-purpose bot library inspired by Hubot but written in Go.\n- [go-sarah](https://github.com/oklahomer/go-sarah) - Framework to build a bot for desired chat services including LINE, Slack, Gitter, and more.\n- [go-tg](https://github.com/mr-linch/go-tg) - Generated from official docs Go client library for accessing Telegram Bot API, with batteries for building complex bots included.\n- [go-twitch-irc](https://github.com/gempir/go-twitch-irc) - Library to write bots for twitch.tv chat\n- [micha](https://github.com/onrik/micha) - Go Library for Telegram bot api.\n- [slack-bot](https://github.com/innogames/slack-bot) - Ready to use Slack Bot for lazy developers: Custom commands, Jenkins, Jira, Bitbucket, Github...\n- [slacker](https://github.com/slack-io/slacker) - Easy to use framework to create Slack bots.\n- [telebot](https://github.com/tucnak/telebot) - Telegram bot framework is written in Go.\n- [telego](https://github.com/mymmrac/telego) - Telegram Bot API library for Golang with full one-to-one API implementation.\n- [telegram-bot-api](https://github.com/go-telegram-bot-api/telegram-bot-api) - Simple and clean Telegram bot client.\n- [wayback](https://github.com/wabarc/wayback) - A bot for Telegram, Mastodon, Slack, and other messaging platforms archives webpages.\n\n**[⬆ back to top](#contents)**\n\n## Build Automation\n\n_Libraries and tools help with build automation._\n\n- [1build](https://github.com/gopinath-langote/1build) - Command line tool to frictionlessly manage project-specific commands.\n- [air](https://github.com/cosmtrek/air) - Air - Live reload for Go apps.\n- [anko](https://github.com/GuilhermeCaruso/anko) - Simple application watcher for multiple programming languages.\n- [gaper](https://github.com/maxclaus/gaper) - Builds and restarts a Go project when it crashes or some watched file changes.\n- [gilbert](https://go-gilbert.github.io) - Build system and task runner for Go projects.\n- [gob](https://github.com/kcmvp/gob) - [Gradle](https://docs.gradle.org/)/[Maven](https://maven.apache.org/) like build tool for Go projects.\n- [goyek](https://github.com/goyek/goyek) - Create build pipelines in Go.\n- [mage](https://github.com/magefile/mage) - Mage is a make/rake-like build tool using Go.\n- [mmake](https://github.com/tj/mmake) - Modern Make.\n- [realize](https://github.com/tockins/realize) - Go build a system with file watchers and live to reload. Run, build and watch file changes with custom paths.\n- [Task](https://github.com/go-task/task) - simple \"Make\" alternative.\n- [taskctl](https://github.com/taskctl/taskctl) - Concurrent task runner.\n- [xc](https://github.com/joerdav/xc) - Task runner with README.md defined tasks, executable markdown.\n\n**[⬆ back to top](#contents)**\n\n## Command Line\n\n### Advanced Console UIs\n\n_Libraries for building Console Applications and Console User Interfaces._\n\n- [asciigraph](https://github.com/guptarohit/asciigraph) - Go package to make lightweight ASCII line graph ╭┈╯ in command line apps with no other dependencies.\n- [aurora](https://github.com/logrusorgru/aurora) - ANSI terminal colors that support fmt.Printf/Sprintf.\n- [box-cli-maker](https://github.com/Delta456/box-cli-maker) - Make Highly Customized Boxes for your CLI.\n- [bubble-table](https://github.com/Evertras/bubble-table) - An interactive table component for bubbletea.\n- [bubbles](https://github.com/charmbracelet/bubbles) - TUI components for bubbletea.\n- [bubbletea](https://github.com/charmbracelet/bubbletea) - Go framework to build terminal apps, based on The Elm Architecture.\n- [cfmt](https://github.com/mingrammer/cfmt) - Contextual fmt inspired by bootstrap color classes.\n- [cfmt](https://github.com/i582/cfmt) - Simple and convenient formatted stylized output fully compatible with fmt library.\n- [chalk](https://github.com/ttacon/chalk) - Intuitive package for prettifying terminal/console output.\n- [crab-config-files-templating](https://github.com/alfiankan/crab-config-files-templating) - Dynamic configuration file templating tool for kubernetes manifest or general configuration files.\n- [ctc](https://github.com/wzshiming/ctc) - The non-invasive cross-platform terminal color library does not need to modify the Print method.\n- [fx](https://github.com/antonmedv/fx) - Terminal JSON viewer & processor.\n- [go-ataman](https://github.com/workanator/go-ataman) - Go library for rendering ANSI colored text templates in terminals.\n- [go-colorable](https://github.com/mattn/go-colorable) - Colorable writer for windows.\n- [go-colortext](https://github.com/daviddengcn/go-colortext) - Go library for color output in terminals.\n- [go-isatty](https://github.com/mattn/go-isatty) - isatty for golang.\n- [go-palette](https://github.com/abusomani/go-palette) - Go library that provides elegant and convenient style definitions using ANSI colors. Fully compatible & wraps the [fmt library](https://pkg.go.dev/fmt) for nice terminal layouts.\n- [go-prompt](https://github.com/c-bata/go-prompt) - Library for building a powerful interactive prompt, inspired by [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit).\n- [gocui](https://github.com/jroimartin/gocui) - Minimalist Go library aimed at creating Console User Interfaces.\n- [gommon/color](https://github.com/labstack/gommon/tree/master/color) - Style terminal text.\n- [gookit/color](https://github.com/gookit/color) - Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows.\n- [lipgloss](https://github.com/charmbracelet/lipgloss) - Declaratively define styles for color, format and layout in the terminal.\n- [marker](https://github.com/cyucelen/marker) - Easiest way to match and mark strings for colorful terminal outputs.\n- [mpb](https://github.com/vbauerster/mpb) - Multi progress bar for terminal applications.\n- [progressbar](https://github.com/schollz/progressbar) - Basic thread-safe progress bar that works in every OS.\n- [pterm](https://github.com/pterm/pterm) - A library to beautify console output on every platform with many combinable components.\n- [simpletable](https://github.com/alexeyco/simpletable) - Simple tables in a terminal with Go.\n- [spinner](https://github.com/briandowns/spinner) - Go package to easily provide a terminal spinner with options.\n- [tabby](https://github.com/cheynewallace/tabby) - A tiny library for super simple Golang tables.\n- [table](https://github.com/tomlazar/table) - Small library for terminal color based tables.\n- [termbox-go](https://github.com/nsf/termbox-go) - Termbox is a library for creating cross-platform text-based interfaces.\n- [termdash](https://github.com/mum4k/termdash) - Go terminal dashboard based on **termbox-go** and inspired by [termui](https://github.com/gizak/termui).\n- [termenv](https://github.com/muesli/termenv) - Advanced ANSI style & color support for your terminal applications.\n- [termui](https://github.com/gizak/termui) - Go terminal dashboard based on **termbox-go** and inspired by [blessed-contrib](https://github.com/yaronn/blessed-contrib).\n- [uilive](https://github.com/gosuri/uilive) - Library for updating terminal output in real time.\n- [uiprogress](https://github.com/gosuri/uiprogress) - Flexible library to render progress bars in terminal applications.\n- [uitable](https://github.com/gosuri/uitable) - Library to improve readability in terminal apps using tabular data.\n- [yacspin](https://github.com/theckman/yacspin) - Yet Another CLi Spinner package, for working with terminal spinners.\n\n**[⬆ back to top](#contents)**\n\n### Standard CLI\n\n_Libraries for building standard or basic Command Line applications._\n\n- [acmd](https://github.com/cristalhq/acmd) - Simple, useful, and opinionated CLI package in Go.\n- [argparse](https://github.com/akamensky/argparse) - Command line argument parser inspired by Python's argparse module.\n- [argv](https://github.com/cosiner/argv) - Go library to split command line string as arguments array using the bash syntax.\n- [carapace](https://github.com/rsteube/carapace) - Command argument completion generator for spf13/cobra.\n- [carapace-bin](https://github.com/rsteube/carapace-bin) - Multi-shell multi-command argument completer.\n- [carapace-spec](https://github.com/rsteube/carapace-spec) - Define simple completions using a spec file.\n- [climax](https://github.com/tucnak/climax) - Alternative CLI with \"human face\", in spirit of Go command.\n- [clîr](https://github.com/leaanthony/clir) - A Simple and Clear CLI library. Dependency free.\n- [cmd](https://github.com/posener/cmd) - Extends the standard `flag` package to support sub commands and more in idiomatic way.\n- [cmdr](https://github.com/hedzr/cmdr) - A POSIX/GNU style, getopt-like command-line UI Go library.\n- [cobra](https://github.com/spf13/cobra) - Commander for modern Go CLI interactions.\n- [command-chain](https://github.com/rainu/go-command-chain) - A go library for configure and run command chains - such as pipelining in unix shells.\n- [commandeer](https://github.com/jaffee/commandeer) - Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags.\n- [complete](https://github.com/posener/complete) - Write bash completions in Go + Go command bash completion.\n- [console](https://github.com/reeflective/console) Closed-loop application library for Cobra commands, with oh-my-posh prompts, and more.\n- [Dnote](https://github.com/dnote/dnote) - A simple command line notebook with multi-device sync.\n- [elvish](https://github.com/elves/elvish) - An expressive programming language and a versatile interactive shell.\n- [env](https://github.com/codingconcepts/env) - Tag-based environment configuration for structs.\n- [flaggy](https://github.com/integrii/flaggy) - A robust and idiomatic flags package with excellent subcommand support.\n- [flagvar](https://github.com/sgreben/flagvar) - A collection of flag argument types for Go's standard `flag` package.\n- [getopt](https://github.com/jon-codes/getopt) - An accurate Go `getopt`, validated against the GNU libc implementation.\n- [go-arg](https://github.com/alexflint/go-arg) - Struct-based argument parsing in Go.\n- [go-flags](https://github.com/jessevdk/go-flags) - go command line option parser.\n- [go-getoptions](https://github.com/DavidGamba/go-getoptions) - Go option parser inspired by the flexibility of Perl’s GetOpt::Long.\n- [go-readline-ny](https://github.com/nyaosorg/go-readline-ny) - A customizable line-editing library with Emacs keybindings, Unicode support, completion, and syntax highlighting. Used in NYAGOS shell.\n- [gocmd](https://github.com/devfacet/gocmd) - Go library for building command line applications.\n- [goopt](https://github.com/napalu/goopt) - A declarative, struct-tag based CLI framework for Go, with a broad feature set such as hierarchical commands/flags, i18n, shell completion, and validation.\n- [hashicorp/cli](https://github.com/hashicorp/cli) - Go library for implementing command-line interfaces.\n- [hiboot cli](https://github.com/hidevopsio/hiboot/tree/master/pkg/app/cli) - cli application framework with auto configuration and dependency injection.\n- [job](https://github.com/liujianping/job) - JOB, make your short-term command as a long-term job.\n- [kingpin](https://github.com/alecthomas/kingpin) - Command line and flag parser supporting sub commands (superseded by `kong`; see below).\n- [liner](https://github.com/peterh/liner) - Go readline-like library for command-line interfaces.\n- [mcli](https://github.com/jxskiss/mcli) - A minimal but very powerful cli library for Go.\n- [mkideal/cli](https://github.com/mkideal/cli) - Feature-rich and easy to use command-line package based on golang struct tags.\n- [mow.cli](https://github.com/jawher/mow.cli) - Go library for building CLI applications with sophisticated flag and argument parsing and validation.\n- [ops](https://github.com/nanovms/ops) - Unikernel Builder/Orchestrator.\n- [pflag](https://github.com/spf13/pflag) - Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags.\n- [readline](https://github.com/reeflective/readline) - Shell library with modern and easy to use UI features.\n- [sand](https://github.com/Zaba505/sand) - Simple API for creating interpreters and so much more.\n- [sflags](https://github.com/octago/sflags) - Struct based flags generator for flag, urfave/cli, pflag, cobra, kingpin, and other libraries.\n- [strumt](https://github.com/antham/strumt) - Library to create prompt chain.\n- [subcmd](https://github.com/bobg/subcmd) - Another approach to parsing and running subcommands. Works alongside the standard `flag` package.\n- [teris-io/cli](https://github.com/teris-io/cli) - Simple and complete API for building command line interfaces in Go.\n- [ts](https://github.com/liujianping/ts) - Timestamp convert & compare tool.\n- [ukautz/clif](https://github.com/ukautz/clif) - Small command line interface framework.\n- [urfave/cli](https://github.com/urfave/cli) - Simple, fast, and fun package for building command line apps in Go (formerly codegangsta/cli).\n- [version](https://github.com/mszostok/version) - Collects and displays CLI version information in multiple formats along with upgrade notice.\n- [wlog](https://github.com/dixonwille/wlog) - Simple logging interface that supports cross-platform color and concurrency.\n- [wmenu](https://github.com/dixonwille/wmenu) - Easy to use menu structure for cli applications that prompt users to make choices.\n\n**[⬆ back to top](#contents)**\n\n## Configuration\n\n_Libraries for configuration parsing._\n\n- [aconfig](https://github.com/cristalhq/aconfig) - Simple, useful and opinionated config loader.\n- [bcl](https://github.com/wkhere/bcl) - BCL is a configuration language similar to HCL.\n- [cleanenv](https://github.com/ilyakaznacheev/cleanenv) - Minimalistic configuration reader (from files, ENV, and wherever you want).\n- [config](https://github.com/JeremyLoy/config) - Cloud native application configuration. Bind ENV to structs in only two lines.\n- [config](https://github.com/num30/config) - configure your app using file, environment variables, or flags in two lines of code.\n- [configuration](https://github.com/BoRuDar/configuration) - Library for initializing configuration structs from env variables, files, flags and 'default' tag.\n- [configure](https://github.com/paked/configure) - Provides configuration through multiple sources, including JSON, flags and environment variables.\n- [configuro](https://github.com/sherifabdlnaby/configuro) - opinionated configuration loading & validation framework from ENV and Files focused towards 12-Factor compliant applications.\n- [confiq](https://github.com/greencoda/confiq) - Structured data format to config struct decoder library for Go - supporting multiple data formats.\n- [confita](https://github.com/heetch/confita) - Load configuration in cascade from multiple backends into a struct.\n- [conflate](https://github.com/the4thamigo-uk/conflate) - Library/tool to merge multiple JSON/YAML/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema.\n- [enflag](https://github.com/atelpis/enflag) - Container-oriented, zero-dependency configuration library that unifies Env variable and Flag parsing. Uses generics for type safety, without reflection or struct tags.\n- [env](https://github.com/caarlos0/env) - Parse environment variables to Go structs (with defaults).\n- [env](https://github.com/junk1tm/env) - A lightweight package for loading environment variables into structs.\n- [env](https://github.com/syntaqx/env) - An environment utility package with support for unmarshaling into structs.\n- [envconfig](https://github.com/vrischmann/envconfig) - Read your configuration from environment variables.\n- [envh](https://github.com/antham/envh) - Helpers to manage environment variables.\n- [envyaml](https://github.com/yuseferi/envyaml) - Yaml with environment variables reader. it helps to have secrets as environment variable but load them configs as structured Yaml.\n- [fig](https://github.com/kkyr/fig) - Tiny library for reading configuration from a file and from environment variables (with validation & defaults).\n- [genv](https://github.com/sakirsensoy/genv) - Read environment variables easily with dotenv support.\n- [go-array](https://github.com/deatil/go-array) - A Go package that read or set data from map, slice or json.\n- [go-aws-ssm](https://github.com/PaddleHQ/go-aws-ssm) - Go package that fetches parameters from AWS System Manager - Parameter Store.\n- [go-cfg](https://github.com/dsbasko/go-cfg) - The library provides a unified way to read configuration data into a structure from various sources, such as env, flags, and configuration files (.json, .yaml, .toml, .env).\n- [go-conf](https://github.com/ThomasObenaus/go-conf) - Simple library for application configuration based on annotated structs. It supports reading the configuration from environment variables, config files and command line parameters.\n- [go-ini](https://github.com/subpop/go-ini) - A Go package that marshals and unmarshals INI-files.\n- [go-ssm-config](https://github.com/ianlopshire/go-ssm-config) - Go utility for loading configuration parameters from AWS SSM (Parameter Store).\n- [go-up](https://github.com/ufoscout/go-up) - A simple configuration library with recursive placeholders resolution and no magic.\n- [GoCfg](https://github.com/Jagerente/gocfg) - Config manager with Struct Tags based contracts, custom value providers, parsers, and documentation generation. Customizable yet simple.\n- [godotenv](https://github.com/joho/godotenv) - Go port of Ruby's dotenv library (Loads environment variables from `.env`).\n- [gofigure](https://github.com/ian-kent/gofigure) - Go application configuration made easy.\n- [GoLobby/Config](https://github.com/golobby/config) - GoLobby Config is a lightweight yet powerful configuration manager for the Go programming language.\n- [gone/jconf](https://github.com/One-com/gone/tree/master/jconf) - Modular JSON configuration. Keep your config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization.\n- [gonfig](https://github.com/milad-abbasi/gonfig) - Tag-based configuration parser which loads values from different providers into typesafe struct.\n- [gookit/config](https://github.com/gookit/config) - application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge.\n- [harvester](https://github.com/beatlabs/harvester) - Harvester, a easy to use static and dynamic configuration package supporting seeding, env vars and Consul integration.\n- [hedzr/store](https://github.com/hedzr/store) - Extensible, high-performance configuration management library, optimized for hierarchical data.\n- [hjson](https://github.com/hjson/hjson-go) - Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.\n- [hocon](https://github.com/gurkankaymak/hocon) - Configuration library for working with the HOCON(a human-friendly JSON superset) format, supports features like environment variables, referencing other values, comments and multiple files.\n- [ingo](https://github.com/schachmat/ingo) - Flags persisted in an ini-like config file.\n- [ini](https://github.com/go-ini/ini) - Go package to read and write INI files.\n- [ini](https://github.com/wlevene/ini) - INI Parser & Write Library, Unmarshal to Struct, Marshal to Json, Write File, watch file.\n- [joshbetz/config](https://github.com/joshbetz/config) - Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP.\n- [kelseyhightower/envconfig](https://github.com/kelseyhightower/envconfig) - Go library for managing configuration data from environment variables.\n- [koanf](https://github.com/knadh/koanf) - Light weight, extensible library for reading config in Go applications. Built in support for JSON, TOML, YAML, env, command line.\n- [konf](https://github.com/nil-go/konf) - The simplest API for reading/watching config from file, env, flag and clouds (e.g. AWS, Azure, GCP).\n- [konfig](https://github.com/lalamove/konfig) - Composable, observable and performant config handling for Go for the distributed processing era.\n- [kong](https://github.com/alecthomas/kong) - Command-line parser with support for arbitrarily complex command-line structures and additional sources of configuration such as YAML, JSON, TOML, etc (successor to `kingpin`).\n- [mini](https://github.com/sasbury/mini) - Golang package for parsing ini-style configuration files.\n- [nasermirzaei89/env](https://github.com/nasermirzaei89/env) - Simple useful package for read environment variables.\n- [nfigure](https://github.com/muir/nfigure) - Per-library struct-tag based configuration from command lines (Posix & Go-style); environment, JSON, YAML\n- [onion](https://github.com/goraz/onion) - Layer based configuration for Go, Supports JSON, TOML, YAML, properties, etcd, env, and encryption using PGP.\n- [piper](https://github.com/Yiling-J/piper) - Viper wrapper with config inheritance and key generation.\n- [sonic](https://github.com/bytedance/sonic) - A blazingly fast JSON serializing & deserializing library.\n- [store](https://github.com/tucnak/store) - Lightweight configuration manager for Go.\n- [swap](https://github.com/oblq/swap) - Instantiate/configure structs recursively, based on build environment. (YAML, TOML, JSON and env).\n- [typenv](https://github.com/diegomarangoni/typenv) - Minimalistic, zero dependency, typed environment variables library.\n- [uConfig](https://github.com/omeid/uconfig) - Lightweight, zero-dependency, and extendable configuration management.\n- [viper](https://github.com/spf13/viper) - Go configuration with fangs.\n- [xdg](https://github.com/adrg/xdg) - Go implementation of the [XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/latest/) and [XDG user directories](https://wiki.archlinux.org/index.php/XDG_user_directories).\n- [yamagiconf](https://github.com/romshark/yamagiconf) - The \"safe subset\" of YAML for Go configs.\n- [zerocfg](https://github.com/chaindead/zerocfg) - Zero-effort, concise configuration management that avoids boilerplate and repetitive code, supports multiple sources with priority overrides.\n\n**[⬆ back to top](#contents)**\n\n## Continuous Integration\n\n_Tools for help with continuous integration._\n\n- [abstruse](https://github.com/bleenco/abstruse) - Abstruse is a distributed CI platform.\n- [Bencher](https://bencher.dev/) - A suite of continuous benchmarking tools designed to catch performance regressions in CI.\n- [CDS](https://github.com/ovh/cds) - Enterprise-Grade CI/CD and DevOps Automation Open Source Platform.\n- [dot](https://github.com/opnlabs/dot) - A minimal, local first continuous integration system that uses Docker to run jobs concurrently in stages.\n- [drone](https://github.com/drone/drone) - Drone is a Continuous Integration platform built on Docker, written in Go.\n- [go-beautiful-html-coverage](https://github.com/gha-common/go-beautiful-html-coverage) - A GitHub Action to track code coverage in your pull requests, with a beautiful HTML preview, for free.\n- [go-fuzz-action](https://github.com/jidicula/go-fuzz-action) - Use Go 1.18's built-in fuzz testing in GitHub Actions.\n- [go-semver-release](https://github.com/s0ders/go-semver-release) - Automate the semantic versioning of Git repositories.\n- [go-test-coverage](https://github.com/vladopajic/go-test-coverage) - Tool and GitHub action which reports issues when test coverage is below set threshold.\n- [gomason](https://github.com/nikogura/gomason) - Test, Build, Sign, and Publish your go binaries from a clean workspace.\n- [gotestfmt](https://github.com/GoTestTools/gotestfmt) - go test output for humans.\n- [goveralls](https://github.com/mattn/goveralls) - Go integration for Coveralls.io continuous code coverage tracking system.\n- [muffet](https://github.com/raviqqe/muffet) - Fast website link checker in Go, see [alternatives](https://github.com/lycheeverse/lychee#features).\n- [overalls](https://github.com/go-playground/overalls) - Multi-Package go project coverprofile for tools like goveralls.\n- [roveralls](https://github.com/LawrenceWoodman/roveralls) - Recursive coverage testing tool.\n- [woodpecker](https://github.com/woodpecker-ci/woodpecker) - Woodpecker is a community fork of the Drone CI system.\n\n**[⬆ back to top](#contents)**\n\n## CSS Preprocessors\n\n_Libraries for preprocessing CSS files._\n\n- [go-libsass](https://github.com/wellington/go-libsass) - Go wrapper to the 100% Sass compatible libsass project.\n\n**[⬆ back to top](#contents)**\n\n## Data Integration Frameworks\n\n_Frameworks for performing ELT / ETL_\n\n- [Benthos](https://github.com/benthosdev/benthos) - A message streaming bridge between a range of protocols.\n- [CloudQuery](http://github.com/cloudquery/cloudquery) - A high-performance ELT data integration framework with pluggable architecture.\n- [omniparser](https://github.com/jf-tech/omniparser) - A versatile ETL library that parses text input (CSV/txt/JSON/XML/EDI/X12/EDIFACT/etc) in streaming fashion and transforms data into JSON output using data-driven schema.\n\n**[⬆ back to top](#contents)**\n\n## Data Structures and Algorithms\n\n### Bit-packing and Compression\n\n- [bingo](https://github.com/iancmcc/bingo) - Fast, zero-allocation, lexicographical-order-preserving packing of native types to bytes.\n- [binpacker](https://github.com/zhuangsirui/binpacker) - Binary packer and unpacker helps user build custom binary stream.\n- [bit](https://github.com/yourbasic/bit) - Golang set data structure with bonus bit-twiddling functions.\n- [crunch](https://github.com/superwhiskers/crunch) - Go package implementing buffers for handling various datatypes easily.\n- [go-ef](https://github.com/amallia/go-ef) - A Go implementation of the Elias-Fano encoding.\n- [roaring](https://github.com/RoaringBitmap/roaring) - Go package implementing compressed bitsets.\n\n### Bit Sets\n\n- [bitmap](https://github.com/kelindar/bitmap) - Dense, zero-allocation, SIMD-enabled bitmap/bitset in Go.\n- [bitset](https://github.com/bits-and-blooms/bitset) - Go package implementing bitsets.\n\n### Bloom and Cuckoo Filters\n\n- [bloom](https://github.com/bits-and-blooms/bloom) - Go package implementing Bloom filters.\n- [bloom](https://github.com/zhenjl/bloom) - Bloom filters implemented in Go.\n- [bloom](https://github.com/yourbasic/bloom) - Golang Bloom filter implementation.\n- [bloomfilter](https://github.com/OldPanda/bloomfilter) - Yet another Bloomfilter implementation in Go, compatible with Java's Guava library.\n- [boomfilters](https://github.com/tylertreat/BoomFilters) - Probabilistic data structures for processing continuous, unbounded streams.\n- [cuckoo-filter](https://github.com/linvon/cuckoo-filter) - Cuckoo filter: a comprehensive cuckoo filter, which is configurable and space optimized compared with other implements, and all features mentioned in original paper are available.\n- [cuckoofilter](https://github.com/seiflotfy/cuckoofilter) - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.\n- [ring](https://github.com/TheTannerRyan/ring) - Go implementation of a high performance, thread safe bloom filter.\n\n### Data Structure and Algorithm Collections\n\n- [algorithms](https://github.com/shady831213/algorithms) - Algorithms and data structures.CLRS study.\n- [go-datastructures](https://github.com/Workiva/go-datastructures) - Collection of useful, performant, and thread-safe data structures.\n- [gods](https://github.com/emirpasic/gods) - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.\n- [gostl](https://github.com/liyue201/gostl) - Data structure and algorithm library for go, designed to provide functions similar to C++ STL.\n\n### Iterators\n\n- [goterator](https://github.com/yaa110/goterator) - Iterator implementation to provide map and reduce functionalities.\n- [iter](https://github.com/disksing/iter) - Go implementation of C++ STL iterators and algorithms.\n\n### Maps\n\nSee also [Database](#database) for more complex key-value stores, and [Trees](#trees) for\nadditional ordered map implementations.\n\n- [cmap](https://github.com/lrita/cmap) - a thread-safe concurrent map for go, support using `interface{}` as key and auto scale up shards.\n- [dict](https://github.com/srfrog/dict) - Python-like dictionaries (dict) for Go.\n- [go-shelve](https://github.com/lucmq/go-shelve) - A persistent, map-like object for the Go programming language. Supports multiple embedded key-value stores.\n- [goradd/maps](https://github.com/goradd/maps) - Go 1.18+ generic map interface for maps; safe maps; ordered maps; ordered, safe maps; etc.\n\n### Miscellaneous Data Structures and Algorithms\n\n- [concurrent-writer](https://github.com/free/concurrent-writer) - Highly concurrent drop-in replacement for `bufio.Writer`.\n- [count-min-log](https://github.com/seiflotfy/count-min-log) - Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory).\n- [fsm](https://github.com/cocoonspace/fsm) - Finite-State Machine package.\n- [genfuncs](https://github.com/nwillc/genfuncs) - Go 1.18+ generics package inspired by Kotlin's Sequence and Map.\n- [go-generics](https://github.com/bobg/go-generics) - Generic slice, map, set, iterator, and goroutine utilities.\n- [go-geoindex](https://github.com/hailocab/go-geoindex) - In-memory geo index.\n- [go-rampart](https://github.com/francesconi/go-rampart) - Determine how intervals relate to each other.\n- [go-rquad](https://github.com/aurelien-rainone/go-rquad) - Region quadtrees with efficient point location and neighbour finding.\n- [go-tuple](https://github.com/barweiss/go-tuple) - Generic tuple implementation for Go 1.18+.\n- [go18ds](https://github.com/daichi-m/go18ds) - Go Data Structures using Go 1.18 generics.\n- [gofal](https://github.com/xxjwxc/gofal) - fractional api for Go.\n- [gogu](https://github.com/esimov/gogu) - A comprehensive, reusable and efficient concurrent-safe generics utility functions and data structures library.\n- [gota](https://github.com/kniren/gota) - Implementation of dataframes, series, and data wrangling methods for Go.\n- [hide](https://github.com/emvi/hide) - ID type with marshalling to/from hash to prevent sending IDs to clients.\n- [hyperloglog](https://github.com/axiomhq/hyperloglog) - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.\n- [quadtree](https://github.com/s0rg/quadtree) - Generic, zero-alloc, 100%-test covered quadtree.\n- [slices](https://github.com/twharmon/slices) - Pure, generic functions for slices.\n\n### Nullable Types\n\n- [nan](https://github.com/kak-tus/nan) - Zero allocation Nullable structures in one library with handy conversion functions, marshallers and unmarshallers.\n- [null](https://github.com/emvi/null) - Nullable Go types that can be marshalled/unmarshalled to/from JSON.\n- [typ](https://github.com/gurukami/typ) - Null Types, Safe primitive type conversion and fetching value from complex structures.\n\n### Queues\n\n- [deque](https://github.com/edwingeng/deque) - A highly optimized double-ended queue.\n- [deque](https://github.com/gammazero/deque) - Fast ring-buffer deque (double-ended queue).\n- [dqueue](https://github.com/vodolaz095/dqueue) - Simple, in memory, zero dependency and battle tested, thread-safe deferred queue.\n- [goconcurrentqueue](https://github.com/enriquebris/goconcurrentqueue) - Concurrent FIFO queue.\n- [hatchet](https://github.com/hatchet-dev/hatchet) - Distributed, Fault-tolerant task queue.\n- [memlog](https://github.com/embano1/memlog) - An easy to use, lightweight, thread-safe and append-only in-memory data structure inspired by Apache Kafka.\n- [queue](https://github.com/adrianbrad/queue) - Multiple thread-safe, generic queue implementations for Go.\n\n### Sets\n\n- [dsu](https://github.com/ihebu/dsu) - Disjoint Set data structure implementation in Go.\n- [golang-set](https://github.com/deckarep/golang-set) - Thread-Safe and Non-Thread-Safe high-performance sets for Go.\n- [goset](https://github.com/zoumo/goset) - A useful Set collection implementation for Go.\n- [set](https://github.com/StudioSol/set) - Simple set data structure implementation in Go using LinkedHashMap.\n\n### Text Analysis\n\n- [bleve](https://github.com/blevesearch/bleve) - Modern text indexing library for go.\n- [go-adaptive-radix-tree](https://github.com/plar/go-adaptive-radix-tree) - Go implementation of Adaptive Radix Tree.\n- [go-edlib](https://github.com/hbollon/go-edlib) - Go string comparison and edit distance algorithms library (Levenshtein, LCS, Hamming, Damerau levenshtein, Jaro-Winkler, etc.) compatible with Unicode.\n- [levenshtein](https://github.com/agext/levenshtein) - Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix.\n- [levenshtein](https://github.com/agnivade/levenshtein) - Implementation to calculate levenshtein distance in Go.\n- [mspm](https://github.com/BlackRabbitt/mspm) - Multi-String Pattern Matching Algorithm for information retrieval.\n- [parsefields](https://github.com/MonaxGT/parsefields) - Tools for parse JSON-like logs for collecting unique fields and events.\n- [ptrie](https://github.com/viant/ptrie) - An implementation of prefix tree.\n- [trie](https://github.com/derekparker/trie) - Trie implementation in Go.\n\n### Trees\n\n- [hashsplit](http://github.com/bobg/hashsplit) - Split byte streams into chunks, and arrange chunks into trees, with boundaries determined by content, not position.\n- [merkle](https://github.com/bobg/merkle) - Space-efficient computation of Merkle root hashes and inclusion proofs.\n- [skiplist](https://github.com/MauriceGit/skiplist) - Very fast Go Skiplist implementation.\n- [skiplist](https://github.com/gansidui/skiplist) - Skiplist implementation in Go.\n- [treemap](https://github.com/igrmk/treemap) - Generic key-sorted map using a red-black tree under the hood.\n\n### Pipes\n\n- [ordered-concurrently](https://github.com/tejzpr/ordered-concurrently) - Go module that processes work concurrently and returns output in a channel in the order of input.\n- [parapipe](https://github.com/nazar256/parapipe) - FIFO Pipeline which parallels execution on each stage while maintaining the order of messages and results.\n- [pipeline](https://github.com/hyfather/pipeline) - An implementation of pipelines with fan-in and fan-out.\n- [pipelines](https://github.com/nxdir-s/pipelines) - Generic pipeline functions for concurrent processing.\n\n**[⬆ back to top](#contents)**\n\n## Database\n\n### Caches\n\n_Data stores with expiring records, in-memory distributed data stores, or in-memory subsets of file-based databases._\n\n- [2q](https://github.com/floatdrop/2q) - 2Q in-memory cache implementation.\n- [bcache](https://github.com/iwanbk/bcache) - Eventually consistent distributed in-memory cache Go library.\n- [BigCache](https://github.com/allegro/bigcache) - Efficient key/value cache for gigabytes of data.\n- [cache](https://github.com/akyoto/cache) - In-memory key:value store with expiration time, 0 dependencies, <100 LoC, 100% coverage.\n- [cache2go](https://github.com/muesli/cache2go) - In-memory key:value cache which supports automatic invalidation based on timeouts.\n- [cachego](https://github.com/faabiosr/cachego) - Golang Cache component for multiple drivers.\n- [clusteredBigCache](https://github.com/oaStuff/clusteredBigCache) - BigCache with clustering support and individual item expiration.\n- [coherence-go-client](https://github.com/oracle/coherence-go-client) - Full implementation of Oracle Coherence cache API for Go applications using gRPC as network transport.\n- [couchcache](https://github.com/codingsince1985/couchcache) - RESTful caching micro-service backed by Couchbase server.\n- [EchoVault](https://github.com/EchoVault/EchoVault) - Embeddable Distributed in-memory data store compatible with Redis clients.\n- [fastcache](https://github.com/VictoriaMetrics/fastcache) - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.\n- [GCache](https://github.com/bluele/gcache) - Cache library with support for expirable Cache, LFU, LRU and ARC.\n- [gdcache](https://github.com/ulovecode/gdcache) - A pure non-intrusive cache library implemented by golang, you can use it to implement your own distributed cache.\n- [go-cache](https://github.com/viney-shih/go-cache) - A flexible multi-layer Go caching library to deal with in-memory and shared cache by adopting Cache-Aside pattern.\n- [go-freelru](https://github.com/elastic/go-freelru) A GC-less, fast and generic LRU hashmap library with optional locking, sharding, eviction and expiration.\n- [go-gcache](https://github.com/szyhf/go-gcache) - The generic version of `GCache`, cache support for expirable Cache, LFU, LRU and ARC.\n- [go-mcache](https://github.com/OrlovEvgeny/go-mcache) - Fast in-memory key:value store/cache library. Pointer caches.\n- [gocache](https://github.com/eko/gocache) - A complete Go cache library with multiple stores (memory, memcache, redis, ...), chainable, loadable, metrics cache and more.\n- [gocache](https://github.com/yuseferi/gocache) - A data race free Go ache library with high performance and auto pruge functionality\n- [groupcache](https://github.com/golang/groupcache) - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.\n- [icache](https://github.com/mdaliyan/icache) - A High Performance, Generic, thread-safe, zero-dependency cache package.\n- [imcache](https://github.com/erni27/imcache) - A generic in-memory cache Go library. It supports expiration, sliding expiration, max entries limit, eviction callbacks and sharding.\n- [jetcache-go](https://github.com/mgtv-tech/jetcache-go) - Unified Go cache library supporting multi-level caching.\n- [nscache](https://github.com/no-src/nscache) - A Go caching framework that supports multiple data source drivers.\n- [otter](https://github.com/maypok86/otter) - A high performance lockless cache for Go. Many times faster than Ristretto and friends.\n- [pocache](https://github.com/naughtygopher/pocache) - Pocache is a minimal cache package which focuses on a preemptive optimistic caching strategy.\n- [ristretto](https://github.com/dgraph-io/ristretto) - A high performance memory-bound Go cache.\n- [sturdyc](https://github.com/viccon/sturdyc) - A caching library with advanced concurrency features designed to make I/O heavy applications robust and highly performant.\n- [theine](https://github.com/Yiling-J/theine-go) - High performance, near optimal in-memory cache with proactive TTL expiration and generics.\n- [timedmap](https://github.com/zekroTJA/timedmap) - Map with expiring key-value pairs.\n- [ttlcache](https://github.com/jellydator/ttlcache) - An in-memory cache with item expiration and generics.\n- [ttlcache](https://github.com/cheshir/ttlcache) - In-memory key value storage with TTL for each record.\n\n### Databases Implemented in Go\n\n- [badger](https://github.com/dgraph-io/badger) - Fast key-value store in Go.\n- [bbolt](https://github.com/etcd-io/bbolt) - An embedded key/value database for Go.\n- [Bitcask](https://git.mills.io/prologic/bitcask) - Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL).\n- [buntdb](https://github.com/tidwall/buntdb) - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.\n- [clover](https://github.com/ostafen/clover) - A lightweight document-oriented NoSQL database written in pure Golang.\n- [cockroach](https://github.com/cockroachdb/cockroach) - Scalable, Geo-Replicated, Transactional Datastore.\n- [Coffer](https://github.com/claygod/coffer) - Simple ACID key-value database that supports transactions.\n- [column](https://github.com/kelindar/column) - High-performance, columnar, embeddable in-memory store with bitmap indexing and transactions.\n- [CovenantSQL](https://github.com/CovenantSQL/CovenantSQL) - CovenantSQL is a SQL database on blockchain.\n- [Databunker](https://github.com/paranoidguy/databunker) - Personally identifiable information (PII) storage service built to comply with GDPR and CCPA.\n- [dgraph](https://github.com/dgraph-io/dgraph) - Scalable, Distributed, Low Latency, High Throughput Graph Database.\n- [DiceDB](https://github.com/DiceDB/dice) - An open-source, fast, reactive, in-memory database optimized for modern hardware. Higher throughput and lower median latencies, making it ideal for modern workloads.\n- [diskv](https://github.com/peterbourgon/diskv) - Home-grown disk-backed key-value store.\n- [dolt](https://github.com/dolthub/dolt) - Dolt – It's Git for Data.\n- [eliasdb](https://github.com/krotik/eliasdb) - Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language.\n- [godis](https://github.com/hdt3213/godis) - A Golang implemented high-performance Redis server and cluster.\n- [goleveldb](https://github.com/syndtr/goleveldb) - Implementation of the [LevelDB](https://github.com/google/leveldb) key/value database in Go.\n- [hare](https://github.com/jameycribbs/hare) - A simple database management system that stores each table as a text file of line-delimited JSON.\n- [immudb](https://github.com/codenotary/immudb) - immudb is a lightweight, high-speed immutable database for systems and applications written in Go.\n- [influxdb](https://github.com/influxdb/influxdb) - Scalable datastore for metrics, events, and real-time analytics.\n- [ledisdb](https://github.com/siddontang/ledisdb) - Ledisdb is a high performance NoSQL like Redis based on LevelDB.\n- [levigo](https://github.com/jmhodges/levigo) - Levigo is a Go wrapper for LevelDB.\n- [libradb](https://github.com/amit-davidson/LibraDB) - LibraDB is a simple database with less than 1000 lines of code for learning.\n- [LinDB](https://github.com/lindb/lindb) - LinDB is a scalable, high performance, high availability distributed time series database.\n- [lotusdb](https://github.com/flower-corp/lotusdb) - Fast k/v database compatible with lsm and b+tree.\n- [Milvus](https://github.com/milvus-io/milvus) - Milvus is a vector database for embedding management, analytics and search.\n- [moss](https://github.com/couchbase/moss) - Moss is a simple LSM key-value storage engine written in 100% Go.\n- [nutsdb](https://github.com/xujiajun/nutsdb) - Nutsdb is a simple, fast, embeddable, persistent key/value store written in pure Go. It supports fully serializable transactions and many data structures such as list, set, sorted set.\n- [objectbox-go](https://github.com/objectbox/objectbox-go) - High-performance embedded Object Database (NoSQL) with Go API.\n- [pebble](https://github.com/cockroachdb/pebble) - RocksDB/LevelDB inspired key-value database in Go.\n- [piladb](https://github.com/fern4lvarez/piladb) - Lightweight RESTful database engine based on stack data structures.\n- [pogreb](https://github.com/akrylysov/pogreb) - Embedded key-value store for read-heavy workloads.\n- [prometheus](https://github.com/prometheus/prometheus) - Monitoring system and time series database.\n- [pudge](https://github.com/recoilme/pudge) - Fast and simple key/value store written using Go's standard library.\n- [redka](https://github.com/nalgeon/redka) - Redis re-implemented with SQLite.\n- [rosedb](https://github.com/roseduan/rosedb) - An embedded k-v database based on LSM+WAL, supports string, list, hash, set, zset.\n- [rotom](https://github.com/xgzlucario/rotom) - A tiny Redis server built with Golang, compatible with RESP protocols.\n- [rqlite](https://github.com/rqlite/rqlite) - The lightweight, distributed, relational database built on SQLite.\n- [tempdb](https://github.com/rafaeljesus/tempdb) - Key-value store for temporary items.\n- [tidb](https://github.com/pingcap/tidb) - TiDB is a distributed SQL database. Inspired by the design of Google F1.\n- [tiedot](https://github.com/HouzuoGuo/tiedot) - Your NoSQL database powered by Golang.\n- [unitdb](https://github.com/unit-io/unitdb) - Fast timeseries database for IoT, realtime messaging applications. Access unitdb with pubsub over tcp or websocket using github.com/unit-io/unitd application.\n- [Vasto](https://github.com/chrislusf/vasto) - A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption.\n- [VictoriaMetrics](https://github.com/VictoriaMetrics/VictoriaMetrics) - fast, resource-effective and scalable open source time series database. May be used as long-term remote storage for Prometheus. Supports PromQL.\n\n### Database Schema Migration\n\n- [atlas](https://github.com/ariga/atlas) - A Database Toolkit. A CLI designed to help companies better work with their data.\n- [avro](https://github.com/khezen/avro) - Discover SQL schemas and convert them to AVRO schemas. Query SQL records into AVRO bytes.\n- [bytebase](https://github.com/bytebase/bytebase) - Safe database schema change and version control for DevOps teams.\n- [darwin](https://github.com/GuiaBolso/darwin) - Database schema evolution library for Go.\n- [dbmate](https://github.com/amacneil/dbmate) - A lightweight, framework-agnostic database migration tool.\n- [go-fixtures](https://github.com/RichardKnop/go-fixtures) - Django style fixtures for Golang's excellent built-in database/sql library.\n- [go-pg-migrate](https://github.com/lawzava/go-pg-migrate) - CLI-friendly package for go-pg migrations management.\n- [go-pg-migrations](https://github.com/robinjoseph08/go-pg-migrations) - A Go package to help write migrations with go-pg/pg.\n- [goavro](https://github.com/linkedin/goavro) - A Go package that encodes and decodes Avro data.\n- [godfish](https://github.com/rafaelespinoza/godfish) - Database migration manager, works with native query language. Support for cassandra, mysql, postgres, sqlite3.\n- [goose](https://github.com/pressly/goose) - Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts.\n- [gorm-seeder](https://github.com/Kachit/gorm-seeder) - Simple database seeder for Gorm ORM.\n- [gormigrate](https://github.com/go-gormigrate/gormigrate) - Database schema migration helper for Gorm ORM.\n- [libschema](https://github.com/muir/libschema) - Define your migrations separately in each library. Migrations for open source libraries. MySQL & PostgreSQL.\n- [migrate](https://github.com/golang-migrate/migrate) - Database migrations. CLI and Golang library.\n- [migrator](https://github.com/lopezator/migrator) - Dead simple Go database migration library.\n- [migrator](https://github.com/larapulse/migrator) - MySQL database migrator designed to run migrations to your features and manage database schema update with intuitive go code.\n- [schema](https://github.com/adlio/schema) - Library to embed schema migrations for database/sql-compatible databases inside your Go binaries.\n- [skeema](https://github.com/skeema/skeema) - Pure-SQL schema management system for MySQL, with support for sharding and external online schema change tools.\n- [soda](https://github.com/gobuffalo/pop/tree/master/soda) - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\n- [sql-migrate](https://github.com/rubenv/sql-migrate) - Database migration tool. Allows embedding migrations into the application using go-bindata.\n- [sqlize](https://github.com/sunary/sqlize) - Database migration generator. Allows generate sql migration from model and existing sql by differ them.\n\n### Database Tools\n\n- [chproxy](https://github.com/Vertamedia/chproxy) - HTTP proxy for ClickHouse database.\n- [clickhouse-bulk](https://github.com/nikepan/clickhouse-bulk) - Collects small inserts and sends big requests to ClickHouse servers.\n- [database-gateway](https://github.com/kazhuravlev/database-gateway) - Running SQL in production with ACLs, logs, and shared links.\n- [dbbench](https://github.com/sj14/dbbench) - Database benchmarking tool with support for several databases and scripts.\n- [dg](https://github.com/codingconcepts/dg) - A fast data generator that produces CSV files from generated relational data.\n- [gatewayd](https://github.com/gatewayd-io/gatewayd) - Cloud-native database gateway and framework for building data-driven applications. Like API gateways, for databases.\n- [go-mysql](https://github.com/siddontang/go-mysql) - Go toolset to handle MySQL protocol and replication.\n- [gorm-multitenancy](https://github.com/bartventer/gorm-multitenancy) - Multi-tenancy support for GORM managed databases.\n- [hasql](https://golang.yandex/hasql) - Library for accessing multi-host SQL database installations.\n- [octillery](https://github.com/knocknote/octillery) - Go package for sharding databases ( Supports every ORM or raw SQL ).\n- [onedump](https://github.com/liweiyi88/onedump) - Database backup from different drivers to different destinations with one command and configuration.\n- [pg_timetable](https://github.com/cybertec-postgresql/pg_timetable) - Advanced scheduling for PostgreSQL.\n- [pgweb](https://github.com/sosedoff/pgweb) - Web-based PostgreSQL database browser.\n- [prep](https://github.com/hexdigest/prep) - Use prepared SQL statements without changing your code.\n- [pREST](https://github.com/prest/prest) - Simplify and accelerate development, ⚡ instant, realtime, high-performance on any Postgres application, existing or new.\n- [rdb](https://github.com/HDT3213/rdb) - Redis RDB file parser for secondary development and memory analysis.\n- [rwdb](https://github.com/andizzle/rwdb) - rwdb provides read replica capability for multiple database servers setup.\n- [vitess](https://github.com/youtube/vitess) - vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services.\n- [wescale](https://github.com/wesql/wescale) - WeScale is a database proxy designed to enhance the scalability, performance, security, and resilience of your applications.\n\n### SQL Query Builders\n\n_Libraries for building and using SQL._\n\n- [bqb](https://github.com/nullism/bqb) - Lightweight and easy to learn query builder.\n- [buildsqlx](https://github.com/arthurkushman/buildsqlx) - Go database query builder library for PostgreSQL.\n- [builq](https://github.com/cristalhq/builq) - Easily build SQL queries in Go.\n- [dbq](https://github.com/rocketlaunchr/dbq) - Zero boilerplate database operations for Go.\n- [Dotsql](https://github.com/gchaincl/dotsql) - Go library that helps you keep sql files in one place and use them with ease.\n- [gendry](https://github.com/didi/gendry) - Non-invasive SQL builder and powerful data binder.\n- [godbal](https://github.com/xujiajun/godbal) - Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily.\n- [goqu](https://github.com/doug-martin/goqu) - Idiomatic SQL builder and query library.\n- [gosql](https://github.com/twharmon/gosql) - SQL Query builder with better null values support.\n- [Hotcoal](https://github.com/motrboat/hotcoal) - Secure your handcrafted SQL against injection.\n- [igor](https://github.com/galeone/igor) - Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax.\n- [jet](https://github.com/go-jet/jet) - Framework for writing type-safe SQL queries in Go, with ability to easily convert database query result into desired arbitrary object structure.\n- [ormlite](https://github.com/pupizoid/ormlite) - Lightweight package containing some ORM-like features and helpers for sqlite databases.\n- [ozzo-dbx](https://github.com/go-ozzo/ozzo-dbx) - Powerful data retrieval methods as well as DB-agnostic query building capabilities.\n- [patcher](https://github.com/Jacobbrewer1/patcher) - Powerful SQL Query builder that automatically generates SQL queries from structs.\n- [qry](https://github.com/HnH/qry) - Tool that generates constants from files with raw SQL queries.\n- [sg](https://github.com/go-the-way/sg) - A SQL Gen for generating standard SQLs(supports: CRUD) written in Go.\n- [sq](https://github.com/bokwoon95/go-structured-query) - Type-safe SQL builder and struct mapper for Go.\n- [sqlc](https://github.com/kyleconroy/sqlc) - Generate type-safe code from SQL.\n- [sqlf](https://github.com/leporo/sqlf) - Fast SQL query builder.\n- [sqlingo](https://github.com/lqs/sqlingo) - A lightweight DSL to build SQL in Go.\n- [sqrl](https://github.com/elgris/sqrl) - SQL query builder, fork of Squirrel with improved performance.\n- [Squalus](https://gitlab.com/qosenergy/squalus) - Thin layer over the Go SQL package that makes it easier to perform queries.\n- [Squirrel](https://github.com/Masterminds/squirrel) - Go library that helps you build SQL queries.\n- [xo](https://github.com/knq/xo) - Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server.\n\n**[⬆ back to top](#contents)**\n\n## Database Drivers\n\n### Interfaces to Multiple Backends\n\n- [cayley](https://github.com/google/cayley) - Graph database with support for multiple backends.\n- [dsc](https://github.com/viant/dsc) - Datastore connectivity for SQL, NoSQL, structured files.\n- [dynamo](https://github.com/fogfish/dynamo) - A simple key-value abstraction to store algebraic and linked-data data types at AWS storage services: AWS DynamoDB and AWS S3.\n- [go-transaction-manager](https://github.com/avito-tech/go-transaction-manager) - Transaction manager with multiple adapters (sql, sqlx, gorm, mongo, ...) controls transaction boundaries.\n- [gokv](https://github.com/philippgille/gokv) - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).\n\n### Relational Database Drivers\n\n- [avatica](https://github.com/apache/calcite-avatica-go) - Apache Avatica/Phoenix SQL driver for database/sql.\n- [bgc](https://github.com/viant/bgc) - Datastore Connectivity for BigQuery for go.\n- [firebirdsql](https://github.com/nakagami/firebirdsql) - Firebird RDBMS SQL driver for Go.\n- [go-adodb](https://github.com/mattn/go-adodb) - Microsoft ActiveX Object DataBase driver for go that uses database/sql.\n- [go-mssqldb](https://github.com/denisenkom/go-mssqldb) - Microsoft MSSQL driver for Go.\n- [go-oci8](https://github.com/mattn/go-oci8) - Oracle driver for go that uses database/sql.\n- [go-rqlite](https://github.com/rqlite/gorqlite) - A Go client for rqlite, providing easy-to-use abstractions for working with the rqlite API.\n- [go-sql-driver/mysql](https://github.com/go-sql-driver/mysql) - MySQL driver for Go.\n- [go-sqlite3](https://github.com/mattn/go-sqlite3) - SQLite3 driver for go that uses database/sql.\n- [go-sqlite3](https://github.com/ncruces/go-sqlite3) - This Go module is compatible with the database/sql driver. It allows embedding SQLite into your application, provides direct access to its C API, supports SQLite VFS, and also includes a GORM driver.\n- [godror](https://github.com/godror/godror) - Oracle driver for Go, using the ODPI-C driver.\n- [gofreetds](https://github.com/minus5/gofreetds) - Microsoft MSSQL driver. Go wrapper over [FreeTDS](https://www.freetds.org).\n- [KSQL](https://github.com/VinGarcia/ksql) - A Simple and Powerful Golang SQL Library.\n- [pgx](https://github.com/jackc/pgx) - PostgreSQL driver supporting features beyond those exposed by database/sql.\n- [pig](https://github.com/alexeyco/pig) - Simple [pgx](https://github.com/jackc/pgx) wrapper to execute and [scan](https://github.com/georgysavva/scany) query results easily.\n- [pq](https://github.com/lib/pq) - Pure Go Postgres driver for database/sql.\n- [Sqinn-Go](https://github.com/cvilsmeier/sqinn-go) - SQLite with pure Go.\n- [sqlhooks](https://github.com/qustavo/sqlhooks) - Attach hooks to any database/sql driver.\n- [sqlite](https://pkg.go.dev/modernc.org/sqlite) - Package sqlite is a sql/database driver using a CGo-free port of the C SQLite3 library.\n- [surrealdb.go](https://github.com/surrealdb/surrealdb.go) - SurrealDB Driver for Go.\n- [ydb-go-sdk](https://github.com/ydb-platform/ydb-go-sdk) - native and database/sql driver YDB (Yandex Database).\n\n### NoSQL Database Drivers\n\n- [aerospike-client-go](https://github.com/aerospike/aerospike-client-go) - Aerospike client in Go language.\n- [arangolite](https://github.com/solher/arangolite) - Lightweight golang driver for ArangoDB.\n- [asc](https://github.com/viant/asc) - Datastore Connectivity for Aerospike for go.\n- [forestdb](https://github.com/couchbase/goforestdb) - Go bindings for ForestDB.\n- [go-couchbase](https://github.com/couchbase/go-couchbase) - Couchbase client in Go.\n- [go-mongox](https://github.com/chenmingyong0423/go-mongox) - A Go Mongo library based on the official driver, featuring streamlined document operations, generic binding of structs to collections, built-in CRUD, aggregation, automated field updates, struct validation, hooks, and plugin-based programming.\n- [go-pilosa](https://github.com/pilosa/go-pilosa) - Go client library for Pilosa.\n- [go-rejson](https://github.com/nitishm/go-rejson) - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.\n- [gocb](https://github.com/couchbase/gocb) - Official Couchbase Go SDK.\n- [gocosmos](https://github.com/btnguyen2k/gocosmos) - REST client and standard `database/sql` driver for Azure Cosmos DB.\n- [gocql](https://gocql.github.io) - Go language driver for Apache Cassandra.\n- [godis](https://github.com/piaohao/godis) - redis client implement by golang, inspired by jedis.\n- [godscache](https://github.com/defcronyke/godscache) - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.\n- [gomemcache](https://github.com/bradfitz/gomemcache/) - memcache client library for the Go programming language.\n- [gomemcached](https://github.com/aliexpressru/gomemcached) - A binary Memcached client for Go with support for sharding using consistent hashing, along with SASL.\n- [gorethink](https://github.com/dancannon/gorethink) - Go language driver for RethinkDB.\n- [goriak](https://github.com/zegl/goriak) - Go language driver for Riak KV.\n- [Kivik](https://github.com/go-kivik/kivik) - Kivik provides a common Go and GopherJS client library for CouchDB, PouchDB, and similar databases.\n- [mgm](https://github.com/kamva/mgm) - MongoDB model-based ODM for Go (based on official MongoDB driver).\n- [mgo](https://github.com/globalsign/mgo) - (unmaintained) MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms.\n- [mongo-go-driver](https://github.com/mongodb/mongo-go-driver) - Official MongoDB driver for the Go language.\n- [neo4j](https://github.com/cihangir/neo4j) - Neo4j Rest API Bindings for Golang.\n- [neoism](https://github.com/jmcvetta/neoism) - Neo4j client for Golang.\n- [qmgo](https://github.com/qiniu/qmgo) - The MongoDB driver for Go. It‘s based on official MongoDB driver but easier to use like Mgo.\n- [redeo](https://github.com/bsm/redeo) - Redis-protocol compatible TCP servers/services.\n- [redigo](https://github.com/gomodule/redigo) - Redigo is a Go client for the Redis database.\n- [redis](https://github.com/redis/go-redis) - Redis client for Golang.\n- [rueidis](http://github.com/rueian/rueidis) - Fast Redis RESP3 client with auto pipelining and server-assisted client side caching.\n- [xredis](https://github.com/shomali11/xredis) - Typesafe, customizable, clean & easy to use Redis client.\n\n### Search and Analytic Databases\n\n- [clickhouse-go](https://github.com/ClickHouse/clickhouse-go/) - ClickHouse SQL client for Go with a `database/sql` compatibility.\n- [effdsl](https://github.com/sdqri/effdsl) - Elasticsearch query builder for Go.\n- [elastic](https://github.com/olivere/elastic) - Elasticsearch client for Go.\n- [elasticsql](https://github.com/cch123/elasticsql) - Convert sql to elasticsearch dsl in Go.\n- [elastigo](https://github.com/mattbaird/elastigo) - Elasticsearch client library.\n- [go-elasticsearch](https://github.com/elastic/go-elasticsearch) - Official Elasticsearch client for Go.\n- [goes](https://github.com/OwnLocal/goes) - Library to interact with Elasticsearch.\n- [skizze](https://github.com/seiflotfy/skizze) - probabilistic data-structures service and storage.\n- [zoekt](https://github.com/sourcegraph/zoekt) - Fast trigram based code search.\n\n**[⬆ back to top](#contents)**\n\n## Date and Time\n\n_Libraries for working with dates and times._\n\n- [approx](https://github.com/goschtalt/approx) - A Duration extension supporting parsing/printing durations in days, weeks and years.\n- [carbon](https://github.com/dromara/carbon) - A simple, semantic and developer-friendly time package for golang.\n- [carbon](https://github.com/uniplaces/carbon) - Simple Time extension with a lot of util methods, ported from PHP Carbon library.\n- [cronrange](https://github.com/1set/cronrange) - Parses Cron-style time range expressions, checks if the given time is within any ranges.\n- [date](https://github.com/rickb777/date) - Augments Time for working with dates, date ranges, time spans, periods, and time-of-day.\n- [dateparse](https://github.com/araddon/dateparse) - Parse date's without knowing format in advance.\n- [durafmt](https://github.com/hako/durafmt) - Time duration formatting library for Go.\n- [feiertage](https://github.com/wlbr/feiertage) - Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesländer). Things like Easter, Pentecost, Thanksgiving...\n- [go-anytime](https://github.com/ijt/go-anytime) - Parse dates/times like \"next dec 22nd at 3pm\" and ranges like \"from today until next thursday\" without knowing the format in advance.\n- [go-datebin](https://github.com/deatil/go-datebin) - A simple datetime parse pkg.\n- [go-persian-calendar](https://github.com/yaa110/go-persian-calendar) - The implementation of the Persian (Solar Hijri) Calendar in Go (golang).\n- [go-str2duration](https://github.com/xhit/go-str2duration) - Convert string to duration. Support time.Duration returned string and more.\n- [go-sunrise](https://github.com/nathan-osman/go-sunrise) - Calculate the sunrise and sunset times for a given location.\n- [go-week](https://github.com/stoewer/go-week) - An efficient package to work with ISO8601 week dates.\n- [gostradamus](https://github.com/bykof/gostradamus) - A Go package for working with dates.\n- [iso8601](https://github.com/relvacode/iso8601) - Efficiently parse ISO8601 date-times without regex.\n- [kair](https://github.com/GuilhermeCaruso/kair) - Date and Time - Golang Formatting Library.\n- [now](https://github.com/jinzhu/now) - Now is a time toolkit for golang.\n- [strftime](https://github.com/awoodbeck/strftime) - C99-compatible strftime formatter.\n- [timespan](https://github.com/SaidinWoT/timespan) - For interacting with intervals of time, defined as a start time and a duration.\n- [timeutil](https://github.com/leekchan/timeutil) - Useful extensions (Timedelta, Strftime, ...) to the golang's time package.\n- [tuesday](https://github.com/osteele/tuesday) - Ruby-compatible Strftime function.\n\n**[⬆ back to top](#contents)**\n\n## Distributed Systems\n\n_Packages that help with building Distributed Systems._\n\n- [arpc](https://github.com/lesismal/arpc) - More effective network communication, support two-way-calling, notify, broadcast.\n- [bedrock](https://github.com/z5labs/bedrock) - Provides a minimal, modular and composable foundation for quickly developing services and more use case specific frameworks in Go.\n- [capillaries](https://github.com/capillariesio/capillaries) - distributed batch data processing framework.\n- [celeriac](https://github.com/svcavallar/celeriac.v1) - Library for adding support for interacting and monitoring Celery workers, tasks and events in Go.\n- [committer](https://github.com/vadiminshakov/committer) - A distributed transactions management system (2PC/3PC implementation).\n- [consistent](https://github.com/buraksezer/consistent) - Consistent hashing with bounded loads.\n- [consistenthash](https://github.com/mbrostami/consistenthash) - Consistent hashing with configurable replicas.\n- [dht](https://github.com/anacrolix/dht) - BitTorrent Kademlia DHT implementation.\n- [digota](https://github.com/digota/digota) - grpc ecommerce microservice.\n- [dot](https://github.com/dotchain/dot/) - distributed sync using operational transformation/OT.\n- [doublejump](https://github.com/edwingeng/doublejump) - A revamped Google's jump consistent hash.\n- [dragonboat](https://github.com/lni/dragonboat) - A feature complete and high performance multi-group Raft library in Go.\n- [Dragonfly](https://github.com/dragonflyoss/Dragonfly2) - Provide efficient, stable and secure file distribution and image acceleration based on p2p technology to be the best practice and standard solution in cloud native architectures.\n- [drmaa](https://github.com/dgruber/drmaa) - Job submission library for cluster schedulers based on the DRMAA standard.\n- [dynamolock](https://cirello.io/dynamolock) - DynamoDB-backed distributed locking implementation.\n- [dynatomic](https://github.com/tylfin/dynatomic) - A library for using DynamoDB as an atomic counter.\n- [emitter-io](https://github.com/emitter-io/emitter) - High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love.\n- [evans](https://github.com/ktr0731/evans) - Evans: more expressive universal gRPC client.\n- [failured](https://github.com/andy2046/failured) - adaptive accrual failure detector for distributed systems.\n- [flowgraph](https://github.com/vectaport/flowgraph) - flow-based programming package.\n- [gleam](https://github.com/chrislusf/gleam) - Fast and scalable distributed map/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed.\n- [glow](https://github.com/chrislusf/glow) - Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go.\n- [gmsec](https://github.com/gmsec/micro) - A Go distributed systems development framework.\n- [go-doudou](https://github.com/unionj-cloud/go-doudou) - A gossip protocol and OpenAPI 3.0 spec based decentralized microservice framework. Built-in go-doudou cli focusing on low-code and rapid dev can power up your productivity.\n- [go-eagle](https://github.com/go-eagle/eagle) - A Go framework for the API or Microservice with handy scaffolding tools.\n- [go-health](https://github.com/InVisionApp/go-health) - Library for enabling asynchronous dependency health checks in your service.\n- [go-jump](https://github.com/dgryski/go-jump) - Port of Google's \"Jump\" Consistent Hash function.\n- [go-kit](https://github.com/go-kit/kit) - Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc.\n- [go-micro](https://github.com/micro/go-micro) - A distributed systems development framework.\n- [go-mysql-lock](https://github.com/sanketplus/go-mysql-lock) - MySQL based distributed lock.\n- [go-pdu](https://github.com/pdupub/go-pdu) - A decentralized identity-based social network.\n- [go-sundheit](https://github.com/AppsFlyer/go-sundheit) - A library built to provide support for defining async service health checks for golang services.\n- [go-zero](https://github.com/tal-tech/go-zero) - A web and rpc framework. It's born to ensure the stability of the busy sites with resilient design. Builtin goctl greatly improves the development productivity.\n- [gorpc](https://github.com/valyala/gorpc) - Simple, fast and scalable RPC library for high load.\n- [grpc-go](https://github.com/grpc/grpc-go) - The Go language implementation of gRPC. HTTP/2 based RPC.\n- [hprose](https://github.com/hprose/hprose-golang) - Very newbility RPC Library, support 25+ languages now.\n- [jsonrpc](https://github.com/osamingo/jsonrpc) - The jsonrpc package helps implement of JSON-RPC 2.0.\n- [jsonrpc](https://github.com/ybbus/jsonrpc) - JSON-RPC 2.0 HTTP client implementation.\n- [K8gb](https://github.com/k8gb-io/k8gb) - A cloud native Kubernetes Global Balancer.\n- [Kitex](https://github.com/cloudwego/kitex) - A high-performance and strong-extensibility Golang RPC framework that helps developers build microservices. If the performance and extensibility are the main concerns when you develop microservices, Kitex can be a good choice.\n- [Kratos](https://github.com/go-kratos/kratos) - A modular-designed and easy-to-use microservices framework in Go.\n- [liftbridge](https://github.com/liftbridge-io/liftbridge) - Lightweight, fault-tolerant message streams for NATS.\n- [lura](https://github.com/luraproject/lura) - Ultra performant API Gateway framework with middlewares.\n- [micro](https://github.com/micro/micro) - A distributed systems runtime for the cloud and beyond.\n- [mochi mqtt](https://github.com/mochi-co/mqtt) - Fully spec compliant, embeddable high-performance MQTT v5/v3 broker for IoT, smarthome, and pubsub.\n- [NATS](https://github.com/nats-io/nats-server) - NATS is a simple, secure, and performant communications system for digital systems, services, and devices.\n- [opentelemetry-go-auto-instrumentation](https://github.com/alibaba/opentelemetry-go-auto-instrumentation) - OpenTelemetry Compile-Time Instrumentation for Golang.\n- [outbox](https://github.com/oagudo/outbox) - Lightweight library for the transactional outbox pattern in Go, not tied to any specific relational database or broker.\n- [outboxer](https://github.com/italolelis/outboxer) - Outboxer is a go library that implements the outbox pattern.\n- [pglock](https://cirello.io/pglock) - PostgreSQL-backed distributed locking implementation.\n- [pjrpc](https://gitlab.com/pjrpc/pjrpc) - Golang JSON-RPC Server-Client with Protobuf spec.\n- [raft](https://github.com/hashicorp/raft) - Golang implementation of the Raft consensus protocol, by HashiCorp.\n- [raft](https://github.com/etcd-io/raft) - Go implementation of the Raft consensus protocol, by CoreOS.\n- [rain](https://github.com/cenkalti/rain) - BitTorrent client and library.\n- [redis-lock](https://github.com/bsm/redislock) - Simplified distributed locking implementation using Redis.\n- [resgate](https://resgate.io/) - Realtime API Gateway for building REST, real time, and RPC APIs, where all clients are synchronized seamlessly.\n- [ringpop-go](https://github.com/uber/ringpop-go) - Scalable, fault-tolerant application-layer sharding for Go applications.\n- [rpcx](https://github.com/smallnest/rpcx) - Distributed pluggable RPC service framework like alibaba Dubbo.\n- [Semaphore](https://github.com/jexia/semaphore) - A straightforward (micro) service orchestrator.\n- [sleuth](https://github.com/ursiform/sleuth) - Library for master-less p2p auto-discovery and RPC between HTTP services (using [ZeroMQ](https://github.com/zeromq/libzmq)).\n- [sponge](https://github.com/zhufuyi/sponge) - A distributed development framework that integrates automatic code generation, gin and grpc frameworks, base development frameworks.\n- [Tarmac](https://github.com/tarmac-project/tarmac) - Framework for writing functions, microservices, or monoliths with WebAssembly\n- [Temporal](https://github.com/temporalio/sdk-go) - Durable execution system for making code fault-tolerant and simple.\n- [torrent](https://github.com/anacrolix/torrent) - BitTorrent client package.\n- [trpc-go](https://github.com/trpc-group/trpc-go) - The Go language implementation of tRPC, which is a pluggable, high-performance RPC framework.\n\n**[⬆ back to top](#contents)**\n\n## Dynamic DNS\n\n_Tools for updating dynamic DNS records._\n\n- [DDNS](https://github.com/skibish/ddns) - Personal DDNS client with Digital Ocean Networking DNS as backend.\n- [dyndns](https://gitlab.com/alcastle/dyndns) - Background Go process to regularly and automatically check your IP Address and make updates to (one or many) Dynamic DNS records for Google domains whenever your address changes.\n- [GoDNS](https://github.com/timothyye/godns) - A dynamic DNS client tool, supports DNSPod & HE.net, written in Go.\n\n**[⬆ back to top](#contents)**\n\n## Email\n\n_Libraries and tools that implement email creation and sending._\n\n- [chasquid](https://blitiri.com.ar/p/chasquid) - SMTP server written in Go.\n- [douceur](https://github.com/aymerick/douceur) - CSS inliner for your HTML emails.\n- [email](https://github.com/jordan-wright/email) - A robust and flexible email library for Go.\n- [email-verifier](https://github.com/AfterShip/email-verifier) - A Go library for email verification without sending any emails.\n- [go-dkim](https://github.com/toorop/go-dkim) - DKIM library, to sign & verify email.\n- [go-email-normalizer](https://github.com/dimuska139/go-email-normalizer) - Golang library for providing a canonical representation of email address.\n- [go-email-validator](https://github.com/go-email-validator/go-email-validator) - Modular email validator for syntax, disposable, smtp, etc... checking.\n- [go-imap](https://github.com/emersion/go-imap) - IMAP library for clients and servers.\n- [go-mail](https://github.com/wneessen/go-mail) - A simple Go library for sending mails in Go.\n- [go-message](https://github.com/emersion/go-message) - Streaming library for the Internet Message Format and mail messages.\n- [go-premailer](https://github.com/vanng822/go-premailer) - Inline styling for HTML mail in Go.\n- [go-simple-mail](https://github.com/xhit/go-simple-mail) - Very simple package to send emails with SMTP Keep Alive and two timeouts: Connect and Send.\n- [Hectane](https://github.com/hectane/hectane) - Lightweight SMTP client providing an HTTP API.\n- [hermes](https://github.com/matcornic/hermes) - Golang package that generates clean, responsive HTML e-mails.\n- [Maddy](https://github.com/foxcpp/maddy) - All-in-one (SMTP, IMAP, DKIM, DMARC, MTA-STS, DANE) email server\n- [mailchain](https://github.com/mailchain/mailchain) - Send encrypted emails to blockchain addresses written in Go.\n- [mailgun-go](https://github.com/mailgun/mailgun-go) - Go library for sending mail with the Mailgun API.\n- [MailHog](https://github.com/mailhog/MailHog) - Email and SMTP testing with web and API interface.\n- [Mailpit](https://github.com/axllent/mailpit) - Email and SMTP testing tool for developers.\n- [mailx](https://github.com/valord577/mailx) - Mailx is a library that makes it easier to send email via SMTP. It is an enhancement of the golang standard library `net/smtp`.\n- [mox](https://github.com/mjl-/mox) - Modern full-featured secure mail server for low-maintenance, self-hosted email.\n- [SendGrid](https://github.com/sendgrid/sendgrid-go) - SendGrid's Go library for sending email.\n- [smtp](https://github.com/mailhog/smtp) - SMTP server protocol state machine.\n- [smtpmock](https://github.com/mocktools/go-smtp-mock) - Lightweight configurable multithreaded fake SMTP server. Mimic any SMTP behaviour for your test environment.\n- [truemail-go](https://github.com/truemail-rb/truemail-go) - Configurable Golang email validator/verifier. Verify email via Regex, DNS, SMTP and even more.\n\n**[⬆ back to top](#contents)**\n\n## Embeddable Scripting Languages\n\n_Embedding other languages inside your go code._\n\n- [anko](https://github.com/mattn/anko) - Scriptable interpreter written in Go.\n- [binder](https://github.com/alexeyco/binder) - Go to Lua binding library, based on [gopher-lua](https://github.com/yuin/gopher-lua).\n- [cel-go](https://github.com/google/cel-go) - Fast, portable, non-Turing complete expression evaluation with gradual typing.\n- [ecal](https://github.com/krotik/ecal) - A simple embeddable scripting language which supports concurrent event processing.\n- [expr](https://github.com/antonmedv/expr) - Expression evaluation engine for Go: fast, non-Turing complete, dynamic typing, static typing.\n- [FrankenPHP](https://github.com/dunglas/frankenphp) - PHP embedded in Go, with a `net/http` handler.\n- [gentee](https://github.com/gentee/gentee) - Embeddable scripting programming language.\n- [gisp](https://github.com/jcla1/gisp) - Simple LISP in Go.\n- [go-duktape](https://github.com/olebedev/go-duktape) - Duktape JavaScript engine bindings for Go.\n- [go-lua](https://github.com/Shopify/go-lua) - Port of the Lua 5.2 VM to pure Go.\n- [go-php](https://github.com/deuill/go-php) - PHP bindings for Go.\n- [go-python](https://github.com/sbinet/go-python) - naive go bindings to the CPython C-API.\n- [goal](https://codeberg.org/anaseto/goal) - An embeddable scripting array language.\n- [goja](https://github.com/dop251/goja) - ECMAScript 5.1(+) implementation in Go.\n- [golua](https://github.com/aarzilli/golua) - Go bindings for Lua C API.\n- [gopher-lua](https://github.com/yuin/gopher-lua) - Lua 5.1 VM and compiler written in Go.\n- [gval](https://github.com/PaesslerAG/gval) - A highly customizable expression language written in Go.\n- [metacall](https://github.com/metacall/core) - Cross-platform Polyglot Runtime which supports NodeJS, JavaScript, TypeScript, Python, Ruby, C#, WebAssembly, Java, Cobol and more.\n- [ngaro](https://github.com/db47h/ngaro) - Embeddable Ngaro VM implementation enabling scripting in Retro.\n- [prolog](https://github.com/ichiban/prolog) - Embeddable Prolog.\n- [purl](https://github.com/ian-kent/purl) - Perl 5.18.2 embedded in Go.\n- [starlark-go](https://github.com/google/starlark-go) - Go implementation of Starlark: Python-like language with deterministic evaluation and hermetic execution.\n- [starlet](https://github.com/1set/starlet) - Go wrapper for [starlark-go](https://github.com/google/starlark-go) that simplifies script execution, offers data conversion, and useful Starlark libraries and extensions.\n- [tengo](https://github.com/d5/tengo) - Bytecode compiled script language for Go.\n- [Wa/凹语言](https://github.com/wa-lang/wa) - The Wa Programming Language embedded in Go.\n\n**[⬆ back to top](#contents)**\n\n## Error Handling\n\n_Libraries for handling errors._\n\n- [emperror](https://github.com/emperror/emperror) - Error handling tools and best practices for Go libraries and applications.\n- [eris](https://github.com/rotisserie/eris) - A better way to handle, trace, and log errors in Go. Compatible with the standard error library and github.com/pkg/errors.\n- [errlog](https://github.com/snwfdhmp/errlog) - Hackable package that determines responsible source code for an error (and some other fast-debugging features). Pluggable to any logger in-place.\n- [errors](https://github.com/emperror/errors) - Drop-in replacement for the standard library errors package and github.com/pkg/errors. Provides various error handling primitives.\n- [errors](https://github.com/neuronlabs/errors) - Simple golang error handling with classification primitives.\n- [errors](https://github.com/PumpkinSeed/errors) - The most simple error wrapper with awesome performance and minimal memory overhead.\n- [errors](https://gitlab.com/tozd/go/errors) - Providing errors with a stack trace and optional structured details. Compatible with github.com/pkg/errors API but does not use it internally.\n- [errors](https://github.com/naughtygopher/errors) - Drop-in replacement for builtin Go errors. This is a minimal error handling package with custom error types, user friendly messages, Unwrap & Is. With very easy to use and straightforward helper functions.\n- [errors](https://github.com/cockroachdb/errors) - Go error library with error portability over the network.\n- [errorx](https://github.com/joomcode/errorx) - A feature rich error package with stack traces, composition of errors and more.\n- [exception](https://github.com/rbrahul/exception) - A simple utility package for exception handling with try-catch in Golang.\n- [Falcon](https://github.com/SonicRoshan/falcon) - A Simple Yet Highly Powerful Package For Error Handling.\n- [Fault](https://github.com/Southclaws/fault) - An ergonomic mechanism for wrapping errors in order to facilitate structured metadata and context for error values.\n- [go-multierror](https://github.com/hashicorp/go-multierror) - Go (golang) package for representing a list of errors as a single error.\n- [metaerr](https://github.com/quantumcycle/metaerr) - A library to create your custom error builders producing structured errors with metadata from different sources and optional stacktraces.\n- [multierr](https://github.com/uber-go/multierr) - Package for representing a list of errors as a single error.\n- [oops](https://github.com/samber/oops) - Error handling with context, stack trace and source fragments.\n- [tracerr](https://github.com/ztrue/tracerr) - Golang errors with stack trace and source fragments.\n\n**[⬆ back to top](#contents)**\n\n## File Handling\n\n_Libraries for handling files and file systems._\n\n- [afero](https://github.com/spf13/afero) - FileSystem Abstraction System for Go.\n- [afs](https://github.com/viant/afs) - Abstract File Storage (mem, scp, zip, tar, cloud: s3, gs) for Go.\n- [baraka](https://github.com/xis/baraka) - A library to process http file uploads easily.\n- [checksum](https://github.com/codingsince1985/checksum) - Compute message digest, like MD5, SHA256, SHA1, CRC or BLAKE2s, for large files.\n- [copy](https://github.com/otiai10/copy) - Copy directory recursively.\n- [fastwalk](https://github.com/charlievieth/fastwalk) - Fast parallel directory traversal library (used by [fzf](https://github.com/junegunn/fzf)).\n- [flop](https://github.com/homedepot/flop) - File operations library which aims to mirror feature parity with [GNU cp](https://www.gnu.org/software/coreutils/manual/html_node/cp-invocation.html).\n- [gdu](https://github.com/dundee/gdu) - Disk usage analyzer with console interface.\n- [go-csv-tag](https://github.com/artonge/go-csv-tag) - Load csv file using tag.\n- [go-decent-copy](https://github.com/hugocarreira/go-decent-copy) - Copy files for humans.\n- [go-exiftool](https://github.com/barasher/go-exiftool) - Go bindings for ExifTool, the well-known library used to extract as much metadata as possible (EXIF, IPTC, ...) from files (pictures, PDF, office, ...).\n- [go-gtfs](https://github.com/artonge/go-gtfs) - Load gtfs files in go.\n- [go-wkhtmltopdf](https://github.com/SebastiaanKlippert/go-wkhtmltopdf) - A package to convert an HTML template to a PDF file.\n- [gofs](https://github.com/no-src/gofs) - A cross-platform real-time file synchronization tool out of the box.\n- [gulter](https://github.com/adelowo/gulter) - A simple HTTP middleware to automatically handle all your file upload needs\n- [gut/yos](https://github.com/1set/gut) - Simple and reliable package for file operations like copy/move/diff/list on files, directories and symbolic links.\n- [higgs](https://github.com/dastoori/higgs) - A tiny cross-platform Go library to hide/unhide files and directories.\n- [iso9660](https://github.com/kdomanski/iso9660) - A package for reading and creating ISO9660 disk images\n- [notify](https://github.com/rjeczalik/notify) - File system event notification library with simple API, similar to os/signal.\n- [opc](https://github.com/qmuntal/opc) - Load Open Packaging Conventions (OPC) files for Go.\n- [parquet](https://github.com/parsyl/parquet) - Read and write [parquet](https://parquet.apache.org) files.\n- [pathtype](https://github.com/jonchun/pathtype) - Treat paths as their own type instead of using strings.\n- [pdfcpu](https://github.com/pdfcpu/pdfcpu) - PDF processor.\n- [skywalker](https://github.com/dixonwille/skywalker) - Package to allow one to concurrently go through a filesystem with ease.\n- [todotxt](https://github.com/1set/todotxt) - Go library for Gina Trapani's [_todo.txt_](http://todotxt.org/) files, supports parsing and manipulating of task lists in the [_todo.txt_ format](https://github.com/todotxt/todo.txt).\n- [vfs](https://github.com/C2FO/vfs) - A pluggable, extensible, and opinionated set of filesystem functionality for Go across a number of filesystem types such as os, S3, and GCS.\n\n**[⬆ back to top](#contents)**\n\n## Financial\n\n_Packages for accounting and finance._\n\n- [accounting](https://github.com/leekchan/accounting) - money and currency formatting for golang.\n- [ach](https://github.com/moov-io/ach) - A reader, writer, and validator for Automated Clearing House (ACH) files.\n- [bbgo](https://github.com/c9s/bbgo) - A crypto trading bot framework written in Go. Including common crypto exchange API, standard indicators, back-testing and many built-in strategies.\n- [currency](https://github.com/bojanz/currency) - Handles currency amounts, provides currency information and formatting.\n- [currency](https://github.com/naughtygopher/currency) - High performant & accurate currency computation package.\n- [decimal](https://github.com/shopspring/decimal) - Arbitrary-precision fixed-point decimal numbers.\n- [decimal](https://github.com/govalues/decimal) - Immutable decimal numbers with panic-free arithmetic.\n- [fpdecimal](https://github.com/nikolaydubina/fpdecimal) - Fast and precise serialization and arithmetic for small fixed-point decimals\n- [fpmoney](https://github.com/nikolaydubina/fpmoney) - Fast and simple ISO4217 fixed-point decimal money.\n- [go-finance](https://github.com/alpeb/go-finance) - Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations.\n- [go-finance](https://github.com/pieterclaerhout/go-finance) - Module to fetch exchange rates, check VAT numbers via VIES and check IBAN bank account numbers.\n- [go-finnhub](https://github.com/m1/go-finnhub) - Client for stock market, forex and crypto data from finnhub.io. Access real-time financial market data from 60+ stock exchanges, 10 forex brokers, and 15+ crypto exchanges.\n- [go-money](https://github.com/rhymond/go-money) - Implementation of Fowler's Money pattern.\n- [go-nowpayments](https://github.com/matm/go-nowpayments) - Library for the crypto NOWPayments API.\n- [ledger](https://github.com/formancehq/ledger) - A programmable financial ledger that provides a foundation for money-moving applications.\n- [money](https://github.com/govalues/money) - Immutable monetary amounts and exchange rates with panic-free arithmetic.\n- [ofxgo](https://github.com/aclindsa/ofxgo) - Query OFX servers and/or parse the responses (with example command-line client).\n- [orderbook](https://github.com/i25959341/orderbook) - Matching Engine for Limit Order Book in Golang.\n- [payme](https://github.com/jovandeginste/payme) - QR code generator (ASCII & PNG) for SEPA payments.\n- [sleet](https://github.com/BoltApp/sleet) - One unified interface for multiple Payment Service Providers (PsP) to process online payment.\n- [swift](https://code.pfad.fr/swift/) - Offline validity check of IBAN (International Bank Account Number) and retrieval of BIC (for some countries).\n- [techan](https://github.com/sdcoffey/techan) - Technical analysis library with advanced market analysis and trading strategies.\n- [ticker](https://github.com/achannarasappa/ticker) - Terminal stock watcher and stock position tracker.\n- [transaction](https://github.com/claygod/transaction) - Embedded transactional database of accounts, running in multithreaded mode.\n- [udecimal](https://github.com/quagmt/udecimal) - High performance, high precision, zero allocation fixed-point decimal library for financial applications.\n- [vat](https://github.com/dannyvankooten/vat) - VAT number validation & EU VAT rates.\n\n**[⬆ back to top](#contents)**\n\n## Forms\n\n_Libraries for working with forms._\n\n- [bind](https://github.com/robfig/bind) - Bind form data to any Go values.\n- [checker](https://github.com/cinar/checker) - Checker helps validating user input through rules defined in struct tags or directly through functions.\n- [conform](https://github.com/leebenson/conform) - Keeps user input in check. Trims, sanitizes & scrubs data based on struct tags.\n- [form](https://github.com/go-playground/form) - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.\n- [formam](https://github.com/monoculum/formam) - decode form's values into a struct.\n- [forms](https://github.com/albrow/forms) - Framework-agnostic library for parsing and validating form/JSON data which supports multipart forms and files.\n- [gbind](https://github.com/bdjimmy/gbind) - Bind data to any Go value. Can use built-in and custom expression binding capabilities; supports data validation\n- [gorilla/csrf](https://github.com/gorilla/csrf) - CSRF protection for Go web applications & services.\n- [httpin](https://github.com/ggicci/httpin) - Decode an HTTP request into a custom struct, including querystring, forms, HTTP headers, etc.\n- [nosurf](https://github.com/justinas/nosurf) - CSRF protection middleware for Go.\n- [qs](https://github.com/sonh/qs) - Go module for encoding structs into URL query parameters.\n- [queryparam](https://github.com/tomwright/queryparam) - Decode `url.Values` into usable struct values of standard or custom types.\n\n**[⬆ back to top](#contents)**\n\n## Functional\n\n_Packages to support functional programming in Go._\n\n- [fp-go](https://github.com/repeale/fp-go) - Collection of Functional Programming helpers powered by Golang 1.18+ generics.\n- [fpGo](https://github.com/TeaEntityLab/fpGo) - Monad, Functional Programming features for Golang.\n- [fuego](https://github.com/seborama/fuego) - Functional Experiment in Go.\n- [go-functional](https://github.com/BooleanCat/go-functional) - Functional programming in Go using generics\n- [go-underscore](https://github.com/tobyhede/go-underscore) - Useful collection of helpfully functional Go collection utilities.\n- [gofp](https://github.com/rbrahul/gofp) - A lodash like powerful utility library for Golang.\n- [mo](https://github.com/samber/mo) - Monads and popular FP abstractions, based on Go 1.18+ Generics (Option, Result, Either...).\n- [underscore](https://github.com/rjNemo/underscore) - Functional programming helpers for Go 1.18 and beyond.\n- [valor](https://github.com/phelmkamp/valor) - Generic option and result types that optionally contain a value.\n\n**[⬆ back to top](#contents)**\n\n## Game Development\n\n_Awesome game development libraries._\n\n- [Ark](https://github.com/mlange-42/ark) - Archetype-based Entity Component System (ECS) for Go.\n- [Ebitengine](https://github.com/hajimehoshi/ebiten) - dead simple 2D game engine in Go.\n- [ecs](https://github.com/andygeiss/ecs) - Build your own Game-Engine based on the Entity Component System concept in Golang.\n- [engo](https://github.com/EngoEngine/engo) - Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm.\n- [fantasyname](https://github.com/s0rg/fantasyname) - Fantasy names generator.\n- [g3n](https://github.com/g3n/engine) - Go 3D Game Engine.\n- [go-astar](https://github.com/beefsack/go-astar) - Go implementation of the A\\* path finding algorithm.\n- [go-sdl2](https://github.com/veandco/go-sdl2) - Go bindings for the [Simple DirectMedia Layer](https://www.libsdl.org/).\n- [go3d](https://github.com/ungerik/go3d) - Performance oriented 2D/3D math package for Go.\n- [gonet](https://github.com/xtaci/gonet) - Game server skeleton implemented with golang.\n- [goworld](https://github.com/xiaonanln/goworld) - Scalable game server engine, featuring space-entity framework and hot-swapping.\n- [grid](https://github.com/s0rg/grid) - Generic 2D grid with ray-casting, shadow-casting and path finding.\n- [Harfang3D](https://github.com/harfang3d/harfang3d) - 3D engine for the Go language, works on Windows and Linux ([Harfang on Go.dev](https://github.com/harfang3d/harfang-go)).\n- [Leaf](https://github.com/name5566/leaf) - Lightweight game server framework.\n- [nano](https://github.com/lonng/nano) - Lightweight, facility, high performance golang based game server framework.\n- [Oak](https://github.com/oakmound/oak) - Pure Go game engine.\n- [Pitaya](https://github.com/topfreegames/pitaya) - Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK.\n- [Pixel](https://github.com/gopxl/pixel) - Hand-crafted 2D game library in Go.\n- [prototype](https://github.com/gonutz/prototype) - Cross-platform (Windows/Linux/Mac) library for creating desktop games using a minimal API.\n- [raylib-go](https://github.com/gen2brain/raylib-go) - Go bindings for [raylib](https://www.raylib.com/), a simple and easy-to-use library to learn videogames programming.\n- [termloop](https://github.com/JoelOtter/termloop) - Terminal-based game engine for Go, built on top of Termbox.\n- [tile](https://github.com/kelindar/tile) - Data-oriented and cache-friendly 2D Grid library (TileMap), includes pathfinding, observers and import/export.\n\n**[⬆ back to top](#contents)**\n\n## Generators\n\n_Tools that generate Go code._\n\n- [convergen](https://github.com/reedom/convergen) - Feature rich type-to-type copy code generator.\n- [copygen](https://github.com/switchupcb/copygen) - Generate any code based on Go types, including type-to-type converters (copy code) without reflection by default.\n- [generis](https://github.com/senselogic/GENERIS) - Code generation tool providing generics, free-form macros, conditional compilation and HTML templating.\n- [go-enum](https://github.com/abice/go-enum) - Code generation for enums from code comments.\n- [go-enum-encoding](https://github.com/nikolaydubina/go-enum-encoding) - Code generation for enum encoding from code comments.\n- [go-linq](https://github.com/ahmetalpbalkan/go-linq) - .NET LINQ-like query methods for Go.\n- [goderive](https://github.com/awalterschulze/goderive) - Derives functions from input types\n- [goverter](https://github.com/jmattheis/goverter) - Generate converters by defining an interface.\n- [GoWrap](https://github.com/hexdigest/gowrap) - Generate decorators for Go interfaces using simple templates.\n- [interfaces](https://github.com/rjeczalik/interfaces) - Command line tool for generating interface definitions.\n- [jennifer](https://github.com/dave/jennifer) - Generate arbitrary Go code without templates.\n- [oapi-codegen](https://github.com/deepmap/oapi-codegen) - This package contains a set of utilities for generating Go boilerplate code for services based on OpenAPI 3.0 API definitions.\n- [typeregistry](https://github.com/xiaoxin01/typeregistry) - A library to create type dynamically.\n\n**[⬆ back to top](#contents)**\n\n## Geographic\n\n_Geographic tools and servers_\n\n- [geoos](https://github.com/spatial-go/geoos) - A library provides spatial data and geometric algorithms.\n- [geoserver](https://github.com/hishamkaram/geoserver) - geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API.\n- [gismanager](https://github.com/hishamkaram/gismanager) - Publish Your GIS Data(Vector Data) to PostGIS and Geoserver.\n- [godal](https://github.com/airbusgeo/godal) - Go wrapper for GDAL.\n- [H3](https://github.com/uber/h3-go) - Go bindings for H3, a hierarchical hexagonal geospatial indexing system.\n- [H3 GeoJSON](https://github.com/mmadfox/go-geojson2h3) - Conversion utilities between H3 indexes and GeoJSON.\n- [H3GeoDist](https://github.com/mmadfox/go-h3geo-dist) - Distribution of Uber H3geo cells by virtual nodes.\n- [mbtileserver](https://github.com/consbio/mbtileserver) - A simple Go-based server for map tiles stored in mbtiles format.\n- [osm](https://github.com/paulmach/osm) - Library for reading, writing and working with OpenStreetMap data and APIs.\n- [pbf](https://github.com/maguro/pbf) - OpenStreetMap PBF golang encoder/decoder.\n- [S2 geojson](https://github.com/pantrif/s2-geojson) - Convert geojson to s2 cells & demonstrating some S2 geometry features on map.\n- [S2 geometry](https://github.com/golang/geo) - S2 geometry library in Go.\n- [simplefeatures](https://github.com/peterstace/simplefeatures) - simplesfeatures is a 2D geometry library that provides Go types that model geometries, as well as algorithms that operate on them.\n- [Tile38](https://github.com/tidwall/tile38) - Geolocation DB with spatial index and realtime geofencing.\n- [Web-Mercator-Projection](https://github.com/jorelosorio/web-mercator-projection) A project to easily use and convert LonLat, Point and Tile to display info, markers, etc, in a map using the Web Mercator Projection.\n- [WGS84](https://github.com/wroge/wgs84) - Library for Coordinate Conversion and Transformation (ETRS89, OSGB36, NAD83, RGF93, Web Mercator, UTM).\n\n**[⬆ back to top](#contents)**\n\n## Go Compilers\n\n_Tools for compiling Go to other languages and vice-versa._\n\n- [bunster](https://github.com/yassinebenaid/bunster) - Compile shell scripts to Go.\n- [c4go](https://github.com/Konstantin8105/c4go) - Transpile C code to Go code.\n- [esp32](https://github.com/andygeiss/esp32-transpiler) - Transpile Go into Arduino code.\n- [f4go](https://github.com/Konstantin8105/f4go) - Transpile FORTRAN 77 code to Go code.\n- [go2hx](https://github.com/go2hx/go2hx) - Compiler from Go to Haxe to Javascript/C++/Java/C#.\n- [gopherjs](https://github.com/gopherjs/gopherjs) - Compiler from Go to JavaScript.\n\n**[⬆ back to top](#contents)**\n\n## Goroutines\n\n_Tools for managing and working with Goroutines._\n\n- [ants](https://github.com/panjf2000/ants) - A high-performance and low-cost goroutine pool in Go.\n- [artifex](https://github.com/borderstech/artifex) - Simple in-memory job queue for Golang using worker-based dispatching.\n- [async](https://github.com/yaitoo/async) - An asynchronous task package with async/await style for Go.\n- [async](https://github.com/reugn/async) - An alternative sync library for Go (Future, Promise, Locks).\n- [async](https://github.com/studiosol/async) - A safe way to execute functions asynchronously, recovering them in case of panic.\n- [async-job](https://github.com/lab210-dev/async-job) - AsyncJob is an asynchronous queue job manager with light code, clear and speed.\n- [breaker](https://github.com/kamilsk/breaker) - Flexible mechanism to make execution flow interruptible.\n- [channelify](https://github.com/ddelizia/channelify) - Transform your function to return channels for easy and powerful parallel processing.\n- [conc](https://github.com/sourcegraph/conc) - `conc` is your toolbelt for structured concurrency in go, making common tasks easier and safer.\n- [concurrency-limiter](https://github.com/vivek-ng/concurrency-limiter) - Concurrency limiter with support for timeouts, dynamic priority and context cancellation of goroutines.\n- [conexec](https://github.com/ITcathyh/conexec) - A concurrent toolkit to help execute funcs concurrently in an efficient and safe way. It supports specifying the overall timeout to avoid blocking and uses goroutine pool to improve efficiency.\n- [cyclicbarrier](https://github.com/marusama/cyclicbarrier) - CyclicBarrier for golang.\n- [execpool](https://github.com/hexdigest/execpool) - A pool built around exec.Cmd that spins up a given number of processes in advance and attaches stdin and stdout to them when needed. Very similar to FastCGI or Apache Prefork MPM but works for any command.\n- [flowmatic](https://github.com/carlmjohnson/flowmatic) - Structured concurrency made easy.\n- [go-accumulator](https://github.com/nar10z/go-accumulator) - Solution for accumulation of events and their subsequent processing.\n- [go-actor](https://github.com/vladopajic/go-actor) - A tiny library for writing concurrent programs using actor model.\n- [go-floc](https://github.com/workanator/go-floc) - Orchestrate goroutines with ease.\n- [go-flow](https://github.com/kamildrazkiewicz/go-flow) - Control goroutines execution order.\n- [go-tools/multithreading](https://github.com/nikhilsaraf/go-tools) - Manage a pool of goroutines using this lightweight library with a simple API.\n- [go-trylock](https://github.com/subchen/go-trylock) - TryLock support on read-write lock for Golang.\n- [go-waitgroup](https://github.com/pieterclaerhout/go-waitgroup) - Like `sync.WaitGroup` with error handling and concurrency control.\n- [go-workerpool](https://github.com/zenthangplus/go-workerpool) - Inspired from Java Thread Pool, Go WorkerPool aims to control heavy Go Routines.\n- [go-workers](https://github.com/catmullet/go-workers) - Easily and safely run workers for large data processing pipelines.\n- [goccm](https://github.com/zenthangplus/goccm) - Go Concurrency Manager package limits the number of goroutines that allowed to run concurrently.\n- [gohive](https://github.com/loveleshsharma/gohive) - A highly performant and easy to use Goroutine pool for Go.\n- [gollback](https://github.com/vardius/gollback) - asynchronous simple function utilities, for managing execution of closures and callbacks.\n- [gowl](https://github.com/hamed-yousefi/gowl) - Gowl is a process management and process monitoring tool at once. An infinite worker pool gives you the ability to control the pool and processes and monitor their status.\n- [goworker](https://github.com/benmanns/goworker) - goworker is a Go-based background worker.\n- [gowp](https://github.com/xxjwxc/gowp) - gowp is concurrency limiting goroutine pool.\n- [gpool](https://github.com/Sherifabdlnaby/gpool) - manages a resizeable pool of context-aware goroutines to bound concurrency.\n- [grpool](https://github.com/ivpusic/grpool) - Lightweight Goroutine pool.\n- [hands](https://github.com/duanckham/hands) - A process controller used to control the execution and return strategies of multiple goroutines.\n- [Hunch](https://github.com/AaronJan/Hunch) - Hunch provides functions like: `All`, `First`, `Retry`, `Waterfall` etc., that makes asynchronous flow control more intuitive.\n- [kyoo](https://github.com/dirkaholic/kyoo) - Provides an unlimited job queue and concurrent worker pools.\n- [neilotoole/errgroup](https://github.com/neilotoole/errgroup) - Drop-in alternative to `sync/errgroup`, limited to a pool of N worker goroutines.\n- [nursery](https://github.com/arunsworld/nursery) - Structured concurrency in Go.\n- [oversight](https://pkg.go.dev/cirello.io/oversight) - Oversight is a complete implementation of the Erlang supervision trees.\n- [parallel-fn](https://github.com/rafaeljesus/parallel-fn) - Run functions in parallel.\n- [pond](https://github.com/alitto/pond) - Minimalistic and High-performance goroutine worker pool written in Go.\n- [pool](https://github.com/go-playground/pool) - Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation.\n- [rill](https://github.com/destel/rill) - Go toolkit for clean, composable, channel-based concurrency.\n- [routine](https://github.com/timandy/routine) - `routine` is a `ThreadLocal` for go library. It encapsulates and provides some easy-to-use, non-competitive, high-performance `goroutine` context access interfaces, which can help you access coroutine context information more gracefully.\n- [routine](https://github.com/x-mod/routine) - go routine control with context, support: Main, Go, Pool and some useful Executors.\n- [semaphore](https://github.com/kamilsk/semaphore) - Semaphore pattern implementation with timeout of lock/unlock operations based on channel and context.\n- [semaphore](https://github.com/marusama/semaphore) - Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations).\n- [stl](https://github.com/ssgreg/stl) - Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism.\n- [threadpool](https://github.com/shettyh/threadpool) - Golang threadpool implementation.\n- [tunny](https://github.com/Jeffail/tunny) - Goroutine pool for golang.\n- [worker-pool](https://github.com/vardius/worker-pool) - goworker is a Go simple async worker pool.\n- [workerpool](https://github.com/gammazero/workerpool) - Goroutine pool that limits the concurrency of task execution, not the number of tasks queued.\n\n**[⬆ back to top](#contents)**\n\n## GUI\n\n_Libraries for building GUI Applications._\n\n_Toolkits_\n\n- [app](https://github.com/murlokswarm/app) - Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress.\n- [cimgui-go](https://github.com/AllenDang/cimgui-go) - Auto generated Go wrapper for [Dear ImGui](https://github.com/ocornut/imgui) via [cimgui](https://github.com/cimgui/cimgui).\n- [Cogent Core](https://github.com/cogentcore/core) - A framework for building 2D and 3D apps that run on macOS, Windows, Linux, iOS, Android, and the web.\n- [DarwinKit](https://github.com/progrium/darwinkit) - Build native macOS applications using Go.\n- [energy](https://github.com/energye/energy) - Cross-platform based on LCL(Native System UI Control Library) and CEF(Chromium Embedded Framework) (Windows/ macOS / Linux)\n- [fyne](https://github.com/fyne-io/fyne) - Cross platform native GUIs designed for Go based on Material Design. Supports: Linux, macOS, Windows, BSD, iOS and Android.\n- [gio](https://gioui.org) - Gio is a library for writing cross-platform immediate mode GUI-s in Go. Gio supports all the major platforms: Linux, macOS, Windows, Android, iOS, FreeBSD, OpenBSD and WebAssembly.\n- [go-gtk](https://mattn.github.io/go-gtk/) - Go bindings for GTK.\n- [go-sciter](https://github.com/sciter-sdk/go-sciter) - Go bindings for Sciter: the Embeddable HTML/CSS/script engine for modern desktop UI development. Cross platform.\n- [Goey](https://bitbucket.org/rj/goey/src/master/) - Cross platform UI toolkit aggregator for Windows / Linux / Mac. GTK, Cocoa, Windows API\n- [goradd/html5tag](https://github.com/goradd/html5tag) - Library for outputting HTML5 tags.\n- [gotk3](https://github.com/gotk3/gotk3) - Go bindings for GTK3.\n- [gowd](https://github.com/dtylman/gowd) - Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform.\n- [qt](https://github.com/therecipe/qt) - Qt binding for Go (support for Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi).\n- [Spot](https://github.com/roblillack/spot) - Reactive, cross-platform desktop GUI toolkit.\n- [ui](https://github.com/andlabs/ui) - Platform-native GUI library for Go. Cross platform.\n- [unison](https://github.com/richardwilkes/unison) - A unified graphical user experience toolkit for Go desktop applications. macOS, Windows, and Linux are supported.\n- [Wails](https://wails.io) - Mac, Windows, Linux desktop apps with HTML UI using built-in OS HTML renderer.\n- [walk](https://github.com/lxn/walk) - Windows application library kit for Go.\n- [webview](https://github.com/zserge/webview) - Cross-platform webview window with simple two-way JavaScript bindings (Windows / macOS / Linux).\n\n_Interaction_\n\n- [AppIndicator Go](https://github.com/gopherlibs/appindicator) - Go bindings for libappindicator3 C library.\n- [gosx-notifier](https://github.com/deckarep/gosx-notifier) - OSX Desktop Notifications library for Go.\n- [mac-activity-tracker](https://github.com/prashantgupta24/activity-tracker) - OSX library to notify about any (pluggable) activity on your machine.\n- [mac-sleep-notifier](https://github.com/prashantgupta24/mac-sleep-notifier) - OSX Sleep/Wake notifications in golang.\n- [robotgo](https://github.com/go-vgo/robotgo) - Go Native cross-platform GUI system automation. Control the mouse, keyboard and other.\n- [systray](https://github.com/getlantern/systray) - Cross platform Go library to place an icon and menu in the notification area.\n- [trayhost](https://github.com/shurcooL/trayhost) - Cross-platform Go library to place an icon in the host operating system's taskbar.\n- [zenity](https://github.com/ncruces/zenity) - Cross-platform Go library and CLI to create simple dialogs that interact graphically with the user.\n\n**[⬆ back to top](#contents)**\n\n## Hardware\n\n_Libraries, tools, and tutorials for interacting with hardware._\n\n- [arduino-cli](https://github.com/arduino/arduino-cli) - Official Arduino CLI and library. Can run standalone, or be incorporated into larger Go projects.\n- [emgo](https://github.com/ziutek/emgo) - Go-like language for programming embedded systems (e.g. STM32 MCU).\n- [ghw](https://github.com/jaypipes/ghw) - Golang hardware discovery/inspection library.\n- [go-osc](https://github.com/hypebeast/go-osc) - Open Sound Control (OSC) bindings for Go.\n- [go-rpio](https://github.com/stianeikeland/go-rpio) - GPIO for Go, doesn't require cgo.\n- [goroslib](https://github.com/aler9/goroslib) - Robot Operating System (ROS) library for Go.\n- [joystick](https://github.com/0xcafed00d/joystick) - a polled API to read the state of an attached joystick.\n- [sysinfo](https://github.com/zcalusic/sysinfo) - A pure Go library providing Linux OS / kernel / hardware system information.\n\n**[⬆ back to top](#contents)**\n\n## Images\n\n_Libraries for manipulating images._\n\n- [bild](https://github.com/anthonynsimon/bild) - Collection of image processing algorithms in pure Go.\n- [bimg](https://github.com/h2non/bimg) - Small package for fast and efficient image processing using libvips.\n- [cameron](https://github.com/aofei/cameron) - An avatar generator for Go.\n- [canvas](https://github.com/tdewolff/canvas) - Vector graphics to PDF, SVG or rasterized image.\n- [color-extractor](https://github.com/marekm4/color-extractor) - Dominant color extractor with no external dependencies.\n- [darkroom](https://github.com/gojek/darkroom) - An image proxy with changeable storage backends and image processing engines with focus on speed and resiliency.\n- [draft](https://github.com/lucasepe/draft) - Generate High Level Microservice Architecture diagrams for GraphViz using simple YAML syntax.\n- [geopattern](https://github.com/pravj/geopattern) - Create beautiful generative image patterns from a string.\n- [gg](https://github.com/fogleman/gg) - 2D rendering in pure Go.\n- [gift](https://github.com/disintegration/gift) - Package of image processing filters.\n- [gltf](https://github.com/qmuntal/gltf) - Efficient and robust glTF 2.0 reader, writer and validator.\n- [go-cairo](https://github.com/ungerik/go-cairo) - Go binding for the cairo graphics library.\n- [go-gd](https://github.com/bolknote/go-gd) - Go binding for GD library.\n- [go-nude](https://github.com/koyachi/go-nude) - Nudity detection with Go.\n- [go-qrcode](https://github.com/yeqown/go-qrcode) - Generate QR codes with personalized styles, allowing adjustments to color, block size, shape, and icons.\n- [go-webcolors](https://github.com/jyotiska/go-webcolors) - Port of webcolors library from Python to Go.\n- [go-webp](https://github.com/kolesa-team/go-webp) - Library for encode and decode webp pictures, using libwebp.\n- [gocv](https://github.com/hybridgroup/gocv) - Go package for computer vision using OpenCV 3.3+.\n- [goimagehash](https://github.com/corona10/goimagehash) - Go Perceptual image hashing package.\n- [goimghdr](https://github.com/corona10/goimghdr) - The imghdr module determines the type of image contained in a file for Go.\n- [govatar](https://github.com/o1egl/govatar) - Library and CMD tool for generating funny avatars.\n- [govips](https://github.com/davidbyttow/govips) - A lightning fast image processing and resizing library for Go.\n- [gowitness](https://github.com/sensepost/gowitness) - Screenshoting webpages using go and headless chrome on command line.\n- [gridder](https://github.com/shomali11/gridder) - A Grid based 2D Graphics library.\n- [image2ascii](https://github.com/qeesung/image2ascii) - Convert image to ASCII.\n- [imagick](https://github.com/gographics/imagick) - Go binding to ImageMagick's MagickWand C API.\n- [imaginary](https://github.com/h2non/imaginary) - Fast and simple HTTP microservice for image resizing.\n- [imaging](https://github.com/disintegration/imaging) - Simple Go image processing package.\n- [imagor](https://github.com/cshum/imagor) - Fast, secure image processing server and Go library, using libvips.\n- [img](https://github.com/hawx/img) - Selection of image manipulation tools.\n- [ln](https://github.com/fogleman/ln) - 3D line art rendering in Go.\n- [mergi](https://github.com/noelyahan/mergi) - Tool & Go library for image manipulation (Merge, Crop, Resize, Watermark, Animate).\n- [mort](https://github.com/aldor007/mort) - Storage and image processing server written in Go.\n- [mpo](https://github.com/donatj/mpo) - Decoder and conversion tool for MPO 3D Photos.\n- [picfit](https://github.com/thoas/picfit) - An image resizing server written in Go.\n- [pt](https://github.com/fogleman/pt) - Path tracing engine written in Go.\n- [rez](https://github.com/bamiaux/rez) - Image resizing in pure Go and SIMD.\n- [scout](https://github.com/jonoton/scout) - Scout is a standalone open source software solution for DIY video security.\n- [smartcrop](https://github.com/muesli/smartcrop) - Finds good crops for arbitrary images and crop sizes.\n- [steganography](https://github.com/auyer/steganography) - Pure Go Library for LSB steganography.\n- [stegify](https://github.com/DimitarPetrov/stegify) - Go tool for LSB steganography, capable of hiding any file within an image.\n- [svgo](https://github.com/ajstarks/svgo) - Go Language Library for SVG generation.\n- [transformimgs](https://github.com/Pixboost/transformimgs) - Transformimgs resizes and optimises images for Web using next-generation formats.\n- [webp-server](https://github.com/mehdipourfar/webp-server) - Simple and minimal image server capable of storing, resizing, converting and caching images.\n\n**[⬆ back to top](#contents)**\n\n## IoT (Internet of Things)\n\n_Libraries for programming devices of the IoT._\n\n- [connectordb](https://github.com/connectordb/connectordb) - Open-Source Platform for Quantified Self & IoT.\n- [devices](https://github.com/goiot/devices) - Suite of libraries for IoT devices, experimental for x/exp/io.\n- [ekuiper](https://github.com/lf-edge/ekuiper) - Lightweight data stream processing engine for IoT edge.\n- [eywa](https://github.com/xcodersun/eywa) - Project Eywa is essentially a connection manager that keeps track of connected devices.\n- [flogo](https://github.com/tibcosoftware/flogo) - Project Flogo is an Open Source Framework for IoT Edge Apps & Integration.\n- [gatt](https://github.com/paypal/gatt) - Gatt is a Go package for building Bluetooth Low Energy peripherals.\n- [gobot](https://github.com/hybridgroup/gobot/) - Gobot is a framework for robotics, physical computing, and the Internet of Things.\n- [huego](https://github.com/amimof/huego) - An extensive Philips Hue client library for Go.\n- [iot](https://github.com/vaelen/iot/) - IoT is a simple framework for implementing a Google IoT Core device.\n- [mainflux](https://github.com/Mainflux/mainflux) - Industrial IoT Messaging and Device Management Server.\n- [periph](https://periph.io/) - Peripherals I/O to interface with low-level board facilities.\n- [rulego](https://github.com/rulego/rulego) - RuleGo is a lightweight, high-performance, embedded, orchestrable component-based rule engine for IoT edge.\n- [sensorbee](https://github.com/sensorbee/sensorbee) - Lightweight stream processing engine for IoT.\n- [shifu](https://github.com/Edgenesis/shifu) - Kubernetes native IoT development framework.\n- [smart-home](https://github.com/e154/smart-home) - Software package for IoT automation.\n\n**[⬆ back to top](#contents)**\n\n## Job Scheduler\n\n_Libraries for scheduling jobs._\n\n- [cdule](https://github.com/deepaksinghvi/cdule) - Job scheduler library with database support\n- [cheek](https://github.com/bart6114/cheek) - A simple crontab like scheduler that aims to offer a KISS approach to job scheduling.\n- [clockwerk](https://github.com/onatm/clockwerk) - Go package to schedule periodic jobs using a simple, fluent syntax.\n- [cronticker](https://github.com/krayzpipes/cronticker) - A ticker implementation to support cron schedules.\n- [go-cron](https://github.com/rk/go-cron) - Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons.\n- [go-quartz](https://github.com/reugn/go-quartz) - Simple, zero-dependency scheduling library for Go.\n- [gocron](https://github.com/go-co-op/gocron) - Easy and fluent Go job scheduling. This is an actively maintained fork of [jasonlvhit/gocron](https://github.com/jasonlvhit/gocron).\n- [goflow](https://github.com/fieldryand/goflow) - A simple but powerful DAG scheduler and dashboard.\n- [gron](https://github.com/roylee0704/gron) - Define time-based tasks using a simple Go API and Gron’s scheduler will run them accordingly.\n- [gronx](https://github.com/adhocore/gronx) - Cron expression parser, task runner and daemon consuming crontab like task list.\n- [JobRunner](https://github.com/bamzi/jobrunner) - Smart and featureful cron job scheduler with job queuing and live monitoring built in.\n- [leprechaun](https://github.com/kilgaloon/leprechaun) - Job scheduler that supports webhooks, crons and classic scheduling.\n- [sched](https://github.com/romshark/sched) - A job scheduler with the ability to fast-forward time.\n- [scheduler](https://github.com/carlescere/scheduler) - Cronjobs scheduling made easy.\n- [tasks](https://github.com/madflojo/tasks) - An easy to use in-process scheduler for recurring tasks in Go.\n\n**[⬆ back to top](#contents)**\n\n## JSON\n\n_Libraries for working with JSON._\n\n- [ajson](https://github.com/spyzhov/ajson) - Abstract JSON for golang with JSONPath support.\n- [ask](https://github.com/simonnilsson/ask) - Easy access to nested values in maps and slices. Works in combination with encoding/json and other packages that \"Unmarshal\" arbitrary data into Go data-types.\n- [dynjson](https://github.com/cocoonspace/dynjson) - Client-customizable JSON formats for dynamic APIs.\n- [ej](https://github.com/lucassscaravelli/ej) - Write and read JSON from different sources succinctly.\n- [epoch](https://github.com/vtopc/epoch) - Contains primitives for marshaling/unmarshalling Unix timestamp/epoch to/from build-in time.Time type in JSON.\n- [fastjson](https://github.com/valyala/fastjson) - Fast JSON parser and validator for Go. No custom structs, no code generation, no reflection.\n- [gabs](https://github.com/Jeffail/gabs) - For parsing, creating and editing unknown or dynamic JSON in Go.\n- [gjo](https://github.com/skanehira/gjo) - Small utility to create JSON objects.\n- [GJSON](https://github.com/tidwall/gjson) - Get a JSON value with one line of code.\n- [go-jsonerror](https://github.com/ddymko/go-jsonerror) - Go-JsonError is meant to allow us to easily create json response errors that follow the JsonApi spec.\n- [go-respond](https://github.com/nicklaw5/go-respond) - Go package for handling common HTTP JSON responses.\n- [gojmapr](https://github.com/limiu82214/gojmapr) - Get simple struct from complex json by json path.\n- [gojq](https://github.com/elgs/gojq) - JSON query in Golang.\n- [gojson](https://github.com/ChimeraCoder/gojson) - Automatically generate Go (golang) struct definitions from example JSON.\n- [htmljson](https://github.com/nikolaydubina/htmljson) - Rich rendering of JSON as HTML in Go.\n- [JayDiff](https://github.com/yazgazan/jaydiff) - JSON diff utility written in Go.\n- [jettison](https://github.com/wI2L/jettison) - Fast and flexible JSON encoder for Go.\n- [jscan](https://github.com/romshark/jscan) - High performance zero-allocation JSON iterator.\n- [JSON-to-Go](https://mholt.github.io/json-to-go/) - Convert JSON to Go struct.\n- [JSON-to-Proto](https://json-to-proto.github.io/) - Convert JSON to Protobuf online.\n- [json2go](https://github.com/m-zajac/json2go) - Advanced JSON to Go struct conversion. Provides package that can parse multiple JSON documents and create struct to fit them all.\n- [jsonapi-errors](https://github.com/AmuzaTkts/jsonapi-errors) - Go bindings based on the JSON API errors reference.\n- [jsoncolor](https://github.com/neilotoole/jsoncolor) - Drop-in replacement for `encoding/json` that outputs colorized JSON.\n- [jsondiff](https://github.com/wI2L/jsondiff) - JSON diff library for Go based on RFC6902 (JSON Patch).\n- [jsonf](https://github.com/miolini/jsonf) - Console tool for highlighted formatting and struct query fetching JSON.\n- [jsongo](https://github.com/ricardolonga/jsongo) - Fluent API to make it easier to create Json objects.\n- [jsonhal](https://github.com/RichardKnop/jsonhal) - Simple Go package to make custom structs marshal into HAL compatible JSON responses.\n- [jsonhandlers](https://github.com/abusomani/jsonhandlers) - JSON library to expose simple handlers that lets you easily read and write json from various sources.\n- [jsonic](https://github.com/sinhashubham95/jsonic) - Utilities to handle and query JSON without defining structs in a type safe manner.\n- [jsonvalue](https://github.com/Andrew-M-C/go.jsonvalue) - A fast and convenient library for unstructured JSON data, replacing `encoding/json`.\n- [jzon](https://github.com/zerosnake0/jzon) - JSON library with standard compatible API/behavior.\n- [kazaam](https://github.com/Qntfy/kazaam) - API for arbitrary transformation of JSON documents.\n- [mapslice-json](https://github.com/mickep76/mapslice-json) - Go MapSlice for ordered marshal/ unmarshal of maps in JSON.\n- [marshmallow](https://github.com/PerimeterX/marshmallow) - Performant JSON unmarshalling for flexible use cases.\n- [mp](https://github.com/sanbornm/mp) - Simple cli email parser. It currently takes stdin and outputs JSON.\n- [OjG](https://github.com/ohler55/ojg) - Optimized JSON for Go is a high performance parser with a variety of additional JSON tools including JSONPath.\n- [omg.jsonparser](https://github.com/dedalqq/omg.jsonparser) - Simple JSON parser with validation by condition via golang struct fields tags.\n- [ujson](https://github.com/olvrng/ujson) - Fast and minimal JSON parser and transformer that works on unstructured JSON.\n- [vjson](https://github.com/miladibra10/vjson) - Go package for validating JSON objects with declaring a JSON schema with fluent API.\n\n**[⬆ back to top](#contents)**\n\n## Logging\n\n_Libraries for generating and working with log files._\n\n- [distillog](https://github.com/amoghe/distillog) - distilled levelled logging (think of it as stdlib + log levels).\n- [glg](https://github.com/kpango/glg) - glg is simple and fast leveled logging library for Go.\n- [glo](https://github.com/lajosbencz/glo) - PHP Monolog inspired logging facility with identical severity levels.\n- [glog](https://github.com/golang/glog) - Leveled execution logs for Go.\n- [go-cronowriter](https://github.com/utahta/go-cronowriter) - Simple writer that rotate log files automatically based on current date and time, like cronolog.\n- [go-log](https://github.com/pieterclaerhout/go-log) - A logging library with stack traces, object dumping and optional timestamps.\n- [go-log](https://github.com/subchen/go-log) - Simple and configurable Logging in Go, with level, formatters and writers.\n- [go-log](https://github.com/siddontang/go-log) - Log lib supports level and multi handlers.\n- [go-log](https://github.com/ian-kent/go-log) - Log4j implementation in Go.\n- [go-logger](https://github.com/apsdehal/go-logger) - Simple logger of Go Programs, with level handlers.\n- [gone/log](https://github.com/One-com/gone/tree/master/log) - Fast, extendable, full-featured, std-lib source compatible log library.\n- [httpretty](https://github.com/henvic/httpretty) - Pretty-prints your regular HTTP requests on your terminal for debugging (similar to http.DumpRequest).\n- [journald](https://github.com/ssgreg/journald) - Go implementation of systemd Journal's native API for logging.\n- [kemba](https://github.com/clok/kemba) - A tiny debug logging tool inspired by [debug](https://github.com/visionmedia/debug), great for CLI tools and applications.\n- [lazyjournal](https://github.com/Lifailon/lazyjournal) - A TUI for reading and filtering logs from journalctl, file system, Docker and Podman containers, as well Kubernetes pods.\n- [log](https://github.com/aerogo/log) - An O(1) logging system that allows you to connect one log to multiple writers (e.g. stdout, a file and a TCP connection).\n- [log](https://github.com/apex/log) - Structured logging package for Go.\n- [log](https://github.com/go-playground/log) - Simple, configurable and scalable Structured Logging for Go.\n- [log](https://github.com/teris-io/log) - Structured log interface for Go cleanly separates logging facade from its implementation.\n- [log](https://github.com/heartwilltell/log) - Simple leveled logging wrapper around standard log package.\n- [log](https://github.com/no-src/log) - A simple logging framework out of the box.\n- [log15](https://github.com/inconshreveable/log15) - Simple, powerful logging for Go.\n- [logdump](https://github.com/ewwwwwqm/logdump) - Package for multi-level logging.\n- [logex](https://github.com/chzyer/logex) - Golang log lib, supports tracking and level, wrap by standard log lib.\n- [logger](https://github.com/azer/logger) - Minimalistic logging library for Go.\n- [logo](https://github.com/mbndr/logo) - Golang logger to different configurable writers.\n- [logrus](https://github.com/Sirupsen/logrus) - Structured logger for Go.\n- [logrusiowriter](https://github.com/cabify/logrusiowriter) - `io.Writer` implementation using [logrus](https://github.com/sirupsen/logrus) logger.\n- [logrusly](https://github.com/sebest/logrusly) - [logrus](https://github.com/sirupsen/logrus) plug-in to send errors to a [Loggly](https://www.loggly.com/).\n- [logur](https://github.com/logur/logur) - An opinionated logger interface and collection of logging best practices with adapters and integrations for well-known libraries ([logrus](https://github.com/sirupsen/logrus), [go-kit log](https://github.com/go-kit/kit/tree/master/log), [zap](https://github.com/uber-go/zap), [zerolog](https://github.com/rs/zerolog), etc).\n- [logutils](https://github.com/hashicorp/logutils) - Utilities for slightly better logging in Go (Golang) extending the standard logger.\n- [logxi](https://github.com/mgutz/logxi) - 12-factor app logger that is fast and makes you happy.\n- [lumberjack](https://github.com/natefinch/lumberjack) - Simple rolling logger, implements io.WriteCloser.\n- [mlog](https://github.com/jbrodriguez/mlog) - Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout/stderr output.\n- [noodlog](https://github.com/gyozatech/noodlog) - Parametrized JSON logging library which lets you obfuscate sensitive data and marshal any kind of content. No more printed pointers instead of values, nor escape chars for the JSON strings.\n- [onelog](https://github.com/francoispqt/onelog) - Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenarios. Also, it is one of the logger with the lowest allocation.\n- [ozzo-log](https://github.com/go-ozzo/ozzo-log) - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).\n- [phuslu/log](https://github.com/phuslu/log) - High performance structured logging.\n- [pp](https://github.com/k0kubun/pp) - Colored pretty printer for Go language.\n- [rollingwriter](https://github.com/arthurkiller/rollingWriter) - RollingWriter is an auto-rotate `io.Writer` implementation with multi policies to provide log file rotation.\n- [seelog](https://github.com/cihub/seelog) - Logging functionality with flexible dispatching, filtering, and formatting.\n- [sentry-go](https://github.com/getsentry/sentry-go) - Sentry SDK for Go. Helps monitor and track errors with real-time alerts and performance monitoring.\n- [slf4g](https://github.com/echocat/slf4g) - Simple Logging Facade for Golang: Simple structured logging; but powerful, extendable and customizable, with huge amount of learnings from decades of past logging frameworks.\n- [slog](https://github.com/gookit/slog) - Lightweight, configurable, extensible logger for Go.\n- [slog-formatter](https://github.com/samber/slog-formatter) - Common formatters for slog and helpers to build your own.\n- [slog-multi](https://github.com/samber/slog-multi) - Chain of slog.Handler (pipeline, fanout...).\n- [slogor](https://gitlab.com/greyxor/slogor) - A colorful slog handler.\n- [spew](https://github.com/davecgh/go-spew) - Implements a deep pretty printer for Go data structures to aid in debugging.\n- [sqldb-logger](https://github.com/simukti/sqldb-logger) - A logger for Go SQL database driver without modify existing \\*sql.DB stdlib usage.\n- [stdlog](https://github.com/alexcesaro/log) - Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs.\n- [structy/log](https://github.com/structy/log) - A simple to use log system, minimalist but with features for debugging and differentiation of messages.\n- [tail](https://github.com/hpcloud/tail) - Go package striving to emulate the features of the BSD tail program.\n- [timberjack](https://github.com/DeRuina/timberjack) - Rolling logger with size-based, time-based, and scheduled clock-based rotation, supporting compression and cleanup.\n- [tint](https://github.com/lmittmann/tint) - A slog.Handler that writes tinted logs.\n- [xlog](https://github.com/xfxdev/xlog) - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.\n- [xlog](https://github.com/rs/xlog) - Structured logger for `net/context` aware HTTP handlers with flexible dispatching.\n- [xylog](https://github.com/xybor-x/xylog) - Leveled and structured logging, dynamic fields, high performance, zone management, simple configuration, and readable syntax.\n- [yell](https://github.com/jfcg/yell) - Yet another minimalistic logging library.\n- [zap](https://github.com/uber-go/zap) - Fast, structured, leveled logging in Go.\n- [zax](https://github.com/yuseferi/zax) - Integrate Context with Zap logger, which leads to more flexibility in Go logging.\n- [zerolog](https://github.com/rs/zerolog) - Zero-allocation JSON logger.\n- [zkits-logger](https://github.com/edoger/zkits-logger) - A powerful zero-dependency JSON logger.\n- [zl](https://github.com/nkmr-jp/zl) - High Developer Experience, zap based logger. It offers rich functionality but is easy to configure.\n\n**[⬆ back to top](#contents)**\n\n## Machine Learning\n\n_Libraries for Machine Learning._\n\n- [bayesian](https://github.com/jbrukh/bayesian) - Naive Bayesian Classification for Golang.\n- [catboost-cgo](https://github.com/mirecl/catboost-cgo) - Fast, scalable, high performance Gradient Boosting on Decision Trees library. Golang using Cgo for blazing fast inference CatBoost Model.\n- [CloudForest](https://github.com/ryanbressler/CloudForest) - Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go.\n- [ddt](https://github.com/sgrodriguez/ddt) - Dynamic decision tree, create trees defining customizable rules.\n- [eaopt](https://github.com/MaxHalford/eaopt) - An evolutionary optimization library.\n- [evoli](https://github.com/khezen/evoli) - Genetic Algorithm and Particle Swarm Optimization library.\n- [fonet](https://github.com/Fontinalis/fonet) - A Deep Neural Network library written in Go.\n- [go-cluster](https://github.com/e-XpertSolutions/go-cluster) - Go implementation of the k-modes and k-prototypes clustering algorithms.\n- [go-deep](https://github.com/patrikeh/go-deep) - A feature-rich neural network library in Go.\n- [go-fann](https://github.com/white-pony/go-fann) - Go bindings for Fast Artificial Neural Networks(FANN) library.\n- [go-featureprocessing](https://github.com/nikolaydubina/go-featureprocessing) - Fast and convenient feature processing for low latency machine learning in Go.\n- [go-galib](https://github.com/thoj/go-galib) - Genetic Algorithms library written in Go / golang.\n- [go-pr](https://github.com/daviddengcn/go-pr) - Pattern recognition package in Go lang.\n- [gobrain](https://github.com/goml/gobrain) - Neural Networks written in go.\n- [godist](https://github.com/e-dard/godist) - Various probability distributions, and associated methods.\n- [goga](https://github.com/tomcraven/goga) - Genetic algorithm library for Go.\n- [GoLearn](https://github.com/sjwhitworth/golearn) - General Machine Learning library for Go.\n- [golinear](https://github.com/danieldk/golinear) - liblinear bindings for Go.\n- [GoMind](https://github.com/surenderthakran/gomind) - A simplistic Neural Network Library in Go.\n- [goml](https://github.com/cdipaolo/goml) - On-line Machine Learning in Go.\n- [GoMLX](https://github.com/gomlx/gomlx) - An accelerated Machine Learning framework for Go.\n- [gonet](https://github.com/dathoangnd/gonet) - Neural Network for Go.\n- [Goptuna](https://github.com/c-bata/goptuna) - Bayesian optimization framework for black-box functions written in Go. Everything will be optimized.\n- [goRecommend](https://github.com/timkaye11/goRecommend) - Recommendation Algorithms library written in Go.\n- [gorgonia](https://github.com/gorgonia/gorgonia) - graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms.\n- [gorse](https://github.com/zhenghaoz/gorse) - An offline recommender system backend based on collaborative filtering written in Go.\n- [goscore](https://github.com/asafschers/goscore) - Go Scoring API for PMML.\n- [gosseract](https://github.com/otiai10/gosseract) - Go package for OCR (Optical Character Recognition), by using Tesseract C++ library.\n- [hugot](https://github.com/knights-analytics/hugot) - Huggingface transformer pipelines for golang with onnxruntime.\n- [libsvm](https://github.com/datastream/libsvm) - libsvm golang version derived work based on LIBSVM 3.14.\n- [m2cgen](https://github.com/BayesWitnesses/m2cgen) - A CLI tool to transpile trained classic ML models into a native Go code with zero dependencies, written in Python with Go language support.\n- [neural-go](https://github.com/schuyler/neural-go) - Multilayer perceptron network implemented in Go, with training via backpropagation.\n- [ocrserver](https://github.com/otiai10/ocrserver) - A simple OCR API server, seriously easy to be deployed by Docker and Heroku.\n- [onnx-go](https://github.com/owulveryck/onnx-go) - Go Interface to Open Neural Network Exchange (ONNX).\n- [probab](https://github.com/ThePaw/probab) - Probability distribution functions. Bayesian inference. Written in pure Go.\n- [randomforest](https://github.com/malaschitz/randomForest) - Easy to use Random Forest library for Go.\n- [regommend](https://github.com/muesli/regommend) - Recommendation & collaborative filtering engine.\n- [shield](https://github.com/eaigner/shield) - Bayesian text classifier with flexible tokenizers and storage backends for Go.\n- [tfgo](https://github.com/galeone/tfgo) - Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python.\n- [Varis](https://github.com/Xamber/Varis) - Golang Neural Network.\n\n**[⬆ back to top](#contents)**\n\n## Messaging\n\n_Libraries that implement messaging systems._\n\n- [ami](https://github.com/kak-tus/ami) - Go client to reliable queues based on Redis Cluster Streams.\n- [amqp](https://github.com/rabbitmq/amqp091-go) - Go RabbitMQ Client Library.\n- [APNs2](https://github.com/sideshow/apns2) - HTTP/2 Apple Push Notification provider for Go - Send push notifications to iOS, tvOS, Safari and OSX apps.\n- [Asynq](https://github.com/hibiken/asynq) - A simple, reliable, and efficient distributed task queue for Go built on top of Redis.\n- [backlite](https://github.com/mikestefanello/backlite) - Type-safe, persistent, embedded task queues and background job runner w/ SQLite.\n- [Beaver](https://github.com/Clivern/Beaver) - A real time messaging server to build a scalable in-app notifications, multiplayer games, chat apps in web and mobile apps.\n- [Bus](https://github.com/mustafaturan/bus) - Minimalist message bus implementation for internal communication.\n- [Centrifugo](https://github.com/centrifugal/centrifugo) - Real-time messaging (Websockets or SockJS) server in Go.\n- [Chanify](https://github.com/chanify/chanify) - A push notification server send message to your iOS devices.\n- [Commander](https://github.com/jeroenrinzema/commander) - A high-level event driven consumer/producer supporting various \"dialects\" such as Apache Kafka.\n- [Confluent Kafka Golang Client](https://github.com/confluentinc/confluent-kafka-go) - confluent-kafka-go is Confluent's Golang client for Apache Kafka and the Confluent Platform.\n- [dbus](https://github.com/godbus/dbus) - Native Go bindings for D-Bus.\n- [drone-line](https://github.com/appleboy/drone-line) - Sending [Line](https://at.line.me/en) notifications using a binary, docker or Drone CI.\n- [emitter](https://github.com/olebedev/emitter) - Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins.\n- [event](https://github.com/agoalofalife/event) - Implementation of the pattern observer.\n- [EventBus](https://github.com/asaskevich/EventBus) - The lightweight event bus with async compatibility.\n- [gaurun-client](https://github.com/osamingo/gaurun-client) - Gaurun Client written in Go.\n- [Glue](https://github.com/desertbit/glue) - Robust Go and Javascript Socket Library (Alternative to Socket.io).\n- [go-eventbus](https://github.com/stanipetrosyan/go-eventbus) - Simple Event Bus package for Go.\n- [Go-MediatR](https://github.com/mehdihadeli/Go-MediatR) - A library for handling mediator patterns and simplified CQRS patterns within an event-driven architecture, inspired by csharp MediatR library.\n- [go-mq](https://github.com/cheshir/go-mq) - RabbitMQ client with declarative configuration.\n- [go-notify](https://github.com/TheCreeper/go-notify) - Native implementation of the freedesktop notification spec.\n- [go-nsq](https://github.com/nsqio/go-nsq) - the official Go package for NSQ.\n- [go-res](https://github.com/jirenius/go-res) - Package for building REST/real-time services where clients are synchronized seamlessly, using NATS and Resgate.\n- [go-socket.io](https://github.com/googollee/go-socket.io) - socket.io library for golang, a realtime application framework.\n- [go-vitotrol](https://github.com/maxatome/go-vitotrol) - Client library to Viessmann Vitotrol web service.\n- [GoEventBus](https://github.com/Raezil/GoEventBus) - A blazing‑fast, in‑memory, lock‑free event bus library\n- [Gollum](https://github.com/trivago/gollum) - A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations.\n- [golongpoll](https://github.com/jcuga/golongpoll) - HTTP longpoll server library that makes web pub-sub simple.\n- [gopush-cluster](https://github.com/Terry-Mao/gopush-cluster) - gopush-cluster is a go push server cluster.\n- [gorush](https://github.com/appleboy/gorush) - Push notification server using [APNs2](https://github.com/sideshow/apns2) and google [GCM](https://github.com/google/go-gcm).\n- [gosd](https://github.com/alexsniffin/gosd) - A library for scheduling when to dispatch a message to a channel.\n- [guble](https://github.com/smancke/guble) - Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence.\n- [hare](https://github.com/leozz37/hare) - A user friendly library for sending messages and listening to TCP sockets.\n- [hub](https://github.com/leandro-lugaresi/hub) - A Message/Event Hub for Go applications, using publish/subscribe pattern with support for alias like rabbitMQ exchanges.\n- [hypermatch](https://github.com/SchwarzIT/hypermatch) - A very fast and efficient Go library for matching events to a large set of rules\n- [jazz](https://github.com/socifi/jazz) - A simple RabbitMQ abstraction layer for queue administration and publishing and consuming of messages.\n- [machinery](https://github.com/RichardKnop/machinery) - Asynchronous task queue/job queue based on distributed message passing.\n- [mangos](https://github.com/nanomsg/mangos) - Pure go implementation of the Nanomsg (\"Scalability Protocols\") with transport interoperability.\n- [melody](https://github.com/olahol/melody) - Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping/pong handling.\n- [Mercure](https://github.com/dunglas/mercure) - Server and library to dispatch server-sent updates using the Mercure protocol (built on top of Server-Sent Events).\n- [messagebus](https://github.com/vardius/message-bus) - messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD.\n- [NATS Go Client](https://github.com/nats-io/nats.go) - Go client for the NATS\n  messaging system.\n- [nsq-event-bus](https://github.com/rafaeljesus/nsq-event-bus) - A tiny wrapper around NSQ topic and channel.\n- [oplog](https://github.com/dailymotion/oplog) - Generic oplog/replication system for REST APIs.\n- [pubsub](https://github.com/tuxychandru/pubsub) - Simple pubsub package for go.\n- [Quamina](https://github.com/timbray/quamina) - Fast pattern-matching for filtering messages and events.\n- [rabbitroutine](https://github.com/furdarius/rabbitroutine) - Lightweight library that handles RabbitMQ auto-reconnect and publishing retries. The library takes into account the need to re-declare entities in RabbitMQ after reconnection.\n- [rabbus](https://github.com/rafaeljesus/rabbus) - A tiny wrapper over amqp exchanges and queues.\n- [rabtap](https://github.com/jandelgado/rabtap) - RabbitMQ swiss army knife cli app.\n- [RapidMQ](https://github.com/sybrexsys/RapidMQ) - RapidMQ is a lightweight and reliable library for managing of the local messages queue.\n- [Ratus](https://github.com/hyperonym/ratus) - Ratus is a RESTful asynchronous task queue server.\n- [redisqueue](https://github.com/robinjoseph08/redisqueue) - redisqueue provides a producer and consumer of a queue that uses Redis streams.\n- [rmqconn](https://github.com/sbabiv/rmqconn) - RabbitMQ Reconnection. Wrapper over amqp.Connection and amqp.Dial. Allowing to do a reconnection when the connection is broken before forcing the call to the Close () method to be closed.\n- [sarama](https://github.com/Shopify/sarama) - Go library for Apache Kafka.\n- [Uniqush-Push](https://github.com/uniqush/uniqush-push) - Redis backed unified push service for server-side notifications to mobile devices.\n- [Watermill](https://github.com/ThreeDotsLabs/watermill) - Working efficiently with message streams. Building event driven applications, enabling event sourcing, RPC over messages, sagas. Can use conventional pub/sub implementations like Kafka or RabbitMQ, but also HTTP or MySQL binlog.\n- [zmq4](https://github.com/pebbe/zmq4) - Go interface to ZeroMQ version 4. Also available for [version 3](https://github.com/pebbe/zmq3) and [version 2](https://github.com/pebbe/zmq2).\n\n**[⬆ back to top](#contents)**\n\n## Microsoft Office\n\n- [unioffice](https://github.com/unidoc/unioffice) - Pure go library for creating and processing Office Word (.docx), Excel (.xlsx) and Powerpoint (.pptx) documents.\n\n### Microsoft Excel\n\n_Libraries for working with Microsoft Excel._\n\n- [excelize](https://github.com/xuri/excelize) - Golang library for reading and writing Microsoft Excel&trade; (XLSX) files.\n- [exl](https://github.com/go-the-way/exl) - Excel binding to struct written in Go.(Only supports Go1.18+)\n- [go-excel](https://github.com/szyhf/go-excel) - A simple and light reader to read a relate-db-like excel as a table.\n- [goxlsxwriter](https://github.com/fterrag/goxlsxwriter) - Golang bindings for libxlsxwriter for writing XLSX (Microsoft Excel) files.\n- [xlsx](https://github.com/tealeg/xlsx) - Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs.\n- [xlsx](https://github.com/plandem/xlsx) - Fast and safe way to read/update your existing Microsoft Excel files in Go programs.\n\n### Microsoft Word\n\n_Libraries for working with Microsoft Word._\n\n- [godocx](https://github.com/gomutex/godocx) - Library for reading and writing Microsoft Word (Docx) files.\n\n**[⬆ back to top](#contents)**\n\n## Miscellaneous\n\n### Dependency Injection\n\n_Libraries for working with dependency injection._\n\n- [alice](https://github.com/magic003/alice) - Additive dependency injection container for Golang.\n- [autowire](https://github.com/tiendc/autowire) - Dependency injection using Generics and reflection.\n- [boot-go](http://github.com/boot-go/boot) - Component-based development with dependency injection using reflections for Go developers.\n- [componego](https://github.com/componego/componego) - A dependency injection framework based on components, allowing dynamic dependency replacement without duplicating code in tests.\n- [cosban/di](https://gitlab.com/cosban/di) - A code generation based dependency injection wiring tool.\n- [di](https://github.com/goava/di) - A dependency injection container for go programming language.\n- [dig](https://github.com/uber-go/dig) - A reflection based dependency injection toolkit for Go.\n- [dingo](https://github.com/i-love-flamingo/dingo) - A dependency injection toolkit for Go, based on Guice.\n- [do](https://github.com/samber/do) - A dependency injection framework based on Generics.\n- [fx](https://github.com/uber-go/fx) - A dependency injection based application framework for Go (built on top of dig).\n- [gocontainer](https://github.com/vardius/gocontainer) - Simple Dependency Injection Container.\n- [goioc/di](https://github.com/goioc/di) - Spring-inspired Dependency Injection Container.\n- [GoLobby/Container](https://github.com/golobby/container) - GoLobby Container is a lightweight yet powerful IoC dependency injection container for the Go programming language.\n- [gontainer](https://github.com/NVIDIA/gontainer) - A dependency injection service container for Go projects.\n- [gontainer/gontainer](https://github.com/gontainer/gontainer) - A YAML-based Dependency Injection container for GO. It supports dependencies' scopes, and auto-detection of circular dependencies. Gontainer is concurrent-safe.\n- [HnH/di](https://github.com/HnH/di) - DI container library that is focused on clean API and flexibility.\n- [kinit](https://github.com/go-kata/kinit) - Customizable dependency injection container with the global mode, cascade initialization and panic-safe finalization.\n- [kod](https://github.com/go-kod/kod) - A generics based dependency injection framework for Go.\n- [linker](https://github.com/logrange/linker) - A reflection based dependency injection and inversion of control library with components lifecycle support.\n- [nject](https://github.com/muir/nject) - A type safe, reflective framework for libraries, tests, http endpoints, and service startup.\n- [ore](https://github.com/firasdarwish/ore) - Lightweight, generic & simple dependency injection (DI) container.\n- [wire](https://github.com/Fs02/wire) - Strict Runtime Dependency Injection for Golang.\n\n**[⬆ back to top](#contents)**\n\n### Project Layout\n\n_**Unofficial** set of patterns for structuring projects._\n\n- [ardanlabs/service](https://github.com/ardanlabs/service) - A [starter kit](https://github.com/ardanlabs/service/wiki) for building production grade scalable web service applications.\n- [cookiecutter-golang](https://github.com/lacion/cookiecutter-golang) - A Go application boilerplate template for quick starting projects following production best practices.\n- [go-blueprint](https://github.com/Melkeydev/go-blueprint) - Allows users to spin up a quick Go project using a popular framework.\n- [go-module](https://github.com/octomation/go-module) - Template for a typical module written on Go.\n- [go-sample](https://github.com/zitryss/go-sample) - A sample layout for Go application projects with the real code.\n- [go-starter](https://github.com/allaboutapps/go-starter) - An opinionated production-ready RESTful JSON backend template, highly integrated with VSCode DevContainers.\n- [go-todo-backend](https://github.com/Fs02/go-todo-backend) - Go Todo Backend example using modular project layout for product microservice.\n- [goapp](https://github.com/naughtygopher/goapp) - An opinionated guideline to structure & develop a Go web application/service.\n- [gobase](https://github.com/wajox/gobase) - A simple skeleton for golang application with basic setup for real golang application.\n- [golang-standards/project-layout](https://github.com/golang-standards/project-layout) - Set of common historical and emerging project layout patterns in the Go ecosystem. Note: despite the org-name they do not represent official golang standards, see [this issue](https://github.com/golang-standards/project-layout/issues/117) for more information. Nonetheless, some may find the layout useful.\n- [golang-templates/seed](https://github.com/golang-templates/seed) - Go application GitHub repository template.\n- [goxygen](https://github.com/shpota/goxygen) - Generate a modern Web project with Go and Angular, React, or Vue in seconds.\n- [insidieux/inizio](https://github.com/insidieux/inizio) - Golang project layout generator with plugins.\n- [kickstart.go](https://github.com/raeperd/kickstart.go) - Minimalistic single-file Go HTTP server template without third-party dependencies.\n- [modern-go-application](https://github.com/sagikazarmark/modern-go-application) - Go application boilerplate and example applying modern practices.\n- [nunu](https://github.com/go-nunu/nunu) - Nunu is a scaffolding tool for building Go applications.\n- [pagoda](https://github.com/mikestefanello/pagoda) - Rapid, easy full-stack web development starter kit built in Go.\n- [scaffold](https://github.com/catchplay/scaffold) - Scaffold generates a starter Go project layout. Lets you focus on business logic implemented.\n- [wangyoucao577/go-project-layout](https://github.com/wangyoucao577/go-project-layout) - Set of practices and discussions on how to structure Go project layout.\n\n**[⬆ back to top](#contents)**\n\n### Strings\n\n_Libraries for working with strings._\n\n- [bexp](https://github.com/happy-sdk/happy/tree/main/pkg/strings/bexp) - Go implementation of Brace Expansion mechanism to generate arbitrary strings.\n- [caps](https://github.com/chanced/caps) - A case conversion library.\n- [go-formatter](https://gitlab.com/tymonx/go-formatter) - Implements **replacement fields** surrounded by curly braces `{}` format strings.\n- [gobeam/Stringy](https://github.com/gobeam/Stringy) - String manipulation library to convert string to camel case, snake case, kebab case / slugify etc.\n- [strcase](https://github.com/charlievieth/strcase) - Case-insensitive implementation of the standard library's strings/bytes packages.\n- [strutil](https://github.com/ozgio/strutil) - String utilities.\n- [sttr](https://github.com/abhimanyu003/sttr) - cross-platform, cli app to perform various operations on string.\n- [xstrings](https://github.com/huandu/xstrings) - Collection of useful string functions ported from other languages.\n\n**[⬆ back to top](#contents)**\n\n### Uncategorized\n\n_These libraries were placed here because none of the other categories seemed to fit._\n\n- [anagent](https://github.com/mudler/anagent) - Minimalistic, pluggable Golang evloop/timer handler with dependency-injection.\n- [antch](https://github.com/antchfx/antch) - A fast, powerful and extensible web crawling & scraping framework.\n- [archives](https://github.com/mholt/archives) - a cross-platform, multi-format Go library for working with archives and compression formats with a unified API and as virtual file systems compatible with io/fs.\n- [autoflags](https://github.com/artyom/autoflags) - Go package to automatically define command line flags from struct fields.\n- [avgRating](https://github.com/kirillDanshin/avgRating) - Calculate average score and rating based on Wilson Score Equation.\n- [banner](https://github.com/dimiro1/banner) - Add beautiful banners into your Go applications.\n- [base64Captcha](https://github.com/mojocn/base64Captcha) - Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha.\n- [basexx](https://github.com/bobg/basexx) - Convert to, from, and between digit strings in various number bases.\n- [battery](https://github.com/distatus/battery) - Cross-platform, normalized battery information library.\n- [bitio](https://github.com/icza/bitio) - Highly optimized bit-level Reader and Writer for Go.\n- [browscap_go](https://github.com/digitalcrab/browscap_go) - GoLang Library for [Browser Capabilities Project](https://browscap.org/).\n- [captcha](https://github.com/steambap/captcha) - Package captcha provides an easy to use, unopinionated API for captcha generation.\n- [common](https://github.com/kubeservice-stack/common) - A library for server framework.\n- [conv](https://github.com/cstockton/go-conv) - Package conv provides fast and intuitive conversions across Go types.\n- [datacounter](https://github.com/miolini/datacounter) - Go counters for readers/writer/http.ResponseWriter.\n- [faker](https://github.com/pioz/faker) - Random fake data and struct generator for Go.\n- [ffmt](https://github.com/go-ffmt/ffmt) - Beautify data display for Humans.\n- [gatus](https://github.com/TwinProduction/gatus) - Automated service health dashboard.\n- [go-commandbus](https://github.com/lana/go-commandbus) - A slight and pluggable command-bus for Go.\n- [go-commons-pool](https://github.com/jolestar/go-commons-pool) - Generic object pool for Golang.\n- [go-openapi](https://github.com/go-openapi) - Collection of packages to parse and utilize open-api schemas.\n- [go-resiliency](https://github.com/eapache/go-resiliency) - Resiliency patterns for golang.\n- [go-unarr](https://github.com/gen2brain/go-unarr) - Decompression library for RAR, TAR, ZIP and 7z archives.\n- [gofakeit](https://github.com/brianvoe/gofakeit) - Random data generator written in go.\n- [gommit](https://github.com/antham/gommit) - Analyze git commit messages to ensure they follow defined patterns.\n- [gopsutil](https://github.com/shirou/gopsutil) - Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc).\n- [gosh](https://github.com/osamingo/gosh) - Provide Go Statistics Handler, Struct, Measure Method.\n- [gosms](https://github.com/haxpax/gosms) - Your own local SMS gateway in Go that can be used to send SMS.\n- [gotoprom](https://github.com/cabify/gotoprom) - Type-safe metrics builder wrapper library for the official Prometheus client.\n- [gountries](https://github.com/pariz/gountries) - Package that exposes country and subdivision data.\n- [gtree](https://github.com/ddddddO/gtree) - Provide CLI, Package and Web for tree output and directories creation from Markdown or programmatically.\n- [health](https://github.com/alexliesenfeld/health) - A simple and flexible health check library for Go.\n- [health](https://github.com/dimiro1/health) - Easy to use, extensible health check library.\n- [healthcheck](https://github.com/etherlabsio/healthcheck) - An opinionated and concurrent health-check HTTP handler for RESTful services.\n- [hostutils](https://github.com/Wing924/hostutils) - A golang library for packing and unpacking FQDNs list.\n- [indigo](https://github.com/osamingo/indigo) - Distributed unique ID generator of using Sonyflake and encoded by Base58.\n- [lk](https://github.com/hyperboloide/lk) - A simple licensing library for golang.\n- [llvm](https://github.com/llir/llvm) - Library for interacting with LLVM IR in pure Go.\n- [metrics](https://github.com/pascaldekloe/metrics) - Library for metrics instrumentation and Prometheus exposition.\n- [morse](https://github.com/alwindoss/morse) - Library to convert to and from morse code.\n- [numa](https://github.com/lrita/numa) - NUMA is a utility library, which is written in go. It help us to write some NUMA-AWARED code.\n- [openapi](https://github.com/neotoolkit/openapi) - OpenAPI 3.x parser.\n- [pdfgen](https://github.com/hyperboloide/pdfgen) - HTTP service to generate PDF from Json requests.\n- [persian](https://github.com/mavihq/persian) - Some utilities for Persian language in go.\n- [sandid](https://github.com/aofei/sandid) - Every grain of sand on earth has its own ID.\n- [shellwords](https://github.com/Wing924/shellwords) - A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell.\n- [shortid](https://github.com/teris-io/shortid) - Distributed generation of super short, unique, non-sequential, URL friendly IDs.\n- [shoutrrr](https://github.com/containrrr/shoutrrr) - Notification library providing easy access to various messaging services like slack, mattermost, gotify and smtp among others.\n- [sitemap-format](https://github.com/mingard/sitemap-format) - A simple sitemap generator, with a little syntactic sugar.\n- [stateless](https://github.com/qmuntal/stateless) - A fluent library for creating state machines.\n- [stats](https://github.com/go-playground/stats) - Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc...\n- [turtle](https://github.com/hackebrot/turtle) - Emojis for Go.\n- [url-shortener](https://github.com/pantrif/url-shortener) - A modern, powerful, and robust URL shortener microservice with mysql support.\n- [VarHandler](https://github.com/azr/generators/tree/master/varhandler) - Generate boilerplate http input and output handling.\n- [varint](https://github.com/chmike/varint) - A faster varying length integer encoder/decoder than the one provided in the standard library.\n- [xdg](https://github.com/rkoesters/xdg) - FreeDesktop.org (xdg) Specs implemented in Go.\n- [xkg](https://github.com/go-xkg/xkg) - X Keyboard Grabber.\n- [xz](https://github.com/ulikunitz/xz) - Pure golang package for reading and writing xz-compressed files.\n\n**[⬆ back to top](#contents)**\n\n## Natural Language Processing\n\n_Libraries for working with human languages._\n\nSee also [Text Processing](#text-processing) and [Text Analysis](#text-analysis).\n\n### Language Detection\n\n- [detectlanguage](https://github.com/detectlanguage/detectlanguage-go) - Language Detection API Go Client. Supports batch requests, short phrase or single word language detection.\n- [getlang](https://github.com/rylans/getlang) - Fast natural language detection package.\n- [guesslanguage](https://github.com/endeveit/guesslanguage) - Functions to determine the natural language of a unicode text.\n- [lingua-go](https://github.com/pemistahl/lingua-go) - An accurate natural language detection library, suitable for long and short text alike. Supports detecting multiple languages in mixed-language text.\n- [whatlanggo](https://github.com/abadojack/whatlanggo) - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).\n\n### Morphological Analyzers\n\n- [go-stem](https://github.com/agonopol/go-stem) - Implementation of the porter stemming algorithm.\n- [go2vec](https://github.com/danieldk/go2vec) - Reader and utility functions for word2vec embeddings.\n- [golibstemmer](https://github.com/rjohnsondev/golibstemmer) - Go bindings for the snowball libstemmer library including porter 2.\n- [gosentiwordnet](https://github.com/dinopuguh/gosentiwordnet) - Sentiment analyzer using sentiwordnet lexicon in Go.\n- [govader](https://github.com/jonreiter/govader) - Go implementation of [VADER Sentiment Analysis](https://github.com/cjhutto/vaderSentiment).\n- [govader-backend](https://github.com/PIMPfiction/govader_backend) - Microservice implementation of [GoVader](https://github.com/jonreiter/govader).\n- [kagome](https://github.com/ikawaha/kagome) - JP morphological analyzer written in pure Go.\n- [libtextcat](https://github.com/goodsign/libtextcat) - Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2.\n- [nlp](https://github.com/Shixzie/nlp) - Extract values from strings and fill your structs with nlp.\n- [nlp](https://github.com/james-bowman/nlp) - Go Natural Language Processing library supporting LSA (Latent Semantic Analysis).\n- [paicehusk](https://github.com/rookii/paicehusk) - Golang implementation of the Paice/Husk Stemming Algorithm.\n- [porter](https://github.com/a2800276/porter) - This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm.\n- [porter2](https://github.com/zhenjl/porter2) - Really fast Porter 2 stemmer.\n- [RAKE.go](https://github.com/afjoseph/RAKE.Go) - Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE).\n- [snowball](https://github.com/goodsign/snowball) - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality [Snowball native](http://snowball.tartarus.org/).\n- [spaGO](https://github.com/nlpodyssey/spago) - Self-contained Machine Learning and Natural Language Processing library in Go.\n- [spelling-corrector](https://github.com/jorelosorio/spellingcorrector) - A spelling corrector for the Spanish language or create your own.\n\n### Slugifiers\n\n- [go-slugify](https://github.com/mozillazg/go-slugify) - Make pretty slug with multiple languages support.\n- [slug](https://github.com/gosimple/slug) - URL-friendly slugify with multiple languages support.\n- [Slugify](https://github.com/avelino/slugify) - Go slugify application that handles string.\n\n### Tokenizers\n\n- [gojieba](https://github.com/yanyiwu/gojieba) - This is a Go implementation of [jieba](https://github.com/fxsjy/jieba) which a Chinese word splitting algorithm.\n- [gotokenizer](https://github.com/xujiajun/gotokenizer) - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)\n- [gse](https://github.com/go-ego/gse) - Go efficient text segmentation; support english, chinese, japanese and other.\n- [MMSEGO](https://github.com/awsong/MMSEGO) - This is a GO implementation of [MMSEG](http://technology.chtsai.org/mmseg/) which a Chinese word splitting algorithm.\n- [prose](https://github.com/jdkato/prose) - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more. English only.\n- [segment](https://github.com/blevesearch/segment) - Go library for performing Unicode Text Segmentation as described in [Unicode Standard Annex #29](https://www.unicode.org/reports/tr29/)\n- [sentences](https://github.com/neurosnap/sentences) - Sentence tokenizer: converts text into a list of sentences.\n- [shamoji](https://github.com/osamingo/shamoji) - The shamoji is word filtering package written in Go.\n- [stemmer](https://github.com/dchest/stemmer) - Stemmer packages for Go programming language. Includes English and German stemmers.\n- [textcat](https://github.com/pebbe/textcat) - Go package for n-gram based text categorization, with support for utf-8 and raw text.\n\n### Translation\n\n- [ctxi18n](https://github.com/invopop/ctxi18n/) - Context aware i18n with a short and consise API, pluralization, interpolation, and `fs.FS` support. YAML locale definitions are based on [Rails i18n](https://guides.rubyonrails.org/i18n.html).\n- [go-i18n](https://github.com/nicksnyder/go-i18n/) - Package and an accompanying tool to work with localized text.\n- [go-mystem](https://github.com/dveselov/mystem) - CGo bindings to Yandex.Mystem - russian morphology analyzer.\n- [go-pinyin](https://github.com/mozillazg/go-pinyin) - CN Hanzi to Hanyu Pinyin converter.\n- [go-words](https://github.com/saleh-rahimzadeh/go-words) - A words table and text resource library for Golang projects.\n- [gotext](https://github.com/leonelquinteros/gotext) - GNU gettext utilities for Go.\n- [iuliia-go](https://github.com/mehanizm/iuliia-go) - Transliterate Cyrillic → Latin in every possible way.\n- [spreak](https://github.com/vorlif/spreak) - Flexible translation and humanization library for Go, based on the concepts behind gettext.\n- [t](https://github.com/youthlin/t) - Another i18n pkg for golang, which follows GNU gettext style and supports .po/.mo files: `t.T (gettext)`, `t.N (ngettext)`, etc. And it contains a cmd tool [xtemplate](https://github.com/youthlin/t/blob/main/cmd/xtemplate), which can extract messages as a pot file from text/html template.\n\n### Transliteration\n\n- [enca](https://github.com/endeveit/enca) - Minimal cgo bindings for [libenca](https://cihar.com/software/enca/), which detects character encodings.\n- [go-unidecode](https://github.com/mozillazg/go-unidecode) - ASCII transliterations of Unicode text.\n- [gounidecode](https://github.com/fiam/gounidecode) - Unicode transliterator (also known as unidecode) for Go.\n- [transliterator](https://github.com/alexsergivan/transliterator) - Provides one-way string transliteration with supporting of language-specific transliteration rules.\n\n**[⬆ back to top](#contents)**\n\n## Networking\n\n_Libraries for working with various layers of the network._\n\n- [arp](https://github.com/mdlayher/arp) - Package arp implements the ARP protocol, as described in RFC 826.\n- [bart](https://github.com/gaissmai/bart) - Package bart provides a Balanced-Routing-Table (BART) for very fast IP to CIDR lookups and more.\n- [buffstreams](https://github.com/stabbycutyou/buffstreams) - Streaming protocolbuffer data over TCP made easy.\n- [canopus](https://github.com/zubairhamed/canopus) - CoAP Client/Server implementation (RFC 7252).\n- [cidranger](https://github.com/yl2chen/cidranger) - Fast IP to CIDR lookup for Go.\n- [cloudflared](https://github.com/cloudflare/cloudflared) - Cloudflare Tunnel client (formerly Argo Tunnel).\n- [dhcp6](https://github.com/mdlayher/dhcp6) - Package dhcp6 implements a DHCPv6 server, as described in RFC 3315.\n- [dns](https://github.com/miekg/dns) - Go library for working with DNS.\n- [dnsmonster](https://github.com/mosajjal/dnsmonster) - Passive DNS Capture/Monitoring Framework.\n- [easytcp](https://github.com/DarthPestilane/easytcp) - A light-weight TCP framework written in Go (Golang), built with message router. EasyTCP helps you build a TCP server easily fast and less painful.\n- [ether](https://github.com/songgao/ether) - Cross-platform Go package for sending and receiving ethernet frames.\n- [ethernet](https://github.com/mdlayher/ethernet) - Package ethernet implements marshaling and unmarshalling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags.\n- [event](https://github.com/cheng-zhongliang/event) - Simple I/O event notification library written in Golang.\n- [fasthttp](https://github.com/valyala/fasthttp) - Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net/http.\n- [fortio](https://github.com/fortio/fortio) - Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC.\n- [ftp](https://github.com/jlaffaye/ftp) - Package ftp implements a FTP client as described in [RFC 959](https://tools.ietf.org/html/rfc959).\n- [ftpserverlib](https://github.com/fclairamb/ftpserverlib) - Fully featured FTP server library.\n- [fullproxy](https://github.com/shoriwe/fullproxy) - A fully featured scriptable and daemon configurable proxy and pivoting toolkit with SOCKS5, HTTP, raw ports and reverse proxy protocols.\n- [fwdctl](https://github.com/alegrey91/fwdctl) - A simple and intuitive CLI to manage IPTables forwards in your Linux server.\n- [gaio](https://github.com/xtaci/gaio) - High performance async-io networking for Golang in proactor mode.\n- [gev](https://github.com/Allenxuxu/gev) - gev is a lightweight, fast non-blocking TCP network library based on Reactor mode.\n- [gldap](https://github.com/jimlambrt/gldap) - gldap provides an ldap server implementation and you provide handlers for its ldap operations.\n- [gmqtt](https://github.com/DrmagicE/gmqtt) - Gmqtt is a flexible, high-performance MQTT broker library that fully implements the MQTT protocol V3.1.1.\n- [gnet](https://github.com/panjf2000/gnet) - `gnet` is a high-performance, lightweight, non-blocking, event-driven networking framework written in pure Go.\n- [gnet](https://github.com/fish-tennis/gnet) - `gnet` is a high-performance networking framework,especially for game servers.\n- [gNxI](https://github.com/google/gnxi) - A collection of tools for Network Management that use the gNMI and gNOI protocols.\n- [go-getter](https://github.com/hashicorp/go-getter) - Go library for downloading files or directories from various sources using a URL.\n- [go-multiproxy](https://github.com/presbrey/go-multiproxy) - Library for making HTTP requests through a pool of proxies offering fault tolerance, load balancing, automatic retries, cookie management, and more, via http.Get/Post replacement or http.Client RoundTripper drop-in\n- [go-powerdns](https://github.com/joeig/go-powerdns) - PowerDNS API bindings for Golang.\n- [go-sse](https://github.com/lampctl/go-sse) - Go client and server implementation of HTML server-sent events.\n- [go-stun](https://github.com/ccding/go-stun) - Go implementation of the STUN client (RFC 3489 and RFC 5389).\n- [gobgp](https://github.com/osrg/gobgp) - BGP implemented in the Go Programming Language.\n- [gopacket](https://github.com/google/gopacket) - Go library for packet processing with libpcap bindings.\n- [gopcap](https://github.com/akrennmair/gopcap) - Go wrapper for libpcap.\n- [GoProxy](https://github.com/elazarl/goproxy) - A library to create a customized HTTP/HTTPS proxy server using Go.\n- [goshark](https://github.com/sunwxg/goshark) - Package goshark use tshark to decode IP packet and create data struct to analyse packet.\n- [gosnmp](https://github.com/soniah/gosnmp) - Native Go library for performing SNMP actions.\n- [gotcp](https://github.com/gansidui/gotcp) - Go package for quickly writing tcp applications.\n- [grab](https://github.com/cavaliercoder/grab) - Go package for managing file downloads.\n- [graval](https://github.com/koofr/graval) - Experimental FTP server framework.\n- [gws](https://github.com/lxzan/gws) - High-Performance WebSocket Server & Client With AsyncIO Supporting .\n- [HTTPLab](https://github.com/gchaincl/httplab) - HTTPLabs let you inspect HTTP requests and forge responses.\n- [httpproxy](https://github.com/wzshiming/httpproxy) - HTTP proxy handler and dialer.\n- [iplib](https://github.com/c-robinson/iplib) - Library for working with IP addresses (net.IP, net.IPNet), inspired by python [ipaddress](https://docs.python.org/3/library/ipaddress.html) and ruby [ipaddr](https://ruby-doc.org/stdlib-2.5.1/libdoc/ipaddr/rdoc/IPAddr.html)\n- [jazigo](https://github.com/udhos/jazigo) - Jazigo is a tool written in Go for retrieving configuration for multiple network devices.\n- [kcp-go](https://github.com/xtaci/kcp-go) - KCP - Fast and Reliable ARQ Protocol.\n- [kcptun](https://github.com/xtaci/kcptun) - Extremely simple & fast udp tunnel based on KCP protocol.\n- [lhttp](https://github.com/fanux/lhttp) - Powerful websocket framework, build your IM server more easily.\n- [linkio](https://github.com/ian-kent/linkio) - Network link speed simulation for Reader/Writer interfaces.\n- [llb](https://github.com/kirillDanshin/llb) - It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response.\n- [mdns](https://github.com/hashicorp/mdns) - Simple mDNS (Multicast DNS) client/server library in Golang.\n- [mqttPaho](https://eclipse.org/paho/clients/golang/) - The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets.\n- [natiu-mqtt](https://github.com/soypat/natiu-mqtt) - A dead-simple, non-allocating, low level implementation of MQTT well suited for embedded systems.\n- [nbio](https://github.com/lesismal/nbio) - Pure Go 1000k+ connections solution, support tls/http1.x/websocket and basically compatible with net/http, with high-performance and low memory cost, non-blocking, event-driven, easy-to-use.\n- [net](https://golang.org/x/net) - This repository holds supplementary Go networking libraries.\n- [netpoll](https://github.com/cloudwego/netpoll) - A high-performance non-blocking I/O networking framework, which focused on RPC scenarios, developed by ByteDance.\n- [NFF-Go](https://github.com/intel-go/nff-go) - Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF).\n- [nodepass](https://github.com/yosebyte/nodepass) - A secure, efficient TCP/UDP tunneling solution that delivers fast, reliable access across network restrictions using pre-established TLS/TCP connections.\n- [peerdiscovery](https://github.com/schollz/peerdiscovery) - Pure Go library for cross-platform local peer discovery using UDP multicast.\n- [portproxy](https://github.com/aybabtme/portproxy) - Simple TCP proxy which adds CORS support to API's which don't support it.\n- [psql-wire](https://github.com/jeroenrinzema/psql-wire) - PostgreSQL server wire protocol. Build your own server and start serving connections..\n- [publicip](https://github.com/polera/publicip) - Package publicip returns your public facing IPv4 address (internet egress).\n- [quic-go](https://github.com/lucas-clemente/quic-go) - An implementation of the QUIC protocol in pure Go.\n- [raw](https://github.com/mdlayher/raw) - Package raw enables reading and writing data at the device driver level for a network interface.\n- [sdns](https://github.com/semihalev/sdns) - A high-performance, recursive DNS resolver server with DNSSEC support, focused on preserving privacy.\n- [sftp](https://github.com/pkg/sftp) - Package sftp implements the SSH File Transfer Protocol as described in <https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt>.\n- [ssh](https://github.com/gliderlabs/ssh) - Higher-level API for building SSH servers (wraps crypto/ssh).\n- [sslb](https://github.com/eduardonunesp/sslb) - It's a Super Simples Load Balancer, just a little project to achieve some kind of performance.\n- [stun](https://github.com/go-rtc/stun) - Go implementation of RFC 5389 STUN protocol.\n- [tcpack](https://github.com/lim-yoona/tcpack) - tcpack is an application protocol based on TCP to Pack and Unpack bytes stream in go program.\n- [tspool](https://github.com/two/tspool) - A TCP Library use worker pool to improve performance and protect your server.\n- [tun2socks](https://github.com/xjasonlyu/tun2socks) - A pure go implementation of tun2socks powered by [gVisor](https://gvisor.dev/) TCP/IP stack.\n- [utp](https://github.com/anacrolix/utp) - Go uTP micro transport protocol implementation.\n- [vssh](https://github.com/yahoo/vssh) - Go library for building network and server automation over SSH protocol.\n- [water](https://github.com/songgao/water) - Simple TUN/TAP library.\n- [webrtc](https://github.com/pions/webrtc) - A pure Go implementation of the WebRTC API.\n- [winrm](https://github.com/masterzen/winrm) - Go WinRM client to remotely execute commands on Windows machines.\n- [xtcp](https://github.com/xfxdev/xtcp) - TCP Server Framework with simultaneous full duplex communication, graceful shutdown, and custom protocol.\n\n**[⬆ back to top](#contents)**\n\n### HTTP Clients\n\n_Libraries for making HTTP requests._\n\n- [axios4go](https://github.com/rezmoss/axios4go) - A Go HTTP client library inspired by Axios, providing a simple and intuitive API for making HTTP requests.\n- [azuretls-client](https://github.com/Noooste/azuretls-client) - An easy-to-use HTTP client 100% in Go to spoof TLS/JA3 and HTTP2 fingerprint.\n- [fast-shot](https://github.com/opus-domini/fast-shot) - Hit your API targets with rapid-fire precision using Go's fastest and simple HTTP Client.\n- [gentleman](https://github.com/h2non/gentleman) - Full-featured plugin-driven HTTP client library.\n- [go-cleanhttp](https://github.com/hashicorp/go-cleanhttp) - Get easily stdlib HTTP client, which does not share any state with other clients.\n- [go-http-client](https://github.com/bozd4g/go-http-client) - Make http calls simply and easily.\n- [go-ipmux](https://github.com/optimus-hft/go-ipmux) - A library for Multiplexing HTTP requests based on multiple Source IPs.\n- [go-otelroundtripper](https://github.com/NdoleStudio/go-otelroundtripper) - Go http.RoundTripper that emits open telemetry metrics for HTTP requests.\n- [go-req](https://github.com/wenerme/go-req) - Declarative golang HTTP client.\n- [go-retryablehttp](https://github.com/hashicorp/go-retryablehttp) - Retryable HTTP client in Go.\n- [go-zoox/fetch](https://github.com/go-zoox/fetch) - A Powerful, Lightweight, Easy Http Client, inspired by Web Fetch API.\n- [grequests](https://github.com/levigross/grequests) - A Go \"clone\" of the great and famous Requests library.\n- [heimdall](https://github.com/gojektech/heimdall) - An enhanced http client with retry and hystrix capabilities.\n- [httpretry](https://github.com/ybbus/httpretry) - Enriches the default go HTTP client with retry functionality.\n- [pester](https://github.com/sethgrid/pester) - Go HTTP client calls with retries, backoff, and concurrency.\n- [req](https://github.com/imroc/req) - Simple Go HTTP client with Black Magic (Less code and More efficiency).\n- [request](https://github.com/monaco-io/request) - HTTP client for golang. If you have experience about axios or requests, you will love it. No 3rd dependency.\n- [requests](https://github.com/carlmjohnson/requests) - HTTP requests for Gophers. Uses context.Context and doesn't hide the underlying net/http.Client, making it compatible with standard Go APIs. Also includes testing tools.\n- [resty](https://github.com/go-resty/resty) - Simple HTTP and REST client for Go inspired by Ruby rest-client.\n- [rq](https://github.com/ddo/rq) - A nicer interface for golang stdlib HTTP client.\n- [sling](https://github.com/dghubble/sling) - Sling is a Go HTTP client library for creating and sending API requests.\n- [tls-client](https://github.com/bogdanfinn/tls-client) - net/http.Client like HTTP Client with options to select specific client TLS Fingerprints to use for requests.\n\n**[⬆ back to top](#contents)**\n\n## OpenGL\n\n_Libraries for using OpenGL in Go._\n\n- [gl](https://github.com/go-gl/gl) - Go bindings for OpenGL (generated via glow).\n- [glfw](https://github.com/go-gl/glfw) - Go bindings for GLFW 3.\n- [go-glmatrix](https://github.com/technohippy/go-glmatrix) - Go port of [glMatrix](https://glmatrix.net/) library.\n- [goxjs/gl](https://github.com/goxjs/gl) - Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android).\n- [goxjs/glfw](https://github.com/goxjs/glfw) - Go cross-platform glfw library for creating an OpenGL context and receiving events.\n- [mathgl](https://github.com/go-gl/mathgl) - Pure Go math package specialized for 3D math, with inspiration from GLM.\n\n**[⬆ back to top](#contents)**\n\n## ORM\n\n_Libraries that implement Object-Relational Mapping or datamapping techniques._\n\n- [bob](https://github.com/stephenafamo/bob) - SQL query builder and ORM/Factory generator for Go. Successor of SQLBoiler.\n- [bun](https://github.com/uptrace/bun) - SQL-first Golang ORM. Successor of go-pg.\n- [cacheme](https://github.com/Yiling-J/cacheme-go) - Schema based, typed Redis caching/memoize framework for Go.\n- [CQL](https://github.com/FrancoLiberali/cql) - Built on top of GORM, adds compile-time verified queries based on auto-generated code.\n- [ent](https://github.com/facebook/ent) - An entity framework for Go. Simple, yet powerful ORM for modeling and querying data.\n- [go-dbw](https://github.com/hashicorp/go-dbw) - A simple package that encapsulates database operations.\n- [go-firestorm](https://github.com/jschoedt/go-firestorm) - A simple ORM for Google/Firebase Cloud Firestore.\n- [go-sql](https://github.com/rushteam/gosql) - A easy ORM for mysql.\n- [go-sqlbuilder](https://github.com/huandu/go-sqlbuilder) - A flexible and powerful SQL string builder library plus a zero-config ORM.\n- [go-store](https://github.com/gosuri/go-store) - Simple and fast Redis backed key-value store library for Go.\n- [golobby/orm](https://github.com/golobby/orm) - Simple, fast, type-safe, generic orm for developer happiness.\n- [GORM](https://github.com/go-gorm/gorm) - The fantastic ORM library for Golang, aims to be developer friendly.\n- [gormt](https://github.com/xxjwxc/gormt) - Mysql database to golang gorm struct.\n- [gorp](https://github.com/go-gorp/gorp) - Go Relational Persistence, ORM-ish library for Go.\n- [grimoire](https://github.com/Fs02/grimoire) - Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3).\n- [lore](https://github.com/abrahambotros/lore) - Simple and lightweight pseudo-ORM/pseudo-struct-mapping environment for Go.\n- [marlow](https://github.com/marlow/marlow) - Generated ORM from project structs for compile time safety assurances.\n- [pop/soda](https://github.com/gobuffalo/pop) - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\n- [Prisma](https://github.com/prisma/prisma-client-go) - Prisma Client Go, Typesafe database access for Go.\n- [reform](https://github.com/go-reform/reform) - Better ORM for Go, based on non-empty interfaces and code generation.\n- [rel](https://github.com/go-rel/rel) - Modern Database Access Layer for Golang - Testable, Extendable and Crafted Into a Clean and Elegant API.\n- [SQLBoiler](https://github.com/volatiletech/sqlboiler) - ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema.\n- [upper.io/db](https://github.com/upper/db) - Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers.\n- [XORM](https://gitea.com/xorm/xorm) - Simple and powerful ORM for Go. (Support: MySQL, MyMysql, PostgreSQL, Tidb, SQLite3, MsSql and Oracle).\n- [Zoom](https://github.com/albrow/zoom) - Blazing-fast datastore and querying engine built on Redis.\n\n**[⬆ back to top](#contents)**\n\n## Package Management\n\n_Official tooling for dependency and package management_\n\n- [go modules](https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more) - Modules are the unit of source code interchange and versioning. The go command has direct support for working with modules, including recording and resolving dependencies on other modules.\n\n_Unofficial libraries for package and dependency management._\n\n- [gup](https://github.com/nao1215/gup) - Update binaries installed by \"go install\".\n- [modup](https://github.com/chaindead/modup) - Terminal UI for Go dependency updates with outdated module detection and selective upgrading.\n- [mvn-golang](https://github.com/raydac/mvn-golang) - plugin that provides way for auto-loading of Golang SDK, dependency management and start build environment in Maven project infrastructure.\n- [syft](https://github.com/anchore/syft) - A CLI tool and Go library for generating a Software Bill of Materials (SBOM) from container images and filesystems.\n\n**[⬆ back to top](#contents)**\n\n## Performance\n\n- [go-instrument](https://github.com/nikolaydubina/go-instrument) - Automatically add spans to all methods and functions.\n- [jaeger](https://github.com/jaegertracing/jaeger) - A distributed tracing system.\n- [mm-go](https://github.com/joetifa2003/mm-go) - Generic manual memory management for golang.\n- [pixie](https://github.com/pixie-labs/pixie) - No instrumentation tracing for Golang applications via eBPF.\n- [profile](https://github.com/pkg/profile) - Simple profiling support package for Go.\n- [statsviz](https://github.com/arl/statsviz) - Live visualization of your Go application runtime statistics.\n- [tracer](https://github.com/kamilsk/tracer) - Simple, lightweight tracing.\n\n**[⬆ back to top](#contents)**\n\n## Query Language\n\n- [api-fu](https://github.com/ccbrown/api-fu) - Comprehensive GraphQL implementation.\n- [dasel](https://github.com/tomwright/dasel) - Query and update data structures using selectors from the command line. Comparable to jq/yq but supports JSON, YAML, TOML and XML with zero runtime dependencies.\n- [gojsonq](https://github.com/thedevsaddam/gojsonq) - A simple Go package to Query over JSON Data.\n- [goven](https://github.com/SeldonIO/goven) - A drop-in query language for any database schema.\n- [gqlgen](https://github.com/99designs/gqlgen) - go generate based graphql server library.\n- [grapher](https://github.com/reaganiwadha/grapher) - A GraphQL field builder utilizing Go generics with extra utilities and features.\n- [graphql](https://github.com/tmc/graphql) - graphql parser + utilities.\n- [graphql](https://github.com/neelance/graphql-go) - GraphQL server with a focus on ease of use.\n- [graphql-go](https://github.com/graphql-go/graphql) - Implementation of GraphQL for Go.\n- [gws](https://github.com/Zaba505/gws) - Apollos' \"GraphQL over Websocket\" client and server implementation.\n- [jsonpath](https://github.com/AsaiYusuke/jsonpath) - A query library for retrieving part of JSON based on JSONPath syntax.\n- [jsonql](https://github.com/elgs/jsonql) - JSON query expression library in Golang.\n- [jsonslice](https://github.com/bhmj/jsonslice) - Jsonpath queries with advanced filters.\n- [mql](https://github.com/hashicorp/mql) - Model Query Language (mql) is a query language for your database models.\n- [rql](https://github.com/a8m/rql) - Resource Query Language for REST API.\n- [rqp](https://github.com/timsolov/rest-query-parser) - Query Parser for REST API. Filtering, validations, both `AND`, `OR` operations are supported directly in the query.\n- [straf](https://github.com/SonicRoshan/straf) - Easily Convert Golang structs to GraphQL objects.\n\n**[⬆ back to top](#contents)**\n\n## Reflection\n\n- [copy](https://github.com/gotidy/copy) - Package for fast copying structs of different types.\n- [Deepcopier](https://github.com/ulule/deepcopier) - Simple struct copying for Go.\n- [go-deepcopy](https://github.com/tiendc/go-deepcopy) - Fast deep copy library.\n- [goenum](https://github.com/lvyahui8/goenum) - A common enumeration struct based on generics and reflection that allows you to quickly define enumerations and use a set of useful default methods.\n- [gotype](https://github.com/wzshiming/gotype) - Golang source code parsing, usage like reflect package.\n- [gpath](https://github.com/tenntenn/gpath) - Library to simplify access struct fields with Go's expression in reflection.\n- [objwalker](https://github.com/rekby/objwalker) - Walk by go objects with reflection.\n- [reflectpro](https://github.com/gontainer/reflectpro) - Callers, copiers, getters and setters for go.\n- [reflectutils](https://github.com/muir/reflectutils) - Helpers for working with reflection: struct tag parsing; recursive walking; fill value from string.\n\n**[⬆ back to top](#contents)**\n\n## Resource Embedding\n\n- [debme](https://github.com/leaanthony/debme) - Create an `embed.FS` from an existing `embed.FS` subdirectory.\n- [embed](https://pkg.go.dev/embed) - Package embed provides access to files embedded in the running Go program.\n- [rebed](https://github.com/soypat/rebed) - Recreate folder structures and files from Go 1.16's `embed.FS` type\n- [vfsgen](https://github.com/shurcooL/vfsgen) - Generates a vfsdata.go file that statically implements the given virtual filesystem.\n\n**[⬆ back to top](#contents)**\n\n## Science and Data Analysis\n\n_Libraries for scientific computing and data analyzing._\n\n- [assocentity](https://github.com/ndabAP/assocentity) - Package assocentity returns the average distance from words to a given entity.\n- [bradleyterry](https://github.com/seanhagen/bradleyterry) - Provides a Bradley-Terry Model for pairwise comparisons.\n- [calendarheatmap](https://github.com/nikolaydubina/calendarheatmap) - Calendar heatmap in plain Go inspired by Github contribution activity.\n- [chart](https://github.com/vdobler/chart) - Simple Chart Plotting library for Go. Supports many graphs types.\n- [dataframe-go](https://github.com/rocketlaunchr/dataframe-go) - Dataframes for machine-learning and statistics (similar to pandas).\n- [decimal](https://github.com/db47h/decimal) - Package decimal implements arbitrary-precision decimal floating-point arithmetic.\n- [evaler](https://github.com/soniah/evaler) - Simple floating point arithmetic expression evaluator.\n- [ewma](https://github.com/VividCortex/ewma) - Exponentially-weighted moving averages.\n- [geom](https://github.com/skelterjohn/geom) - 2D geometry for golang.\n- [go-dsp](https://github.com/mjibson/go-dsp) - Digital Signal Processing for Go.\n- [go-estimate](https://github.com/milosgajdos/go-estimate) - State estimation and filtering algorithms in Go.\n- [go-gt](https://github.com/ThePaw/go-gt) - Graph theory algorithms written in \"Go\" language.\n- [go-hep](https://github.com/go-hep/hep) - A set of libraries and tools for performing High Energy Physics analyses with ease.\n- [godesim](https://github.com/soypat/godesim) - Extended/multivariable ODE solver framework for event-based simulations with simple API.\n- [goent](https://github.com/kzahedi/goent) - GO Implementation of Entropy Measures.\n- [gograph](https://github.com/hmdsefi/gograph) - A golang generic graph library that provides mathematical graph-theory and algorithms.\n- [gonum](https://github.com/gonum/gonum) - Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more.\n- [gonum/plot](https://github.com/gonum/plot) - gonum/plot provides an API for building and drawing plots in Go.\n- [goraph](https://github.com/gyuho/goraph) - Pure Go graph theory library(data structure, algorithm visualization).\n- [gosl](https://github.com/cpmech/gosl) - Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more.\n- [GoStats](https://github.com/OGFris/GoStats) - GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions.\n- [graph](https://github.com/yourbasic/graph) - Library of basic graph algorithms.\n- [jsonl-graph](https://github.com/nikolaydubina/jsonl-graph) - Tool to manipulate JSONL graphs with graphviz support.\n- [ode](https://github.com/ChristopherRabotin/ode) - Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions.\n- [orb](https://github.com/paulmach/orb) - 2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support.\n- [pagerank](https://github.com/alixaxel/pagerank) - Weighted PageRank algorithm implemented in Go.\n- [piecewiselinear](https://github.com/sgreben/piecewiselinear) - Tiny linear interpolation library.\n- [PiHex](https://github.com/claygod/PiHex) - Implementation of the \"Bailey-Borwein-Plouffe\" algorithm for the hexadecimal number Pi.\n- [Poly](https://github.com/bebop/poly) - A Go package for engineering organisms.\n- [rootfinding](https://github.com/khezen/rootfinding) - root-finding algorithms library for finding roots of quadratic functions.\n- [sparse](https://github.com/james-bowman/sparse) - Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries.\n- [stats](https://github.com/montanaflynn/stats) - Statistics package with common functions missing from the Golang standard library.\n- [streamtools](https://github.com/nytlabs/streamtools) - general purpose, graphical tool for dealing with streams of data.\n- [TextRank](https://github.com/DavidBelicza/TextRank) - TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support.\n- [topk](https://github.com/keilerkonzept/topk) - Sliding-window and regular top-K sketches, based on the HeavyKeeper algorithm.\n- [triangolatte](https://github.com/tchayen/triangolatte) - 2D triangulation library. Allows translating lines and polygons (both based on points) to the language of GPUs.\n\n**[⬆ back to top](#contents)**\n\n## Security\n\n_Libraries that are used to help make your application more secure._\n\n- [acmetool](https://github.com/hlandau/acme) - ACME (Let's Encrypt) client tool with automatic renewal.\n- [acopw-go](https://sr.ht/~jamesponddotco/acopw-go/) - Small cryptographically secure password generator package for Go.\n- [acra](https://github.com/cossacklabs/acra) - Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system.\n- [age](https://github.com/FiloSottile/age) - A simple, modern and secure encryption tool (and Go library) with small explicit keys, no config options, and UNIX-style composability.\n- [argon2-hashing](https://github.com/andskur/argon2-hashing) - light wrapper around Go's argon2 package that closely mirrors with Go's standard library Bcrypt and simple-scrypt package.\n- [argon2pw](https://github.com/raja/argon2pw) - Argon2 password hash generation with constant-time password comparison.\n- [autocert](https://pkg.go.dev/golang.org/x/crypto/acme/autocert) - Auto provision Let's Encrypt certificates and start a TLS server.\n- [BadActor](https://github.com/jaredfolkins/badactor) - In-memory, application-driven jailer built in the spirit of fail2ban.\n- [beelzebub](https://github.com/mariocandela/beelzebub) - A secure low code honeypot framework, leveraging AI for System Virtualization.\n- [booster](https://github.com/anatol/booster) - Fast initramfs generator with full-disk encryption support.\n- [Cameradar](https://github.com/Ullaakut/cameradar) - Tool and library to remotely hack RTSP streams from surveillance cameras.\n- [certificates](https://github.com/mvmaasakkers/certificates) - An opinionated tool for generating tls certificates.\n- [CertMagic](https://github.com/caddyserver/certmagic) - Mature, robust, and powerful ACME client integration for fully-managed TLS certificate issuance and renewal.\n- [Coraza](https://github.com/corazawaf/coraza) - Enterprise-ready, modsecurity and OWASP CRS compatible WAF library.\n- [dongle](https://github.com/golang-module/dongle) - A simple, semantic and developer-friendly golang package for encoding&decoding and encryption&decryption.\n- [encid](https://github.com/bobg/encid) - Encode and decode encrypted integer IDs.\n- [entpassgen](https://github.com/andreimerlescu/entpassgen) - Entropy Password Generator with extensive command line arguments to generate random strings securely including digits, passwords, and passwords built using obscure dictionary words mixed with symbols and digits.\n- [firewalld-rest](https://github.com/prashantgupta24/firewalld-rest) - A rest application to dynamically update firewalld rules on a linux server.\n- [go-generate-password](https://github.com/m1/go-generate-password) - Password generator that can be used on the cli or as a library.\n- [go-htpasswd](https://github.com/tg123/go-htpasswd) - Apache htpasswd Parser for Go.\n- [go-password-validator](https://github.com/lane-c-wagner/go-password-validator) - Password validator based on raw cryptographic entropy values.\n- [go-peer](https://github.com/number571/go-peer) - A software library for creating secure and anonymous decentralized systems.\n- [go-yara](https://github.com/hillu/go-yara) - Go Bindings for [YARA](https://github.com/plusvic/yara), the \"pattern matching swiss knife for malware researchers (and everyone else)\".\n- [goArgonPass](https://github.com/dwin/goArgonPass) - Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations.\n- [goSecretBoxPassword](https://github.com/dwin/goSecretBoxPassword) - A probably paranoid package for securely hashing and encrypting passwords.\n- [Interpol](https://github.com/avahidi/interpol) - Rule-based data generator for fuzzing and penetration testing.\n- [lego](https://github.com/go-acme/lego) - Pure Go ACME client library and CLI tool (for use with Let's Encrypt).\n- [luks.go](https://github.com/anatol/luks.go) - Pure Golang library to manage LUKS partitions.\n- [memguard](https://github.com/awnumar/memguard) - A pure Go library for handling sensitive values in memory.\n- [multikey](https://github.com/adrianosela/multikey) - An n-out-of-N keys encryption/decryption framework based on Shamir's Secret Sharing algorithm.\n- [nacl](https://github.com/kevinburke/nacl) - Go implementation of the NaCL set of API's.\n- [optimus-go](https://github.com/pjebs/optimus-go) - ID hashing and Obfuscation using Knuth's Algorithm.\n- [passlib](https://github.com/hlandau/passlib) - Futureproof password hashing library.\n- [passwap](https://github.com/zitadel/passwap) - Provides a unified implementation between different password hashing algorithms\n- [qrand](https://github.com/bitfield/qrand) - Client for the ANU Quantum Numbers (AQN) API, providing quantum-mechanically secure random data.\n- [SafeDep/vet](https://github.com/safedep/vet) - Protect against malicious open source packages.\n- [secret](https://github.com/rsjethani/secret) - Prevent your secrets from leaking into logs, std\\* etc.\n- [secure](https://github.com/unrolled/secure) - HTTP middleware for Go that facilitates some quick security wins.\n- [secureio](https://github.com/xaionaro-go/secureio) - An keyexchanging+authenticating+encrypting wrapper and multiplexer for `io.ReadWriteCloser` based on XChaCha20-poly1305, ECDH and ED25519.\n- [simple-scrypt](https://github.com/elithrar/simple-scrypt) - Scrypt package with a simple, obvious API and automatic cost calibration built-in.\n- [ssh-vault](https://github.com/ssh-vault/ssh-vault) - encrypt/decrypt using ssh keys.\n- [sslmgr](https://github.com/adrianosela/sslmgr) - SSL certificates made easy with a high level wrapper around acme/autocert.\n- [teler-waf](https://github.com/kitabisa/teler-waf) - teler-waf is a Go HTTP middleware that provide teler IDS functionality to protect against web-based attacks and improve the security of Go-based web applications. It is highly configurable and easy to integrate into existing Go applications.\n- [themis](https://github.com/cossacklabs/themis) - high-level cryptographic library for solving typical data security tasks (secure data storage, secure messaging, zero-knowledge proof authentication), available for 14 languages, best fit for multi-platform apps.\n\n**[⬆ back to top](#contents)**\n\n## Serialization\n\n_Libraries and tools for binary serialization._\n\n- [bambam](https://github.com/glycerine/bambam) - generator for Cap'n Proto schemas from go.\n- [bel](https://github.com/32leaves/bel) - Generate TypeScript interfaces from Go structs/interfaces. Useful for JSON RPC.\n- [binstruct](https://github.com/ghostiam/binstruct) - Golang binary decoder for mapping data into the structure.\n- [cbor](https://github.com/fxamacker/cbor) - Small, safe, and easy CBOR encoding and decoding library.\n- [colfer](https://github.com/pascaldekloe/colfer) - Code generation for the Colfer binary format.\n- [csvutil](https://github.com/jszwec/csvutil) - High Performance, idiomatic CSV record encoding and decoding to native Go structures.\n- [elastic](https://github.com/epiclabs-io/elastic) - Convert slices, maps or any other unknown value across different types at run-time, no matter what.\n- [fixedwidth](https://github.com/huydang284/fixedwidth) - Fixed-width text formatting (UTF-8 supported).\n- [fwencoder](https://github.com/o1egl/fwencoder) - Fixed width file parser (encoding and decoding library) for Go.\n- [go-capnproto](https://github.com/glycerine/go-capnproto) - Cap'n Proto library and parser for go.\n- [go-codec](https://github.com/ugorji/go) - High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support.\n- [go-csvlib](https://github.com/tiendc/go-csvlib) - High level and rich functionalities CSV serialization/deserialization library.\n- [gogoprotobuf](https://github.com/gogo/protobuf) - Protocol Buffers for Go with Gadgets.\n- [goprotobuf](https://github.com/golang/protobuf) - Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers.\n- [gotiny](https://github.com/raszia/gotiny) - Efficient Go serialization library, gotiny is almost as fast as serialization libraries that generate code.\n- [jsoniter](https://github.com/json-iterator/go) - High-performance 100% compatible drop-in replacement of \"encoding/json\".\n- [mapstructure](https://github.com/mitchellh/mapstructure) - Go library for decoding generic map values into native Go structures.\n- [php_session_decoder](https://github.com/yvasiyarov/php_session_decoder) - GoLang library for working with PHP session format and PHP Serialize/Unserialize functions.\n- [pletter](https://github.com/vimeda/pletter) - A standard way to wrap a proto message for message brokers.\n- [structomap](https://github.com/tuvistavie/structomap) - Library to easily and dynamically generate maps from static structures.\n- [unitpacking](https://github.com/recolude/unitpacking) - Library to pack unit vectors into as fewest bytes as possible.\n\n**[⬆ back to top](#contents)**\n\n## Server Applications\n\n- [algernon](https://github.com/xyproto/algernon) - HTTP/2 web server with built-in support for Lua, Markdown, GCSS and Amber.\n- [Caddy](https://github.com/caddyserver/caddy) - Caddy is an alternative, HTTP/2 web server that's easy to configure and use.\n- [consul](https://www.consul.io/) - Consul is a tool for service discovery, monitoring and configuration.\n- [cortex-tenant](https://github.com/blind-oracle/cortex-tenant) - Prometheus remote write proxy that adds add Cortex tenant ID header based on metric labels.\n- [devd](https://github.com/cortesi/devd) - Local webserver for developers.\n- [discovery](https://github.com/Bilibili/discovery) - A registry for resilient mid-tier load balancing and failover.\n- [dudeldu](https://github.com/krotik/dudeldu) - A simple SHOUTcast server.\n- [Easegress](https://github.com/megaease/easegress) - A cloud native high availability/performance traffic orchestration system with observability and extensibility.\n- [Engity's Bifröst](https://bifroest.engity.org/) - Highly customizable SSH server with several ways to authorize a user how to execute its session (local or in containers).\n- [etcd](https://github.com/etcd-io/etcd) - Highly-available key value store for shared configuration and service discovery.\n- [Euterpe](https://github.com/ironsmile/euterpe) - Self-hosted music streaming server with built-in web UI and REST API.\n- [Fider](https://github.com/getfider/fider) - Fider is an open platform to collect and organize customer feedback.\n- [Flagr](https://github.com/checkr/flagr) - Flagr is an open-source feature flagging and A/B testing service.\n- [flipt](https://github.com/markphelps/flipt) - A self contained feature flag solution written in Go and Vue.js\n- [go-feature-flag](https://github.com/thomaspoignant/go-feature-flag) - A simple, complete and lightweight self-hosted feature flag solution 100% Open Source.\n- [go-proxy-cache](https://github.com/fabiocicerchia/go-proxy-cache) - Simple Reverse Proxy with Caching, written in Go, using Redis.\n- [gondola](https://github.com/bmf-san/gondola) - A YAML based golang reverse proxy.\n- [lets-proxy2](https://github.com/rekby/lets-proxy2) - Reverse proxy for handle https with issue certificates in fly from lets-encrypt.\n- [minio](https://github.com/minio/minio) - Minio is a distributed object storage server.\n- [Moxy](https://github.com/sinhashubham95/moxy) - Moxy is a simple mocker and proxy application server, you can create mock endpoints as well as proxy requests in case no mock exists for the endpoint.\n- [nginx-prometheus](https://github.com/blind-oracle/nginx-prometheus) - Nginx log parser and exporter to Prometheus.\n- [nsq](https://nsq.io/) - A realtime distributed messaging platform.\n- [OpenRun](https://github.com/openrundev/openrun) - Open-source alternative to Google Cloud Run and AWS App Runner. Easily deploy internal tools across a team.\n- [pocketbase](https://github.com/pocketbase/pocketbase) - PocketBase is a realtime backend in 1 file consisting of embedded database (SQLite) with realtime subscriptions, built-in auth management and much more.\n- [protoxy](https://github.com/camgraff/protoxy) - A proxy server that converts JSON request bodies to Protocol Buffers.\n- [psql-streamer](https://github.com/blind-oracle/psql-streamer) - Stream database events from PostgreSQL to Kafka.\n- [riemann-relay](https://github.com/blind-oracle/riemann-relay) - Relay to load-balance Riemann events and/or convert them to Carbon.\n- [RoadRunner](https://github.com/spiral/roadrunner) - High-performance PHP application server, load-balancer and process manager.\n- [SFTPGo](https://github.com/drakkan/sftpgo) - Fully featured and highly configurable SFTP server with optional FTP/S and WebDAV support. It can serve local filesystem and Cloud Storage backends such as S3 and Google Cloud Storage.\n- [Trickster](https://github.com/tricksterproxy/trickster) - HTTP reverse proxy cache and time series accelerator.\n- [wd-41](https://github.com/baalimago/wd-41) - A (w)eb (d)evelopment server with automatic live-reload on file changes.\n- [Wish](https://github.com/charmbracelet/wish) - Make SSH apps, just like that!\n\n**[⬆ back to top](#contents)**\n\n## Stream Processing\n\n_Libraries and tools for stream processing and reactive programming._\n\n- [go-etl](https://github.com/Breeze0806/go-etl) - A lightweight toolkit for data source extraction, transformation, and loading (ETL).\n- [go-streams](https://github.com/reugn/go-streams) - Go stream processing library.\n- [goio](https://github.com/primetalk/goio) - An implementation of IO, Stream, Fiber for Golang, inspired by awesome Scala libraries cats and fs2.\n- [machine](https://github.com/whitaker-io/machine) - Go library for writing and generating stream workers with built in metrics and traceability.\n- [nibbler](https://github.com/naughtygopher/nibbler) - A lightweight package for micro batch processing.\n- [stream](https://github.com/youthlin/stream) - Go Stream, like Java 8 Stream: Filter/Map/FlatMap/Peek/Sorted/ForEach/Reduce...\n\n**[⬆ back to top](#contents)**\n\n## Template Engines\n\n_Libraries and tools for templating and lexing._\n\n- [ego](https://github.com/benbjohnson/ego) - Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled.\n- [extemplate](https://git.sr.ht/~dvko/extemplate) - Tiny wrapper around html/template to allow for easy file-based template inheritance.\n- [fasttemplate](https://github.com/valyala/fasttemplate) - Simple and fast template engine. Substitutes template placeholders up to 10x faster than [text/template](https://golang.org/pkg/text/template/).\n- [gomponents](https://www.gomponents.com) - HTML 5 components in pure Go, that look something like this: `func(name string) g.Node { return Div(Class(\"headline\"), g.Textf(\"Hi %v!\", name)) }`.\n- [got](https://github.com/goradd/got) - A Go code generator inspired by Hero and Fasttemplate. Has include files, custom tag definitions, injected Go code, language translation, and more.\n- [goview](https://github.com/foolin/goview) - Goview is a lightweight, minimalist and idiomatic template library based on golang html/template for building Go web application.\n- [htmgo](https://htmgo.dev) - build simple and scalable systems with go + htmx\n- [jet](https://github.com/CloudyKit/jet) - Jet template engine.\n- [liquid](https://github.com/osteele/liquid) - Go implementation of Shopify Liquid templates.\n- [maroto](https://github.com/johnfercher/maroto) - A maroto way to create PDFs. Maroto is inspired in Bootstrap and uses gofpdf. Fast and simple.\n- [pongo2](https://github.com/flosch/pongo2) - Django-like template-engine for Go.\n- [quicktemplate](https://github.com/valyala/quicktemplate) - Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it.\n- [raymond](https://github.com/aymerick/raymond) - Complete handlebars implementation in Go.\n- [Razor](https://github.com/sipin/gorazor) - Razor view engine for Golang.\n- [Soy](https://github.com/robfig/soy) - Closure templates (aka Soy templates) for Go, following the [official spec](https://developers.google.com/closure/templates/).\n- [sprout](https://github.com/go-sprout/sprout) - Useful template functions for Go templates.\n- [tbd](https://github.com/lucasepe/tbd) - A really simple way to create text templates with placeholders - exposes extra builtin Git repo metadata.\n- [templ](https://github.com/a-h/templ) - A HTML templating language that has great developer tooling.\n\n**[⬆ back to top](#contents)**\n\n## Testing\n\n_Libraries for testing codebases and generating test data._\n\n### Testing Frameworks\n\n- [apitest](https://apitest.dev) - Simple and extensible behavioural testing library for REST based services or HTTP handlers that supports mocking external http calls and rendering of sequence diagrams.\n- [arch-go](https://github.com/arch-go/arch-go) - Architecture testing tool for Go projects.\n- [assert](https://github.com/go-playground/assert) - Basic Assertion Library used along side native go testing, with building blocks for custom assertions.\n- [baloo](https://github.com/h2non/baloo) - Expressive and versatile end-to-end HTTP API testing made easy.\n- [be](https://github.com/carlmjohnson/be) - The minimalist generic test assertion library.\n- [biff](https://github.com/fulldump/biff) - Bifurcation testing framework, BDD compatible.\n- [charlatan](https://github.com/percolate/charlatan) - Tool to generate fake interface implementations for tests.\n- [commander](https://github.com/SimonBaeumer/commander) - Tool for testing cli applications on windows, linux and osx.\n- [cupaloy](https://github.com/bradleyjkemp/cupaloy) - Simple snapshot testing addon for your test framework.\n- [dbcleaner](https://github.com/khaiql/dbcleaner) - Clean database for testing purpose, inspired by `database_cleaner` in Ruby.\n- [dft](https://github.com/abecodes/dft) - Lightweight, zero dependency docker containers for testing (or more).\n- [dsunit](https://github.com/viant/dsunit) - Datastore testing for SQL, NoSQL, structured files.\n- [embedded-postgres](https://github.com/fergusstrange/embedded-postgres) - Run a real Postgres database locally on Linux, OSX or Windows as part of another Go application or test.\n- [endly](https://github.com/viant/endly) - Declarative end to end functional testing.\n- [envite](https://github.com/PerimeterX/envite) - Dev and testing environment management framework.\n- [fixenv](https://github.com/rekby/fixenv) - Fixture manage engine, inspired by pytest fixtures.\n- [flute](https://github.com/suzuki-shunsuke/flute) - HTTP client testing framework.\n- [frisby](https://github.com/verdverm/frisby) - REST API testing framework.\n- [gherkingen](https://github.com/hedhyw/gherkingen) - BDD boilerplate generator and framework.\n- [ginkgo](https://onsi.github.io/ginkgo/) - BDD Testing Framework for Go.\n- [gnomock](https://github.com/orlangure/gnomock) - integration testing with real dependencies (database, cache, even Kubernetes or AWS) running in Docker, without mocks.\n- [go-carpet](https://github.com/msoap/go-carpet) - Tool for viewing test coverage in terminal.\n- [go-cmp](https://github.com/google/go-cmp) - Package for comparing Go values in tests.\n- [go-hit](https://github.com/Eun/go-hit) - Hit is an http integration test framework written in golang.\n- [go-mutesting](https://github.com/zimmski/go-mutesting) - Mutation testing for Go source code.\n- [go-mysql-test-container](https://github.com/arikama/go-mysql-test-container) - Golang MySQL testcontainer to help with MySQL integration testing.\n- [go-snaps](http://github.com/gkampitakis/go-snaps) - Jest-like snapshot testing in Golang.\n- [go-testdeep](https://github.com/maxatome/go-testdeep) - Extremely flexible golang deep comparison, extends the go testing package.\n- [go-testpredicate](https://github.com/maargenton/go-testpredicate) - Test predicate style assertions library with extensive diagnostics output.\n- [go-vcr](https://github.com/dnaeon/go-vcr) - Record and replay your HTTP interactions for fast, deterministic and accurate tests.\n- [goblin](https://github.com/franela/goblin) - Mocha like testing framework of Go.\n- [goc](https://github.com/qiniu/goc) - Goc is a comprehensive coverage testing system for The Go Programming Language.\n- [gocheck](https://labix.org/gocheck) - More advanced testing framework alternative to gotest.\n- [GoConvey](https://github.com/smartystreets/goconvey/) - BDD-style framework with web UI and live reload.\n- [gocrest](https://github.com/corbym/gocrest) - Composable hamcrest-like matchers for Go assertions.\n- [godog](https://github.com/cucumber/godog) - Cucumber BDD framework for Go.\n- [gofight](https://github.com/appleboy/gofight) - API Handler Testing for Golang Router framework.\n- [gogiven](https://github.com/corbym/gogiven) - YATSPEC-like BDD testing framework for Go.\n- [gomatch](https://github.com/jfilipczyk/gomatch) - library created for testing JSON against patterns.\n- [gomega](https://onsi.github.io/gomega/) - Rspec like matcher/assertion library.\n- [Gont](https://github.com/stv0g/gont) - Go network testing toolkit for testing building complex network topologies using Linux namespaces.\n- [gospecify](https://github.com/stesla/gospecify) - This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec.\n- [gosuite](https://github.com/pavlo/gosuite) - Brings lightweight test suites with setup/teardown facilities to `testing` by leveraging Go1.7's Subtests.\n- [got](https://github.com/ysmood/got) - An enjoyable golang test framework.\n- [gotest.tools](https://github.com/gotestyourself/gotest.tools) - A collection of packages to augment the go testing package and support common patterns.\n- [Hamcrest](https://github.com/rdrdr/hamcrest) - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.\n- [httpexpect](https://github.com/gavv/httpexpect) - Concise, declarative, and easy to use end-to-end HTTP and REST API testing.\n- [is](https://github.com/matryer/is) - Professional lightweight testing mini-framework for Go.\n- [jsonassert](https://github.com/kinbiko/jsonassert) - Package for verifying that your JSON payloads are serialized correctly.\n- [keploy](https://github.com/keploy/keploy) - Generate Testcase and Data Mocks from API calls automatically.\n- [omg.testingtools](https://github.com/dedalqq/omg.testingtools) - The simple library for change a values of private fields for testing.\n- [restit](https://github.com/yookoala/restit) - Go micro framework to help writing RESTful API integration test.\n- [schema](https://github.com/jgroeneveld/schema) - Quick and easy expression matching for JSON schemas used in requests and responses.\n- [stop-and-go](https://github.com/elgohr/stop-and-go) - Testing helper for concurrency.\n- [testcase](https://github.com/adamluzsi/testcase) - Idiomatic testing framework for Behavior Driven Development.\n- [testcerts](https://github.com/madflojo/testcerts) - Dynamically generate self-signed certificates and certificate authorities within your test functions.\n- [testcontainers-go](https://github.com/testcontainers/testcontainers-go) - A Go package that makes it simple to create and clean up container-based dependencies for automated integration/smoke tests. The clean, easy-to-use API enables developers to programmatically define containers that should be run as part of a test and clean up those resources when the test is done.\n- [testfixtures](https://github.com/go-testfixtures/testfixtures) - A helper for Rails' like test fixtures to test database applications.\n- [Testify](https://github.com/stretchr/testify) - Sacred extension to the standard go testing package.\n- [testsql](https://github.com/zhulongcheng/testsql) - Generate test data from SQL files before testing and clear it after finished.\n- [testza](https://github.com/MarvinJWendt/testza) - Full-featured test framework with nice colorized output.\n- [trial](https://github.com/jgroeneveld/trial) - Quick and easy extendable assertions without introducing much boilerplate.\n- [Tt](https://github.com/vcaesar/tt) - Simple and colorful test tools.\n- [wstest](https://github.com/posener/wstest) - Websocket client for unit-testing a websocket http.Handler.\n\n### Mock\n\n- [counterfeiter](https://github.com/maxbrunsfeld/counterfeiter) - Tool for generating self-contained mock objects.\n- [genmock](https://gitlab.com/so_literate/genmock) - Go mocking system with code generator for building calls of the interface methods.\n- [go-localstack](https://github.com/elgohr/go-localstack) - Tool for using localstack in AWS testing.\n- [go-sqlmock](https://github.com/DATA-DOG/go-sqlmock) - Mock SQL driver for testing database interactions.\n- [go-txdb](https://github.com/DATA-DOG/go-txdb) - Single transaction based database driver mainly for testing purposes.\n- [gock](https://github.com/h2non/gock) - Versatile HTTP mocking made easy.\n- [gomock](https://github.com/uber-go/mock) - Mocking framework for the Go programming language.\n- [govcr](https://github.com/seborama/govcr) - HTTP mock for Golang: record and replay HTTP interactions for offline testing.\n- [hoverfly](https://github.com/SpectoLabs/hoverfly) - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.\n- [httpmock](https://github.com/jarcoal/httpmock) - Easy mocking of HTTP responses from external resources.\n- [minimock](https://github.com/gojuno/minimock) - Mock generator for Go interfaces.\n- [mockery](https://github.com/vektra/mockery) - Tool to generate Go interfaces.\n- [mockhttp](https://github.com/tv42/mockhttp) - Mock object for Go http.ResponseWriter.\n- [mooncake](https://github.com/GuilhermeCaruso/mooncake) - A simple way to generate mocks for multiple purposes.\n- [moq](https://github.com/matryer/moq) - Utility that generates a struct from any interface. The struct can be used in test code as a mock of the interface.\n- [pgxmock](https://github.com/pashagolub/pgxmock) - A mock library implementing [pgx - PostgreSQL Driver and Toolkit](https://github.com/jackc/pgx/).\n- [timex](https://github.com/cabify/timex) - A test-friendly replacement for the native `time` package.\n- [xgo](https://github.com/xhd2015/xgo) - A general pureposed function mocking library.\n\n### Fuzzing and delta-debugging/reducing/shrinking\n\n- [go-fuzz](https://github.com/dvyukov/go-fuzz) - Randomized testing system.\n- [gofuzz](https://github.com/google/gofuzz) - Library for populating go objects with random values.\n- [Tavor](https://github.com/zimmski/tavor) - Generic fuzzing and delta-debugging framework.\n\n### Selenium and browser control tools\n\n- [cdp](https://github.com/mafredri/cdp) - Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it.\n- [chromedp](https://github.com/knq/chromedp) - a way to drive/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol.\n- [ggr](https://github.com/aerokube/ggr) - a lightweight server that routes and proxies Selenium WebDriver requests to multiple Selenium hubs.\n- [playwright-go](https://github.com/mxschmitt/playwright-go) - browser automation library to control Chromium, Firefox and WebKit with a single API.\n- [rod](https://github.com/go-rod/rod) - A Devtools driver to make web automation and scraping easy.\n- [selenoid](https://github.com/aerokube/selenoid) - alternative Selenium hub server that launches browsers within containers.\n\n### Fail injection\n\n- [failpoint](https://github.com/pingcap/failpoint) - An implementation of [failpoints](https://www.freebsd.org/cgi/man.cgi?query=fail) for Golang.\n\n**[⬆ back to top](#contents)**\n\n## Text Processing\n\n_Libraries for parsing and manipulating texts._\n\nSee also [Natural Language Processing](#natural-language-processing) and [Text Analysis](#text-analysis).\n\n### Formatters\n\n- [address](https://github.com/bojanz/address) - Handles address representation, validation and formatting.\n- [align](https://github.com/Guitarbum722/align) - A general purpose application that aligns text.\n- [bytes](https://github.com/labstack/gommon/tree/master/bytes) - Formats and parses numeric byte values (10K, 2M, 3G, etc.).\n- [go-fixedwidth](https://github.com/ianlopshire/go-fixedwidth) - Fixed-width text formatting (encoder/decoder with reflection).\n- [go-humanize](https://github.com/dustin/go-humanize) - Formatters for time, numbers, and memory size to human readable format.\n- [gotabulate](https://github.com/bndr/gotabulate) - Easily pretty-print your tabular data with Go.\n- [sq](https://github.com/neilotoole/sq) - Convert data from SQL databases or document formats like CSV or Excel into formats such as JSON, Excel, CSV, HTML, Markdown, XML, and YAML.\n- [textwrap](https://github.com/isbm/textwrap) - Wraps text at end of lines. Implementation of `textwrap` module from Python.\n\n### Markup Languages\n\n- [bafi](https://github.com/mmalcek/bafi) - Universal JSON, BSON, YAML, XML translator to ANY format using templates.\n- [bbConvert](https://github.com/CalebQ42/bbConvert) - Converts bbCode to HTML that allows you to add support for custom bbCode tags.\n- [blackfriday](https://github.com/russross/blackfriday) - Markdown processor in Go.\n- [go-output-format](https://github.com/drewstinnett/go-output-format) - Output go structures into multiple formats (YAML/JSON/etc) in your command line app.\n- [go-toml](https://github.com/pelletier/go-toml) - Go library for the TOML format with query support and handy cli tools.\n- [goldmark](https://github.com/yuin/goldmark) - A Markdown parser written in Go. Easy to extend, standard (CommonMark) compliant, well structured.\n- [goq](https://github.com/andrewstuart/goq) - Declarative unmarshalling of HTML using struct tags with jQuery syntax (uses GoQuery).\n- [html-to-markdown](https://github.com/JohannesKaufmann/html-to-markdown) - Convert HTML to Markdown. Even works with entire websites and can be extended through rules.\n- [htmlquery](https://github.com/antchfx/htmlquery) - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.\n- [htmlyaml](https://github.com/nikolaydubina/htmlyaml) - Rich rendering of YAML as HTML in Go.\n- [htree](https://github.com/bobg/htree) - Traverse, navigate, filter, and otherwise process trees of [html.Node](https://pkg.go.dev/golang.org/x/net/html#Node) objects.\n- [mxj](https://github.com/clbanning/mxj) - Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.\n- [toml](https://github.com/BurntSushi/toml) - TOML configuration format (encoder/decoder with reflection).\n\n### Parsers/Encoders/Decoders\n\n- [allot](https://github.com/sbstjn/allot) - Placeholder and wildcard text parsing for CLI tools and bots.\n- [codetree](https://github.com/aerogo/codetree) - Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure.\n- [commonregex](https://github.com/mingrammer/commonregex) - A collection of common regular expressions for Go.\n- [did](https://github.com/ockam-network/did) - DID (Decentralized Identifiers) Parser and Stringer in Go.\n- [doi](https://github.com/hscells/doi) - Document object identifier (doi) parser in Go.\n- [editorconfig-core-go](https://github.com/editorconfig/editorconfig-core-go) - Editorconfig file parser and manipulator for Go.\n- [encdec](https://github.com/mickep76/encdec) - Package provides a generic interface to encoders and decoders.\n- [go-fasttld](https://github.com/elliotwutingfeng/go-fasttld) - High performance effective top level domains (eTLD) extraction module.\n- [go-nmea](https://github.com/adrianmo/go-nmea) - NMEA parser library for the Go language.\n- [go-querystring](https://github.com/google/go-querystring) - Go library for encoding structs into URL query parameters.\n- [go-vcard](https://github.com/emersion/go-vcard) - Parse and format vCard.\n- [godump](https://github.com/yassinebenaid/godump) - Pretty print any GO variable with ease, an alternative to Go's `fmt.Printf(\"%#v\")`.\n- [godump (goforj)](https://github.com/goforj/godump) - Pretty-print Go structs with Laravel/Symfony-style dumps, full type info, colorized CLI output, cycle detection, and private field access.\n- [gofeed](https://github.com/mmcdole/gofeed) - Parse RSS and Atom feeds in Go.\n- [gographviz](https://github.com/awalterschulze/gographviz) - Parses the Graphviz DOT language.\n- [gonameparts](https://github.com/polera/gonameparts) - Parses human names into individual name parts.\n- [ltsv](https://github.com/Wing924/ltsv) - High performance [LTSV (Labeled Tab Separated Value)](http://ltsv.org/) reader for Go.\n- [normalize](https://github.com/avito-tech/normalize) - Sanitize, normalize and compare fuzzy text.\n- [parseargs-go](https://github.com/nproc/parseargs-go) - string argument parser that understands quotes and backslashes.\n- [parth](https://github.com/codemodus/parth) - URL path segmentation parsing.\n- [prattle](https://github.com/askeladdk/prattle) - Scan and parse LL(1) grammars simply and efficiently.\n- [sdp](https://github.com/gortc/sdp) - SDP: Session Description Protocol [[RFC 4566](https://tools.ietf.org/html/rfc4566)].\n- [sh](https://github.com/mvdan/sh) - Shell parser and formatter.\n- [tokenizer](https://github.com/bzick/tokenizer) - Parse any string, slice or infinite buffer to any tokens.\n- [vdf](https://github.com/andygrunwald/vdf) - A Lexer and Parser for Valves Data Format (known as vdf) written in Go.\n- [when](https://github.com/olebedev/when) - Natural EN and RU language date/time parser with pluggable rules.\n- [xj2go](https://github.com/stackerzzq/xj2go) - Convert xml or json to go struct.\n\n### Regular Expressions\n\n- [genex](https://github.com/alixaxel/genex) - Count and expand Regular Expressions into all matching Strings.\n- [go-wildcard](https://github.com/IGLOU-EU/go-wildcard) - Simple and lightweight wildcard pattern matching.\n- [goregen](https://github.com/zach-klippenstein/goregen) - Library for generating random strings from regular expressions.\n- [regroup](https://github.com/oriser/regroup) - Match regex expression named groups into go struct using struct tags and automatic parsing.\n- [rex](https://github.com/hedhyw/rex) - Regular expressions builder.\n\n### Sanitation\n\n- [bluemonday](https://github.com/microcosm-cc/bluemonday) - HTML Sanitizer.\n- [gofuckyourself](https://github.com/JoshuaDoes/gofuckyourself) - A sanitization-based swear filter for Go.\n\n### Scrapers\n\n- [colly](https://github.com/asciimoo/colly) - Fast and Elegant Scraping Framework for Gophers.\n- [dataflowkit](https://github.com/slotix/dataflowkit) - Web scraping Framework to turn websites into structured data.\n- [go-recipe](https://github.com/kkyr/go-recipe) - A package for scraping recipes from websites.\n- [go-sitemap-parser](https://github.com/aafeher/go-sitemap-parser) - Go language library for parsing Sitemaps.\n- [GoQuery](https://github.com/PuerkitoBio/goquery) - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.\n- [pagser](https://github.com/foolin/pagser) - Pagser is a simple, extensible, configurable parse and deserialize html page to struct based on goquery and struct tags for golang crawler.\n- [Tagify](https://github.com/zoomio/tagify) - Produces a set of tags from given source.\n- [walker](https://github.com/cyucelen/walker) - Seamlessly fetch paginated data from any source. Simple and high performance API scraping included.\n- [xurls](https://github.com/mvdan/xurls) - Extract urls from text.\n\n### RSS\n\n- [podcast](https://github.com/eduncan911/podcast) - iTunes Compliant and RSS 2.0 Podcast Generator in Golang\n\n### Utility/Miscellaneous\n\n- [go-runewidth](https://github.com/mattn/go-runewidth) - Functions to get fixed width of the character or string.\n- [go-zero-width](https://github.com/trubitsyn/go-zero-width) - Zero-width character detection and removal for Go.\n- [kace](https://github.com/codemodus/kace) - Common case conversions covering common initialisms.\n- [petrovich](https://github.com/striker2000/petrovich) - Petrovich is the library which inflects Russian names to given grammatical case.\n- [radix](https://github.com/yourbasic/radix) - Fast string sorting algorithm.\n- [TySug](https://github.com/Dynom/TySug) - Alternative suggestions with respect to keyboard layouts.\n- [w2vgrep](https://github.com/arunsupe/semantic-grep) - A semantic grep tool using word embeddings to find semantically similar matches. For example, searching for \"death\" will find \"dead\", \"killing\", \"murder\".\n\n**[⬆ back to top](#contents)**\n\n## Third-party APIs\n\n_Libraries for accessing third party APIs._\n\n- [airtable](https://github.com/mehanizm/airtable) - Go client library for the [Airtable API](https://airtable.com/api).\n- [anaconda](https://github.com/ChimeraCoder/anaconda) - Go client library for the Twitter 1.1 API.\n- [appstore-sdk-go](https://github.com/Kachit/appstore-sdk-go) - Unofficial Golang SDK for AppStore Connect API.\n- [aws-encryption-sdk-go](https://github.com/chainifynet/aws-encryption-sdk-go) - Unofficial Go SDK implementation of the [AWS Encryption SDK](https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/index.html).\n- [aws-sdk-go](https://github.com/aws/aws-sdk-go-v2) - The official AWS SDK for the Go programming language.\n- [bqwriter](https://github.com/OTA-Insight/bqwriter) - High Level Go Library to write data into [Google BigQuery](https://cloud.google.com/bigquery) at a high throughout.\n- [brewerydb](https://github.com/naegelejd/brewerydb) - Go library for accessing the BreweryDB API.\n- [cachet](https://github.com/andygrunwald/cachet) - Go client library for [Cachet (open source status page system)](https://cachethq.io/).\n- [circleci](https://github.com/jszwedko/go-circleci) - Go client library for interacting with CircleCI's API.\n- [clarifai](https://github.com/samuelcouch/clarifai) - Go client library for interfacing with the Clarifai API.\n- [codeship-go](https://github.com/codeship/codeship-go) - Go client library for interacting with Codeship's API v2.\n- [coinpaprika-go](https://github.com/coinpaprika/coinpaprika-api-go-client) - Go client library for interacting with Coinpaprika's API.\n- [device-check-go](https://github.com/rinchsan/device-check-go) - Go client library for interacting with [iOS DeviceCheck API](https://developer.apple.com/documentation/devicecheck) v1.\n- [discordgo](https://github.com/bwmarrin/discordgo) - Go bindings for the Discord Chat API.\n- [disgo](https://github.com/switchupcb/disgo) - Go API Wrapper for the Discord API.\n- [dusupay-sdk-go](https://github.com/Kachit/dusupay-sdk-go) - Unofficial Dusupay payment gateway API Client for Go\n- [ethrpc](https://github.com/onrik/ethrpc) - Go bindings for Ethereum JSON RPC API.\n- [facebook](https://github.com/huandu/facebook) - Go Library that supports the Facebook Graph API.\n- [fasapay-sdk-go](https://github.com/Kachit/fasapay-sdk-go) - Unofficial Fasapay payment gateway XML API Client for Golang.\n- [fcm](https://github.com/maddevsio/fcm) - Go library for Firebase Cloud Messaging.\n- [gads](https://github.com/emiddleton/gads) - Google Adwords Unofficial API.\n- [gcm](https://github.com/Aorioli/gcm) - Go library for Google Cloud Messaging.\n- [geo-golang](https://github.com/codingsince1985/geo-golang) - Go Library to access [Google Maps](https://developers.google.com/maps/documentation/geocoding/intro), [MapQuest](https://developer.mapquest.com/documentation/api/geocoding/), [Nominatim](https://nominatim.org/release-docs/latest/api/Overview/), [OpenCage](https://opencagedata.com/api), [Bing](https://msdn.microsoft.com/en-us/library/ff701715.aspx), [Mapbox](https://www.mapbox.com/developers/api/geocoding/), and [OpenStreetMap](https://wiki.openstreetmap.org/wiki/Nominatim) geocoding / reverse geocoding APIs.\n- [github](https://github.com/google/go-github) - Go library for accessing the GitHub REST API v3.\n- [githubql](https://github.com/shurcooL/githubql) - Go library for accessing the GitHub GraphQL API v4.\n- [go-atlassian](https://github.com/ctreminiom/go-atlassian) - Go library for accessing the [Atlassian Cloud](https://www.atlassian.com/enterprise/cloud) services (Jira, Jira Service Management, Jira Agile, Confluence, Admin Cloud)\n- [go-aws-news](https://github.com/circa10a/go-aws-news) - Go application and library to fetch what's new from AWS.\n- [go-chronos](https://github.com/axelspringer/go-chronos) - Go library for interacting with the [Chronos](https://mesos.github.io/chronos/) Job Scheduler\n- [go-gerrit](https://github.com/andygrunwald/go-gerrit) - Go client library for [Gerrit Code Review](https://www.gerritcodereview.com/).\n- [go-hacknews](https://github.com/PaulRosset/go-hacknews) - Tiny Go client for HackerNews API.\n- [go-here](https://github.com/abdullahselek/go-here) - Go client library around the HERE location based APIs.\n- [go-hibp](https://github.com/wneessen/go-hibp) - Simple Go binding to the \"Have I Been Pwned\" APIs.\n- [go-imgur](https://github.com/koffeinsource/go-imgur) - Go client library for [imgur](https://imgur.com)\n- [go-jira](https://github.com/andygrunwald/go-jira) - Go client library for [Atlassian JIRA](https://www.atlassian.com/software/jira)\n- [go-lark](https://github.com/go-lark/lark) - An easy-to-use unofficial SDK for [Feishu](https://open.feishu.cn/) and [Lark](https://open.larksuite.com/) Open Platform.\n- [go-marathon](https://github.com/gambol99/go-marathon) - Go library for interacting with Mesosphere's Marathon PAAS.\n- [go-myanimelist](https://github.com/nstratos/go-myanimelist) - Go client library for accessing the [MyAnimeList API](https://myanimelist.net/apiconfig/references/api/v2).\n- [go-openai](https://github.com/sashabaranov/go-openai) - OpenAI ChatGPT, DALL·E, Whisper API library for Go.\n- [go-openproject](https://github.com/manuelbcd/go-openproject) - Go client library for interacting with [OpenProject](https://docs.openproject.org/api/) API.\n- [go-postman-collection](https://github.com/rbretecher/go-postman-collection) - Go module to work with [Postman Collections](https://learning.getpostman.com/docs/postman/collections/creating-collections/) (compatible with Insomnia).\n- [go-redoc](https://github.com/mvrilo/go-redoc) - Embedded OpenAPI/Swagger documentation ui for Go using [ReDoc](https://redocly.com/).\n- [go-restcountries](https://github.com/chriscross0/go-restcountries) - Go library for the [REST Countries API](https://countrylayer.com/).\n- [go-salesforce](https://github.com/k-capehart/go-salesforce) - Go client library for interacting with the [Salesforce REST API](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_list.htm).\n- [go-sophos](https://github.com/esurdam/go-sophos) - Go client library for the [Sophos UTM REST API](https://www.sophos.com/en-us/medialibrary/PDFs/documentation/UTMonAWS/Sophos-UTM-RESTful-API.pdf?la=en) with zero dependencies.\n- [go-swagger-ui](https://github.com/esurdam/go-swagger-ui) - Go library containing precompiled [Swagger UI](https://swagger.io/tools/swagger-ui/) for serving swagger json.\n- [go-telegraph](https://gitlab.com/toby3d/telegraph) - Telegraph publishing platform API client.\n- [go-trending](https://github.com/andygrunwald/go-trending) - Go library for accessing [trending repositories](https://github.com/trending) and [developers](https://github.com/trending/developers) at Github.\n- [go-unsplash](https://github.com/hbagdi/go-unsplash) - Go client library for the [Unsplash.com](https://unsplash.com) API.\n- [go-xkcd](https://github.com/nishanths/go-xkcd) - Go client for the xkcd API.\n- [go-yapla](https://gitlab.com/adrienK/go-yapla) - Go client library for the Yapla v2.0 API.\n- [goagi](https://github.com/staskobzar/goagi) - Go library to build Asterisk PBX agi/fastagi applications.\n- [goami2](https://github.com/staskobzar/goami2) - AMI v2 library for Asterisk PBX.\n- [GoFreeDB](https://github.com/FreeLeh/GoFreeDB) - Golang library providing common and simple database abstractions on top of Google Sheets.\n- [gogtrends](https://github.com/groovili/gogtrends) - Google Trends Unofficial API.\n- [golang-tmdb](https://github.com/cyruzin/golang-tmdb) - Golang wrapper for The Movie Database API v3.\n- [golyrics](https://github.com/mamal72/golyrics) - Golyrics is a Go library to fetch music lyrics data from the Wikia website.\n- [gomalshare](https://github.com/MonaxGT/gomalshare) - Go library MalShare API [malshare.com](https://www.malshare.com/)\n- [GoMusicBrainz](https://github.com/michiwend/gomusicbrainz) - Go MusicBrainz WS2 client library.\n- [google](https://github.com/google/google-api-go-client) - Auto-generated Google APIs for Go.\n- [google-analytics](https://github.com/chonthu/go-google-analytics) - Simple wrapper for easy google analytics reporting.\n- [google-cloud](https://github.com/GoogleCloudPlatform/gcloud-golang) - Google Cloud APIs Go Client Library.\n- [gopaapi5](https://github.com/utekaravinash/gopaapi5) - Go Client Library for [Amazon Product Advertising API 5.0](https://webservices.amazon.com/paapi5/documentation/).\n- [gopensky](https://github.com/navidys/gopensky) - Go client implementation for [OpenSKY Network](https://opensky-network.org/) live's API (airspace ADS-B and Mode S data).\n- [gosip](https://github.com/koltyakov/gosip) - Client library for SharePoint.\n- [gostorm](https://github.com/jsgilmore/gostorm) - GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells.\n- [hipchat](https://github.com/andybons/hipchat) - This project implements a golang client library for the Hipchat API.\n- [hipchat (xmpp)](https://github.com/daneharrigan/hipchat) - A golang package to communicate with HipChat over XMPP.\n- [igdb](https://github.com/Henry-Sarabia/igdb) - Go client for the [Internet Game Database API](https://api.igdb.com/).\n- [ip2location-io-go](https://github.com/ip2location/ip2location-io-go) - Go wrapper for the IP2Location.io API [IP2Location.io](https://www.ip2location.io/).\n- [jokeapi-go](https://github.com/icelain/jokeapi) - Go client for [JokeAPI](https://sv443.net/jokeapi/v2/).\n- [lark](https://github.com/chyroc/lark) - [Feishu](https://open.feishu.cn/)/[Lark](https://open.larksuite.com/) Open API Go SDK, Support ALL Open API and Event Callback.\n- [lastpass-go](https://github.com/ansd/lastpass-go) - Go client library for the [LastPass](https://www.lastpass.com/) API.\n- [libgoffi](https://github.com/clevabit/libgoffi) - Library adapter toolbox for native [libffi](https://sourceware.org/libffi/) integration\n- [Medium](https://github.com/Medium/medium-sdk-go) - Golang SDK for Medium's OAuth2 API.\n- [megos](https://github.com/andygrunwald/megos) - Client library for accessing an [Apache Mesos](https://mesos.apache.org/) cluster.\n- [minio-go](https://github.com/minio/minio-go) - Minio Go Library for Amazon S3 compatible cloud storage.\n- [mixpanel](https://github.com/dukex/mixpanel) - Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications.\n- [newsapi-go](https://github.com/jellydator/newsapi-go) - Go client for [NewsAPI](https://newsapi.org/).\n- [openaigo](https://github.com/otiai10/openaigo) - OpenAI GPT3/GPT3.5 ChatGPT API client library for Go.\n- [patreon-go](https://github.com/mxpv/patreon-go) - Go library for Patreon API.\n- [paypal](https://github.com/logpacker/PayPal-Go-SDK) - Wrapper for PayPal payment API.\n- [playlyfe](https://github.com/playlyfe/playlyfe-go-sdk) - The Playlyfe Rest API Go SDK.\n- [pushover](https://github.com/gregdel/pushover) - Go wrapper for the Pushover API.\n- [rawg-sdk-go](https://github.com/dimuska139/rawg-sdk-go) - Go library for the [RAWG Video Games Database](https://rawg.io/) API\n- [shopify](https://github.com/rapito/go-shopify) - Go Library to make CRUD request to the Shopify API.\n- [simples3](https://github.com/rhnvrm/simples3) - Simple no frills AWS S3 Library using REST with V4 Signing written in Go.\n- [slack](https://github.com/slack-go/slack) - Slack API in Go.\n- [smite](https://github.com/sergiotapia/smitego) - Go package to wraps access to the Smite game API.\n- [spotify](https://github.com/rapito/go-spotify) - Go Library to access Spotify WEB API.\n- [steam](https://github.com/sostronk/go-steam) - Go Library to interact with Steam game servers.\n- [stripe](https://github.com/stripe/stripe-go) - Go client for the Stripe API.\n- [swag](https://github.com/zc2638/swag) - No comments, simple go wrapper to create swagger 2.0 compatible APIs. Support most routing frameworks, such as built-in, gin, chi, mux, echo, httprouter, fasthttp and more.\n- [textbelt](https://github.com/dietsche/textbelt) - Go client for the textbelt.com txt messaging API.\n- [Trello](https://github.com/adlio/trello) - Go wrapper for the Trello API.\n- [TripAdvisor](https://github.com/mrbenosborne/tripadvisor-golang) - Go wrapper for the TripAdvisor API.\n- [tumblr](https://github.com/mattcunningham/gumblr) - Go wrapper for the Tumblr v2 API.\n- [uptimerobot](https://github.com/bitfield/uptimerobot) - Go wrapper and command-line client for the Uptime Robot v2 API.\n- [vl-go](https://github.com/verifid/vl-go) - Go client library around the VerifID identity verification layer API.\n- [webhooks](https://github.com/go-playground/webhooks) - Webhook receiver for GitHub and Bitbucket.\n- [wit-go](https://github.com/wit-ai/wit-go) - Go client for wit.ai HTTP API.\n- [ynab](https://github.com/brunomvsouza/ynab.go) - Go wrapper for the YNAB API.\n- [zooz](https://github.com/gojuno/go-zooz) - Go client for the Zooz API.\n\n**[⬆ back to top](#contents)**\n\n## Utilities\n\n_General utilities and tools to make your life easier._\n\n- [apm](https://github.com/topfreegames/apm) - Process manager for Golang applications with an HTTP API.\n- [backscanner](https://github.com/icza/backscanner) - A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward.\n- [bed](https://github.com/itchyny/bed) - A Vim-like binary editor written in Go.\n- [blank](https://github.com/Henry-Sarabia/blank) - Verify or remove blanks and whitespace from strings.\n- [bleep](https://github.com/sinhashubham95/bleep) - Perform any number of actions on any set of OS signals in Go.\n- [boilr](https://github.com/tmrts/boilr) - Blazingly fast CLI tool for creating projects from boilerplate templates.\n- [changie](https://github.com/miniscruff/changie) - Automated changelog tool for preparing releases with lots of customization options.\n- [chyle](https://github.com/antham/chyle) - Changelog generator using a git repository with multiple configuration possibilities.\n- [circuit](https://github.com/cep21/circuit) - An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.\n- [circuitbreaker](https://github.com/rubyist/circuitbreaker) - Circuit Breakers in Go.\n- [clipboard](https://github.com/golang-design/clipboard) - 📋 cross-platform clipboard package in Go.\n- [clockwork](https://github.com/jonboulle/clockwork) - A simple fake clock for golang.\n- [cmd](https://github.com/SimonBaeumer/cmd) - Library for executing shell commands on osx, windows and linux.\n- [command](https://github.com/txgruppi/command) - Command pattern for Go with thread safe serial and parallel dispatcher.\n- [config-file-validator](https://github.com/Boeing/config-file-validator) - Cross Platform tool to validate configuration files.\n- [cookie](https://github.com/syntaqx/cookie) - Cookie struct parsing and helper package.\n- [copy-pasta](https://github.com/jutkko/copy-pasta) - Universal multi-workstation clipboard that uses S3 like backend for the storage.\n- [countries](https://github.com/biter777/countries) - Full implementation of ISO-3166-1, ISO-4217, ITU-T E.164, Unicode CLDR and IANA ccTLD standards.\n- [countries](https://github.com/pioz/countries) - All you need when you are working with countries in Go.\n- [create-go-app](https://github.com/create-go-app/cli) - A powerful CLI for create a new production-ready project with backend (Golang), frontend (JavaScript, TypeScript) & deploy automation (Ansible, Docker) by running one command.\n- [cryptgo](https://github.com/Gituser143/cryptgo) - Crytpgo is a TUI based application written purely in Go to monitor and observe cryptocurrency prices in real time!\n- [ctop](https://github.com/bcicen/ctop) - [Top-like](https://ctop.sh) interface (e.g. htop) for container metrics.\n- [ctxutil](https://github.com/posener/ctxutil) - A collection of utility functions for contexts.\n- [cvt](https://github.com/shockerli/cvt) - Easy and safe convert any value to another type.\n- [dbt](https://github.com/nikogura/dbt) - A framework for running self-updating signed binaries from a central, trusted repository.\n- [Death](https://github.com/vrecan/death) - Managing go application shutdown with signals.\n- [debounce](https://github.com/floatdrop/debounce) - A zero-allocation debouncer written in Go.\n- [delve](https://github.com/derekparker/delve) - Go debugger.\n- [dive](https://github.com/wagoodman/dive) - A tool for exploring each layer in a Docker image.\n- [dlog](https://github.com/kirillDanshin/dlog) - Compile-time controlled logger to make your release smaller without removing debug calls.\n- [EaseProbe](https://github.com/megaease/easeprobe) - A simple, standalone, and lightWeight tool that can do health/status checking daemon, support HTTP/TCP/SSH/Shell/Client/... probes, and Slack/Discord/Telegram/SMS... notification.\n- [equalizer](https://github.com/reugn/equalizer) - Quota manager and rate limiter collection for Go.\n- [ergo](https://github.com/cristianoliveira/ergo) - The management of multiple local services running over different ports made easy.\n- [evaluator](https://github.com/nullne/evaluator) - Evaluate an expression dynamically based on s-expression. It's simple and easy to extend.\n- [Failsafe-go](https://github.com/failsafe-go/failsafe-go) - Fault tolerance and resilience patterns for Go.\n- [filetype](https://github.com/h2non/filetype) - Small package to infer the file type checking the magic numbers signature.\n- [filler](https://github.com/yaronsumel/filler) - small utility to fill structs using \"fill\" tag.\n- [filter](https://github.com/gookit/filter) - provide filtering, sanitizing, and conversion of Go data.\n- [fzf](https://github.com/junegunn/fzf) - Command-line fuzzy finder written in Go.\n- [generate](https://github.com/go-playground/generate) - runs go generate recursively on a specified path or environment variable and can filter by regex.\n- [ghokin](https://github.com/antham/ghokin) - Parallelized formatter with no external dependencies for gherkin (cucumber, behat...).\n- [git-time-metric](https://github.com/git-time-metric/gtm) - Simple, seamless, lightweight time tracking for Git.\n- [git-tools](https://github.com/kazhuravlev/git-tools) - Tool to help manage git tags.\n- [gitbatch](https://github.com/isacikgoz/gitbatch) - manage your git repositories in one place.\n- [gitcs](https://github.com/knbr13/gitcs/) - Git Commits Visualizer, CLI tool to visualize your Git commits on your local machine.\n- [go-actuator](https://github.com/sinhashubham95/go-actuator) - Production ready features for Go based web frameworks.\n- [go-astitodo](https://github.com/asticode/go-astitodo) - Parse TODOs in your GO code.\n- [go-bind-plugin](https://github.com/wendigo/go-bind-plugin) - go:generate tool for wrapping symbols exported by golang plugins (1.8 only).\n- [go-bsdiff](https://github.com/gabstv/go-bsdiff) - Pure Go bsdiff and bspatch libraries and CLI tools.\n- [go-clip](https://github.com/prashantgupta24/go-clip) - A minimalistic clipboard manager for Mac.\n- [go-convert](https://github.com/Eun/go-convert) - Package go-convert enables you to convert a value into another type.\n- [go-countries](https://github.com/mikekonan/go-countries) - Lightweight lookup over ISO-3166 codes.\n- [go-dry](https://github.com/ungerik/go-dry) - DRY (don't repeat yourself) package for Go.\n- [go-events](https://github.com/deatil/go-events) - A go event and event'subscribe package, like wordpress hook functions.\n- [go-funk](https://github.com/thoas/go-funk) - Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...).\n- [go-health](https://github.com/Talento90/go-health) - Health package simplifies the way you add health check to your services.\n- [go-httpheader](https://github.com/mozillazg/go-httpheader) - Go library for encoding structs into Header fields.\n- [go-lambda-cleanup](https://github.com/karl-cardenas-coding/go-lambda-cleanup) - A CLI for removing unused or previous versions of AWS Lambdas.\n- [go-lock](https://github.com/viney-shih/go-lock) - go-lock is a lock library implementing read-write mutex and read-write trylock without starvation.\n- [go-pattern-match](https://github.com/PhakornKiong/go-pattern-match) - A Pattern matching library inspired by ts-pattern.\n- [go-pkg](https://github.com/chenquan/go-pkg) - A go toolkit.\n- [go-problemdetails](https://github.com/mvmaasakkers/go-problemdetails) - Go package for working with Problem Details.\n- [go-qr](https://github.com/piglig/go-qr) - A native, high-quality and minimalistic QR code generator.\n- [go-rate](https://github.com/beefsack/go-rate) - Timed rate limiter for Go.\n- [go-sitemap-generator](https://github.com/ikeikeikeike/go-sitemap-generator) - XML Sitemap generator written in Go.\n- [go-trigger](https://github.com/sadlil/go-trigger) - Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project.\n- [go-tripper](https://github.com/rajnandan1/go-tripper) - Tripper is a circuit breaker package for Go that allows you to circuit and control the status of circuits.\n- [go-type](https://github.com/mikekonan/go-types) - Library providing Go types for store/validation and transfer of ISO-4217, ISO-3166, and other types.\n- [goback](https://github.com/carlescere/goback) - Go simple exponential backoff package.\n- [goctx](https://github.com/zerosnake0/goctx) - Get your context value with high performance.\n- [godaemon](https://github.com/VividCortex/godaemon) - Utility to write daemons.\n- [godropbox](https://github.com/dropbox/godropbox) - Common libraries for writing Go services/applications from Dropbox.\n- [gofn](https://github.com/tiendc/gofn) - High performance utility functions written using Generics for Go 1.18+.\n- [golarm](https://github.com/msempere/golarm) - Fire alarms with system events.\n- [golog](https://github.com/mlimaloureiro/golog) - Easy and lightweight CLI tool to time track your tasks.\n- [gopencils](https://github.com/bndr/gopencils) - Small and simple package to easily consume REST APIs.\n- [goplaceholder](https://github.com/michiwend/goplaceholder) - a small golang lib to generate placeholder images.\n- [goreadability](https://github.com/philipjkim/goreadability) - Webpage summary extractor using Facebook Open Graph and arc90's readability.\n- [goreleaser](https://github.com/goreleaser/goreleaser) - Deliver Go binaries as fast and easily as possible.\n- [goreporter](https://github.com/wgliang/goreporter) - Golang tool that does static analysis, unit testing, code review and generate code quality report.\n- [goseaweedfs](https://github.com/linxGnu/goseaweedfs) - SeaweedFS client library with almost full features.\n- [gostrutils](https://github.com/ik5/gostrutils) - Collections of string manipulation and conversion functions.\n- [gotenv](https://github.com/subosito/gotenv) - Load environment variables from `.env` or any `io.Reader` in Go.\n- [goval](https://github.com/maja42/goval) - Evaluate arbitrary expressions in Go.\n- [graterm](https://github.com/skovtunenko/graterm) - Provides primitives to perform ordered (sequential/concurrent) GRAceful TERMination (aka shutdown) in Go application.\n- [grofer](https://github.com/pesos/grofer) - A system and resource monitoring tool written in Golang!\n- [gubrak](https://github.com/novalagung/gubrak) - Golang utility library with syntactic sugar. It's like lodash, but for golang.\n- [handy](https://github.com/miguelpragier/handy) - Many utilities and helpers like string handlers/formatters and validators.\n- [healthcheck](https://github.com/kazhuravlev/healthcheck) - A simple yet powerful readiness test for Kubernetes.\n- [hostctl](https://github.com/guumaster/hostctl) - A CLI tool to manage /etc/hosts with easy commands.\n- [htcat](https://github.com/htcat/htcat) - Parallel and Pipelined HTTP GET Utility.\n- [hub](https://github.com/github/hub) - wrap git commands with additional functionality to interact with github from the terminal.\n- [immortal](https://github.com/immortal/immortal) - \\*nix cross-platform (OS agnostic) supervisor.\n- [jet](https://github.com/NicoNex/jet) - Just Edit Text: a fast and powerful tool for finding and replacing file content and names using regular expressions.\n- [jsend](https://github.com/clevergo/jsend) - JSend's implementation written in Go.\n- [json-log-viewer](https://github.com/hedhyw/json-log-viewer) - Interactive viewer for JSON logs.\n- [jump](https://github.com/gsamokovarov/jump) - Jump helps you navigate faster by learning your habits.\n- [just](https://github.com/kazhuravlev/just) - Just a collection of useful functions for working with generic data structures.\n- [koazee](https://github.com/wesovilabs/koazee) - Library inspired in Lazy evaluation and functional programming that takes the hassle out of working with arrays.\n- [lancet](https://github.com/duke-git/lancet) - A comprehensive, efficient, and reusable util function library of go.\n- [lang](https://github.com/maxbolgarin/lang) - Generic one-liners to work with variables, slices and maps without boilerplate code.\n- [lets-go](https://github.com/aplescia-chwy/lets-go) - Go module that provides common utilities for Cloud Native REST API development. Also contains AWS Specific utilities.\n- [limiters](https://github.com/mennanov/limiters) - Rate limiters for distributed applications in Golang with configurable back-ends and distributed locks.\n- [lo](https://github.com/samber/lo) - A Lodash like Go library based on Go 1.18+ Generics (map, filter, contains, find...)\n- [loncha](https://github.com/kazu/loncha) - A high-performance slice Utilities.\n- [lrserver](https://github.com/jaschaephraim/lrserver) - LiveReload server for Go.\n- [mani](https://github.com/alajmo/mani) - CLI tool to help you manage multiple repositories.\n- [mc](https://github.com/minio/mc) - Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems.\n- [mergo](https://github.com/imdario/mergo) - Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n- [mimemagic](https://github.com/zRedShift/mimemagic) - Pure Go ultra performant MIME sniffing library/utility.\n- [mimesniffer](https://github.com/aofei/mimesniffer) - A MIME type sniffer for Go.\n- [mimetype](https://github.com/gabriel-vasile/mimetype) - Package for MIME type detection based on magic numbers.\n- [minify](https://github.com/tdewolff/minify) - Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats.\n- [minquery](https://github.com/icza/minquery) - MongoDB / mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off).\n- [moldova](https://github.com/StabbyCutyou/moldova) - Utility for generating random data based on an input template.\n- [mole](https://github.com/davrodpin/mole) - cli app to easily create ssh tunnels.\n- [mongo-go-pagination](https://github.com/gobeam/mongo-go-pagination) - Mongodb Pagination for official mongodb/mongo-go-driver package which supports both normal queries and Aggregation pipelines.\n- [mssqlx](https://github.com/linxGnu/mssqlx) - Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind.\n- [multitick](https://github.com/VividCortex/multitick) - Multiplexor for aligned tickers.\n- [netbug](https://github.com/e-dard/netbug) - Easy remote profiling of your services.\n- [nfdump](https://github.com/chrispassas/nfdump) - Read nfdump netflow files.\n- [nostromo](https://github.com/pokanop/nostromo) - CLI for building powerful aliases.\n- [okrun](https://github.com/xta/okrun) - go run error steamroller.\n- [olaf](https://github.com/btnguyen2k/olaf) - Twitter Snowflake implemented in Go.\n- [onecache](https://github.com/adelowo/onecache) - Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc).\n- [optional](https://github.com/kazhuravlev/optional) - Optional struct fields and vars.\n- [panicparse](https://github.com/maruel/panicparse) - Groups similar goroutines and colorizes stack dump.\n- [pattern-match](https://github.com/alexpantyukhin/go-pattern-match) - Pattern matching library.\n- [peco](https://github.com/peco/peco) - Simplistic interactive filtering tool.\n- [pgo](https://github.com/arthurkushman/pgo) - Convenient functions for PHP community.\n- [pm](https://github.com/VividCortex/pm) - Process (i.e. goroutine) manager with an HTTP API.\n- [pointer](https://github.com/xorcare/pointer) - Package pointer contains helper routines for simplifying the creation of optional fields of basic type.\n- [ptr](https://github.com/gotidy/ptr) - Package that provide functions for simplified creation of pointers from constants of basic types.\n- [rclient](https://github.com/zpatrick/rclient) - Readable, flexible, simple-to-use client for REST APIs.\n- [remote-touchpad](https://github.com/Unrud/remote-touchpad) - Control mouse and keyboard from a smartphone.\n- [repeat](https://github.com/ssgreg/repeat) - Go implementation of different backoff strategies useful for retrying operations and heartbeating.\n- [request](https://github.com/mozillazg/request) - Go HTTP Requests for Humans™.\n- [rerun](https://github.com/ivpusic/rerun) - Recompiling and rerunning go apps when source changes.\n- [rest-go](https://github.com/edermanoel94/rest-go) - A package that provide many helpful methods for working with rest api.\n- [retry](https://github.com/kamilsk/retry) - The most advanced functional mechanism to perform actions repetitively until successful.\n- [retry](https://github.com/percolate/retry) - A simple but highly configurable retry package for Go.\n- [retry](https://github.com/thedevsaddam/retry) - Simple and easy retry mechanism package for Go.\n- [retry](https://github.com/shafreeck/retry) - A pretty simple library to ensure your work to be done.\n- [retry-go](https://github.com/avast/retry-go) - Simple library for retry mechanism.\n- [retry-go](https://github.com/rafaeljesus/retry-go) - Retrying made simple and easy for golang.\n- [robustly](https://github.com/VividCortex/robustly) - Runs functions resiliently, catching and restarting panics.\n- [rospo](https://github.com/ferama/rospo) - Simple and reliable ssh tunnels with embedded ssh server in Golang.\n- [scan](https://github.com/blockloop/scan) - Scan golang `sql.Rows` directly to structs, slices, or primitive types.\n- [scan](https://github.com/wroge/scan) - Scan sql rows into any type powered by generics.\n- [scany](https://github.com/georgysavva/scany) - Library for scanning data from a database into Go structs and more.\n- [serve](https://github.com/syntaqx/serve) - A static http server anywhere you need.\n- [sesh](https://github.com/joshmedeski/sesh) - Sesh is a CLI that helps you create and manage tmux sessions quickly and easily using zoxide.\n- [set](https://github.com/nofeaturesonlybugs/set) - Performant and flexible struct mapping and loose type conversion.\n- [shutdown](https://github.com/ztrue/shutdown) - App shutdown hooks for `os.Signal` handling.\n- [silk](https://github.com/chrispassas/silk) - Read silk netflow files.\n- [slice](https://github.com/psampaz/slice) - Type-safe functions for common Go slice operations.\n- [sliceconv](https://github.com/Henry-Sarabia/sliceconv) - Slice conversion between primitive types.\n- [slicer](https://github.com/leaanthony/slicer) - Makes working with slices easier.\n- [sorty](https://github.com/jfcg/sorty) - Fast Concurrent / Parallel Sorting.\n- [sqlx](https://github.com/jmoiron/sqlx) - provides a set of extensions on top of the excellent built-in database/sql package.\n- [sshman](https://github.com/shoobyban/sshman) - SSH Manager for authorized_keys files on multiple remote servers.\n- [statiks](https://github.com/janiltonmaciel/statiks) - Fast, zero-configuration, static HTTP filer server.\n- [Storm](https://github.com/asdine/storm) - Simple and powerful toolkit for BoltDB.\n- [structs](https://github.com/PumpkinSeed/structs) - Implement simple functions to manipulate structs.\n- [throttle](https://github.com/yudppp/throttle) - Throttle is an object that will perform exactly one action per duration.\n- [tik](https://github.com/andy2046/tik) - Simple and easy timing wheel package for Go.\n- [tome](https://github.com/cyruzin/tome) - Tome was designed to paginate simple RESTful APIs.\n- [toolbox](https://github.com/viant/toolbox) - Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer.\n- [UNIS](https://github.com/esemplastic/unis) - Common Architecture™ for String Utilities in Go.\n- [upterm](https://github.com/owenthereal/upterm) - A tool for developers to share terminal/tmux sessions securely over the web. It’s perfect for remote pair programming, accessing computers behind NATs/firewalls, remote debugging, and more.\n- [usql](https://github.com/knq/usql) - usql is a universal command-line interface for SQL databases.\n- [util](https://github.com/shomali11/util) - Collection of useful utility functions. (strings, concurrency, manipulations, ...).\n- [watchhttp](https://github.com/nikolaydubina/watchhttp) - Run command periodically and expose latest STDOUT or its rich delta as HTTP endpoint.\n- [wifiqr](https://github.com/reugn/wifiqr) - Wi-Fi QR Code Generator.\n- [wuzz](https://github.com/asciimoo/wuzz) - Interactive cli tool for HTTP inspection.\n- [xferspdy](https://github.com/monmohan/xferspdy) - Xferspdy provides binary diff and patch library in golang.\n- [xpool](https://github.com/peczenyj/xpool) - Yet another golang type safe object pool using generics.\n- [yogo](https://github.com/antham/yogo) - Check yopmail mails from command line.\n\n**[⬆ back to top](#contents)**\n\n## UUID\n\n_Libraries for working with UUIDs._\n\n- [fastuuid](https://github.com/rekby/fastuuid) - Fast generate UUIDv4 as string or bytes.\n- [goid](https://github.com/jakehl/goid) - Generate and Parse RFC4122 compliant V4 UUIDs.\n- [gouid](https://github.com/twharmon/gouid) - Generate cryptographically secure random string IDs with just one allocation.\n- [guid](https://github.com/sdrapkin/guid) - Fast cryptographically safe Guid generator for Go (~10x faster than `uuid`).\n- [nanoid](https://github.com/aidarkhanov/nanoid) - A tiny and efficient Go unique string ID generator.\n- [sno](https://github.com/muyo/sno) - Compact, sortable and fast unique IDs with embedded metadata.\n- [ulid](https://github.com/oklog/ulid) - Go implementation of ULID (Universally Unique Lexicographically Sortable Identifier).\n- [uniq](https://gitlab.com/skilstak/code/go/uniq) - No hassle safe, fast unique identifiers with commands.\n- [uuid](https://github.com/agext/uuid) - Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier.\n- [uuid](https://github.com/gofrs/uuid) - Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid.\n- [uuid](https://github.com/google/uuid) - Go package for UUIDs based on RFC 4122 and DCE 1.1: Authentication and Security Services.\n- [uuidcheck](https://github.com/ashwingopalsamy/uuidcheck) - A tiny, dependency-free Go library that validates UUIDs against standard RFC 4122 formatting, converts UUIDv7() into UTC timestamps.\n- [wuid](https://github.com/edwingeng/wuid) - An extremely fast globally unique number generator.\n- [xid](https://github.com/rs/xid) - Xid is a globally unique id generator library, ready to be safely used directly in your server code.\n\n**[⬆ back to top](#contents)**\n\n## Validation\n\n_Libraries for validation._\n\n- [checkdigit](https://github.com/osamingo/checkdigit) - Provide check digit algorithms (Luhn, Verhoeff, Damm) and calculators (ISBN, EAN, JAN, UPC, etc.).\n- [go-validator](https://github.com/tiendc/go-validator) - Validation library using Generics.\n- [gody](https://github.com/guiferpa/gody) - :balloon: A lightweight struct validator for Go.\n- [govalid](https://github.com/twharmon/govalid) - Fast, tag-based validation for structs.\n- [govalidator](https://github.com/asaskevich/govalidator) - Validators and sanitizers for strings, numerics, slices and structs.\n- [govalidator](https://github.com/thedevsaddam/govalidator) - Validate Golang request data with simple rules. Highly inspired by Laravel's request validation.\n- [hvalid](https://github.com/lyonnee/hvalid) hvalid is a lightweight validation library written in Go language. It provides a custom validator interface and a series of common validation functions to help developers quickly implement data validation.\n- [jio](https://github.com/faceair/jio) - jio is a json schema validator similar to [joi](https://github.com/hapijs/joi).\n- [ozzo-validation](https://github.com/go-ozzo/ozzo-validation) - Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags.\n- [validate](https://github.com/gookit/validate) - Go package for data validation and filtering. support validate Map, Struct, Request(Form, JSON, url.Values, Uploaded Files) data and more features.\n- [validate](https://github.com/gobuffalo/validate) - This package provides a framework for writing validations for Go applications.\n- [validator](https://github.com/go-playground/validator) - Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.\n- [Validator](https://github.com/go-the-way/validator) - A lightweight model validator written in Go.Contains VFs:Min, Max, MinLength, MaxLength, Length, Enum, Regex.\n- [valix](https://github.com/marrow16/valix) Go package for validating requests\n- [Zog](https://github.com/Oudwins/zog) - A [Zod](https://github.com/colinhacks/zod) inspired schema builder for runtime value parsing and validation.\n  **[⬆ back to top](#contents)**\n\n## Version Control\n\n_Libraries for version control._\n\n- [cli](https://gitlab.com/gitlab-org/cli) - An open-source GitLab command line tool bringing GitLab's cool features to your command line.\n- [froggit-go](https://github.com/jfrog/froggit-go) - Froggit-Go is a Go library, allowing to perform actions on VCS providers.\n- [git2go](https://github.com/libgit2/git2go) - Go bindings for libgit2.\n- [githooks](https://github.com/gabyx/githooks) - Per-repo and shared Git hooks with version control and auto update.\n- [go-git](https://github.com/go-git/go-git) - highly extensible Git implementation in pure Go.\n- [go-vcs](https://github.com/sourcegraph/go-vcs) - manipulate and inspect VCS repositories in Go.\n- [hercules](https://github.com/src-d/hercules) - gaining advanced insights from Git repository history.\n- [hgo](https://github.com/beyang/hgo) - Hgo is a collection of Go packages providing read-access to local Mercurial repositories.\n\n**[⬆ back to top](#contents)**\n\n## Video\n\n_Libraries for manipulating video._\n\n- [gmf](https://github.com/3d0c/gmf) - Go bindings for FFmpeg av\\* libraries.\n- [go-astiav](https://github.com/asticode/go-astiav) - Better C bindings for ffmpeg in GO.\n- [go-astisub](https://github.com/asticode/go-astisub) - Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).\n- [go-astits](https://github.com/asticode/go-astits) - Parse and demux MPEG Transport Streams (.ts) natively in GO.\n- [go-mpd](https://github.com/unki2aut/go-mpd) - Parser and generator library for MPEG-DASH manifest files.\n- [goav](https://github.com/giorgisio/goav) - Comprehensive Go bindings for FFmpeg.\n- [gortsplib](https://github.com/aler9/gortsplib) - Pure Go RTSP server and client library.\n- [hls-m3u8](https://github.com/Eyevinn/hls-m3u8) - Parser and generator for HLS (M3U8) playlists; kept up to date with the spec.\n- [libvlc-go](https://github.com/adrg/libvlc-go) - Go bindings for libvlc 2.X/3.X/4.X (used by the VLC media player).\n- [mp4ff](https://github.com/Eyevinn/mp4ff) - Library and tools for working with MP4 files containing video, audio, subtitles, or metadata.\n- [v4l](https://github.com/korandiz/v4l) - Video capture library for Linux, written in Go.\n\n**[⬆ back to top](#contents)**\n\n## Web Frameworks\n\n_Full stack web frameworks._\n\n- [Atreugo](https://github.com/savsgio/atreugo) - High performance and extensible micro web framework with zero memory allocations in hot paths.\n- [Beego](https://github.com/beego/beego) - beego is an open-source, high-performance web framework for the Go programming language.\n- [Confetti Framework](https://confetti-framework.github.io/docs/) - Confetti is a Go web application framework with an expressive, elegant syntax. Confetti combines the elegance of Laravel and the simplicity of Go.\n- [Don](https://github.com/abemedia/go-don) - A highly performant and simple to use API framework.\n- [Echo](https://github.com/labstack/echo) - High performance, minimalist Go web framework.\n- [Fastschema](https://github.com/fastschema/fastschema) - A flexible Go web framework and Headless CMS.\n- [Fiber](https://github.com/gofiber/fiber) - An Express.js inspired web framework build on Fasthttp.\n- [Flamingo](https://github.com/i-love-flamingo/flamingo) - Framework for pluggable web projects. Including a concept for modules and offering features for DI, Configareas, i18n, template engines, graphql, observability, security, events, routing & reverse routing etc.\n- [Flamingo Commerce](https://github.com/i-love-flamingo/flamingo-commerce) - Providing e-commerce features using clean architecture like DDD and ports and adapters, that you can use to build flexible e-commerce applications.\n- [Fuego](https://github.com/go-fuego/fuego) - The framework for busy Go developers! Web framework generating OpenAPI 3 spec from source code.\n- [Gin](https://github.com/gin-gonic/gin) - Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity.\n- [Ginrpc](https://github.com/xxjwxc/ginrpc) - Gin parameter automatic binding tool,gin rpc tools.\n- [Goa](https://github.com/goadesign/goa) - Goa provides a holistic approach for developing remote APIs and microservices in Go.\n- [GoFr](https://github.com/gofr-dev/gofr) - Gofr is an opinionated microservice development framework.\n- [GoFrame](https://github.com/gogf/gf) - GoFrame is a modular, powerful, high-performance and enterprise-class application development framework of Golang.\n- [golamb](https://github.com/twharmon/golamb) - Golamb makes it easier to write API endpoints for use with AWS Lambda and API Gateway.\n- [Gone](https://github.com/gone-io/gone) - A lightweight dependency injection and web framework inspired by Spring.\n- [goravel](https://github.com/goravel/goravel) - A Laravel-inspired web framework with ORM, authentication, queue, task scheduling, and more built-in features.\n- [Goyave](https://github.com/go-goyave/goyave) - Feature-complete REST API framework aimed at clean code and fast development, with powerful built-in functionalities.\n- [Hertz](https://github.com/cloudwego/hertz) - A high-performance and strong-extensibility Go HTTP framework that helps developers build microservices.\n- [hiboot](https://github.com/hidevopsio/hiboot) - hiboot is a high performance web application framework with auto configuration and dependency injection support.\n- [Huma](https://github.com/danielgtaylor/huma/) - Framework for modern REST/GraphQL APIs with built-in OpenAPI 3, generated documentation, and a CLI.\n- [iWF](https://github.com/indeedeng/iwf) - iWF is an all-in-one platform for developing long-running business processes. It offers a convenient abstraction for utilizing databases, ElasticSearch, message queues, durable timers, and more, with a clean, simple, and user-friendly interface.\n- [Lit](https://github.com/jvcoutinho/lit) - Highly performant declarative web framework for Golang, aiming for simplicity and quality of life.\n- [Microservice](https://github.com/claygod/microservice) - The framework for the creation of microservices, written in Golang.\n- [patron](https://github.com/beatlabs/patron) - Patron is a microservice framework following best cloud practices with a focus on productivity.\n- [Pnutmux](https://gitlab.com/fruitygo/pnutmux) - Pnutmux is a powerful Go web framework that uses regex for matching and handling HTTP requests. It offers features such as CORS handling, structured logging, URL parameters extraction, middlewares, and concurrency limiting.\n- [Revel](https://github.com/revel/revel) - High-productivity web framework for the Go language.\n- [rk-boot](https://github.com/rookie-ninja/rk-boot) - A bootstrapper library for building enterprise go microservice with Gin and gRPC quickly and easily.\n- [Ronykit](https://github.com/clubpay/ronykit) - Web framework with pluggable architecture and very performant.\n- [rux](https://github.com/gookit/rux) - Simple and fast web framework for build golang HTTP applications.\n- [templui](https://github.com/axzilla/templui) - Modern UI Components for Go & Templ.\n- [uAdmin](https://github.com/uadmin/uadmin) - Fully featured web framework for Golang, inspired by Django.\n- [WebGo](https://github.com/naughtygopher/webgo) - A micro-framework to build web apps with handler chaining, middleware, and context injection. With standard library-compliant HTTP handlers (i.e., `http.HandlerFunc`)..\n- [Yokai](https://github.com/ankorstore/yokai) - Simple, modular, and observable Go framework for backend applications.\n\n**[⬆ back to top](#contents)**\n\n### Middlewares\n\n#### Actual middlewares\n\n- [client-timing](https://github.com/posener/client-timing) - An HTTP client for Server-Timing header.\n- [CORS](https://github.com/rs/cors) - Easily add CORS capabilities to your API.\n- [echo-middleware](https://github.com/faabiosr/echo-middleware) - Middleware for Echo framework with logging and metrics.\n- [formjson](https://github.com/rs/formjson) - Transparently handle JSON input as a standard form POST.\n- [go-fault](https://github.com/github/go-fault) - Fault injection middleware for Go.\n- [go-server-timing](https://github.com/mitchellh/go-server-timing) - Add/parse Server-Timing header.\n- [Limiter](https://github.com/ulule/limiter) - Dead simple rate limit middleware for Go.\n- [ln-paywall](https://github.com/philippgille/ln-paywall) - Go middleware for monetizing APIs on a per-request basis with the Lightning Network (Bitcoin).\n- [mid](https://github.com/bobg/mid) - Miscellaneous HTTP middleware features: idiomatic error return from handlers; receive/respond with JSON data; request tracing; and more.\n- [rk-gin](https://github.com/rookie-ninja/rk-gin) - Middleware for Gin framework with logging, metrics, auth, tracing etc.\n- [rk-grpc](https://github.com/rookie-ninja/rk-grpc) - Middleware for gRPC with logging, metrics, auth, tracing etc.\n- [Tollbooth](https://github.com/didip/tollbooth) - Rate limit HTTP request handler.\n- [XFF](https://github.com/sebest/xff) - Handle `X-Forwarded-For` header and friends.\n\n#### Libraries for creating HTTP middlewares\n\n- [alice](https://github.com/justinas/alice) - Painless middleware chaining for Go.\n- [catena](https://github.com/codemodus/catena) - http.Handler wrapper catenation (same API as \"chain\").\n- [chain](https://github.com/codemodus/chain) - Handler wrapper chaining with scoped data (net/context-based \"middleware\").\n- [gores](https://github.com/alioygur/gores) - Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs.\n- [interpose](https://github.com/carbocation/interpose) - Minimalist net/http middleware for golang.\n- [mediary](https://github.com/HereMobilityDevelopers/mediary) - add interceptors to `http.Client` to allow dumping/shaping/tracing/... of requests/responses.\n- [muxchain](https://github.com/stephens2424/muxchain) - Lightweight middleware for net/http.\n- [negroni](https://github.com/urfave/negroni) - Idiomatic HTTP middleware for Golang.\n- [render](https://github.com/unrolled/render) - Go package for easily rendering JSON, XML, and HTML template responses.\n- [renderer](https://github.com/thedevsaddam/renderer) - Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go.\n- [rye](https://github.com/InVisionApp/rye) - Tiny Go middleware library (with canned Middlewares) that supports JWT, CORS, Statsd, and Go 1.7 context.\n- [stats](https://github.com/thoas/stats) - Go middleware that stores various information about your web application.\n\n**[⬆ back to top](#contents)**\n\n### Routers\n\n- [alien](https://github.com/gernest/alien) - Lightweight and fast http router from outer space.\n- [bellt](https://github.com/GuilhermeCaruso/bellt) - A simple Go HTTP router.\n- [Bone](https://github.com/go-zoo/bone) - Lightning Fast HTTP Multiplexer.\n- [Bxog](https://github.com/claygod/Bxog) - Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters.\n- [chi](https://github.com/go-chi/chi) - Small, fast and expressive HTTP router built on net/context.\n- [fasthttprouter](https://github.com/buaazp/fasthttprouter) - High performance router forked from `httprouter`. The first router fit for `fasthttp`.\n- [FastRouter](https://github.com/razonyang/fastrouter) - a fast, flexible HTTP router written in Go.\n- [goblin](https://github.com/bmf-san/goblin) - A golang http router based on trie tree.\n- [gocraft/web](https://github.com/gocraft/web) - Mux and middleware package in Go.\n- [Goji](https://github.com/goji/goji) - Goji is a minimalistic and flexible HTTP request multiplexer with support for `net/context`.\n- [GoLobby/Router](https://github.com/golobby/router) - GoLobby Router is a lightweight yet powerful HTTP router for the Go programming language.\n- [goroute](https://github.com/goroute/route) - Simple yet powerful HTTP request multiplexer.\n- [GoRouter](https://github.com/vardius/gorouter) - GoRouter is a Server/API micro framework, HTTP request router, multiplexer, mux that provides request router with middleware supporting `net/context`.\n- [gowww/router](https://github.com/gowww/router) - Lightning fast HTTP router fully compatible with the net/http.Handler interface.\n- [httprouter](https://github.com/julienschmidt/httprouter) - High performance router. Use this and the standard http handlers to form a very high performance web framework.\n- [httptreemux](https://github.com/dimfeld/httptreemux) - High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter.\n- [lars](https://github.com/go-playground/lars) - Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks.\n- [mux](https://github.com/gorilla/mux) - Powerful URL router and dispatcher for golang.\n- [nchi](https://github.com/muir/nchi) - chi-like router built on httprouter with dependency injection based middleware wrappers\n- [ngamux](https://github.com/ngamux/ngamux) - Simple HTTP router for Go.\n- [ozzo-routing](https://github.com/go-ozzo/ozzo-routing) - An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs.\n- [pure](https://github.com/go-playground/pure) - Is a lightweight HTTP router that sticks to the std \"net/http\" implementation.\n- [Siesta](https://github.com/VividCortex/siesta) - Composable framework to write middleware and handlers.\n- [vestigo](https://github.com/husobee/vestigo) - Performant, stand-alone, HTTP compliant URL Router for go web applications.\n- [violetear](https://github.com/nbari/violetear) - Go HTTP router.\n- [xmux](https://github.com/rs/xmux) - High performance muxer based on `httprouter` with `net/context` support.\n- [xujiajun/gorouter](https://github.com/xujiajun/gorouter) - A simple and fast HTTP router for Go.\n\n**[⬆ back to top](#contents)**\n\n## WebAssembly\n\n- [dom](https://github.com/dennwc/dom) - DOM library.\n- [Extism Go SDK](https://github.com/extism/go-sdk) - Universal, cross-language WebAssembly framework for building plug-in systems and polyglot apps.\n- [go-canvas](https://github.com/markfarnan/go-canvas) - Library to use HTML5 Canvas, with all drawing within go code.\n- [tinygo](https://github.com/tinygo-org/tinygo) - Go compiler for small places. Microcontrollers, WebAssembly, and command-line tools. Based on LLVM.\n- [vert](https://github.com/norunners/vert) - Interop between Go and JS values.\n- [wasmbrowsertest](https://github.com/agnivade/wasmbrowsertest) - Run Go WASM tests in your browser.\n- [webapi](https://github.com/gowebapi/webapi) - Bindings for DOM and HTML generated from WebIDL.\n\n**[⬆ back to top](#contents)**\n\n## Webhooks Server\n\n- [webhook](https://github.com/adnanh/webhook) - Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server.\n- [webhooked](https://github.com/42Atomys/webhooked) - A webhook receiver on steroids: handle, secure, format and store a Webhook payload has never been easier.\n- [WebhookX](https://github.com/webhookx-io/webhookx) - A webhooks gateway for message receiving, processing, and reliable delivering.\n\n**[⬆ back to top](#contents)**\n\n## Windows\n\n- [d3d9](https://github.com/gonutz/d3d9) - Go bindings for Direct3D9.\n- [go-ole](https://github.com/go-ole/go-ole) - Win32 OLE implementation for golang.\n- [gosddl](https://github.com/MonaxGT/gosddl) - Converter from SDDL-string to user-friendly JSON. SDDL consist of four part: Owner, Primary Group, DACL, SACL.\n\n**[⬆ back to top](#contents)**\n\n## Workflow Frameworks\n\n_Libraries for creating Workflows._\n\n- [Cadence-client](https://github.com/uber-go/cadence-client) - A framework for authoring workflows and activities running on top of the Cadence orchestration engine made by Uber.\n- [Dagu](https://github.com/dagu-go/dagu) - No-code workflow executor. it executes DAGs defined in a simple YAML format.\n- [go-dag](https://github.com/rhosocial/go-dag) - A framework developed in Go that manages the execution of workflows described by directed acyclic graphs.\n- [go-taskflow](https://github.com/noneback/go-taskflow) - A taskflow-like General-purpose Task-parallel Programming Framework with integrated visualizer and profiler.\n- [workflow](https://github.com/luno/workflow) - A tech stack agnostic Event Driven Workflow framework.\n\n**[⬆ back to top](#contents)**\n\n## XML\n\n_Libraries and tools for manipulating XML._\n\n- [XML-Comp](https://github.com/xml-comp/xml-comp) - Simple command line XML comparer that generates diffs of folders, files and tags.\n- [xml2map](https://github.com/sbabiv/xml2map) - XML to MAP converter written Golang.\n- [xmlquery](https://github.com/antchfx/xmlquery) - xmlquery is Golang XPath package for XML query.\n- [xmlwriter](https://github.com/shabbyrobe/xmlwriter) - Procedural XML generation API based on libxml2's xmlwriter module.\n- [xpath](https://github.com/antchfx/xpath) - XPath package for Go.\n- [zek](https://github.com/miku/zek) - Generate a Go struct from XML.\n\n## Zero Trust\n\n_Libraries and tools to implement Zero Trust architectures._\n\n- [Cosign](https://github.com/sigstore/cosign) - Container Signing, Verification and Storage in an OCI registry.\n- [in-toto](https://github.com/in-toto/in-toto-golang) - Go implementation of the in-toto (provides a framework to protect the integrity of the software supply chain) python reference implementation.\n- [OpenZiti](https://github.com/openziti/ziti) - A full, open source zero trust overlay network. Including numerous SDKs for numerous languages such as [golang](https://github.com/openziti/sdk-golang) allowing you to embed zero trust principles directly into your applications. The [OpenZiti Test Kitchen](https://github.com/openziti-test-kitchen) has numerous examples to draw inspiration from including a [zero trust ssh client - zssh](https://github.com/openziti-test-kitchen/zssh)\n- [Spiffe-Vault](https://github.com/philips-labs/spiffe-vault) - Utilizes Spiffe JWT authentication with Hashicorp Vault for secretless authentication.\n- [Spire](https://github.com/spiffe/spire) - SPIRE (the SPIFFE Runtime Environment) is a toolchain of APIs for establishing trust between software systems across a wide variety of hosting platforms.\n\n## Code Analysis\n\n_Source code analysis tools, also known as Static Application Security Testing (SAST) Tools._\n\n- [apicompat](https://github.com/bradleyfalzon/apicompat) - Checks recent changes to a Go project for backwards incompatible changes.\n- [asty](https://github.com/asty-org/asty) - Converts golang AST to JSON and JSON to AST.\n- [blanket](https://gitlab.com/verygoodsoftwarenotvirus/blanket) - blanket is a tool that helps you catch functions which don't have direct unit tests in your Go packages.\n- [ChainJacking](https://github.com/Checkmarx/chainjacking) - Find which of your Go lang direct GitHub dependencies is susceptible to ChainJacking attack.\n- [Chronos](https://github.com/amit-davidson/Chronos) - Detects race conditions statically\n- [dupl](https://github.com/mibk/dupl) - Tool for code clone detection.\n- [errcheck](https://github.com/kisielk/errcheck) - Errcheck is a program for checking for unchecked errors in Go programs.\n- [fatcontext](https://github.com/Crocmagnon/fatcontext) - Fatcontext detects nested contexts in loops or function literals.\n- [go-checkstyle](https://github.com/qiniu/checkstyle) - checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style referred to some points in Go Code Review Comments.\n- [go-cleanarch](https://github.com/roblaszczak/go-cleanarch) - go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects.\n- [go-critic](https://github.com/go-critic/go-critic) - source code linter that brings checks that are currently not implemented in other linters.\n- [go-mod-outdated](https://github.com/psampaz/go-mod-outdated) - An easy way to find outdated dependencies of your Go projects.\n- [goast-viewer](https://github.com/yuroyoro/goast-viewer) - Web based Golang AST visualizer.\n- [goimports](https://pkg.go.dev/golang.org/x/tools/cmd/goimports) - Tool to fix (add, remove) your Go imports automatically.\n- [golang-ifood-sdk](https://github.com/arxdsilva/golang-ifood-sdk) - iFood API SDK.\n- [golangci-lint](https://github.com/golangci/golangci-lint) – A fast Go linters runner. It runs linters in parallel, uses caching, supports `yaml` config, has integrations with all major IDE and has dozens of linters included.\n- [golines](https://github.com/segmentio/golines) - Formatter that automatically shortens long lines in Go code.\n- [GoPlantUML](https://github.com/jfeliu007/goplantuml) - Library and CLI that generates text plantump class diagram containing information about structures and interfaces with the relationship among them.\n- [goreturns](https://github.com/sqs/goreturns) - Adds zero-value return statements to match the func return types.\n- [gostatus](https://github.com/shurcooL/gostatus) - Command line tool, shows the status of repositories that contain Go packages.\n- [lint](https://github.com/surullabs/lint) - Run linters as part of go test.\n- [php-parser](https://github.com/z7zmey/php-parser) - A Parser for PHP written in Go.\n- [revive](https://github.com/mgechev/revive) – ~6x faster, stricter, configurable, extensible, and beautiful drop-in replacement for `golint`.\n- [staticcheck](https://github.com/dominikh/go-tools/tree/master/cmd/staticcheck) - staticcheck is `go vet` on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.\n- [testifylint](https://github.com/Antonboom/testifylint) – A linter that checks usage of [github.com/stretchr/testify](https://github.com/stretchr/testify).\n- [tickgit](https://github.com/augmentable-dev/tickgit) - CLI and go package for surfacing code comment TODOs (in any language) and applying a `git blame`to identify the author.\n- [todocheck](https://github.com/preslavmihaylov/todocheck) - Static code analyser which links TODO comments in code with issues in your issue tracker.\n- [unconvert](https://github.com/mdempsky/unconvert) - Remove unnecessary type conversions from Go source.\n- [usestdlibvars](https://github.com/sashamelentyev/usestdlibvars) - A linter that detect the possibility to use variables/constants from the Go standard library.\n- [vacuum](https://github.com/daveshanley/vacuum) - An ultra-super-fast, lightweight OpenAPI linter and quality checking tool.\n- [validate](https://github.com/mccoyst/validate) - Automatically validates struct fields with tags.\n- [wrapcheck](https://github.com/tomarrell/wrapcheck) - A linter to check that errors from external packages are wrapped.\n\n**[⬆ back to top](#contents)**\n\n## Editor Plugins\n\n_Plugin for text editors and IDEs._\n\n- [coc-go language server extension for Vim/Neovim](https://github.com/josa42/coc-go) - This plugin adds [gopls](https://github.com/golang/tools/blob/master/gopls/README.md) features to Vim/Neovim.\n- [Go Doc](https://github.com/msyrus/vscode-go-doc) - A Visual Studio Code extension for showing definition in output and generating go doc.\n- [Go plugin for JetBrains IDEs](https://plugins.jetbrains.com/plugin/9568-go) - Go plugin for JetBrains IDEs.\n- [go-mode](https://github.com/dominikh/go-mode.el) - Go mode for GNU/Emacs.\n- [gocode](https://github.com/nsf/gocode) - Autocompletion daemon for the Go programming language.\n- [goimports-reviser](https://github.com/incu6us/goimports-reviser) - Formatting tool for imports.\n- [goprofiling](https://marketplace.visualstudio.com/items?itemName=MaxMedia.go-prof) - This extension adds benchmark profiling support for the Go language to VS Code.\n- [GoSublime](https://github.com/DisposaBoy/GoSublime) - Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features.\n- [gounit-vim](https://github.com/hexdigest/gounit-vim) - Vim plugin for generating Go tests based on the function's or method's signature.\n- [vim-compiler-go](https://github.com/rjohnsondev/vim-compiler-go) - Vim plugin to highlight syntax errors on save.\n- [vim-go](https://github.com/fatih/vim-go) - Go development plugin for Vim.\n- [vscode-go](https://github.com/golang/vscode-go) - Extension for Visual Studio Code (VS Code) which provides support for the Go language.\n- [Watch](https://github.com/eaburns/Watch) - Runs a command in an acme win on file changes.\n\n**[⬆ back to top](#contents)**\n\n## Go Generate Tools\n\n- [envdoc](https://github.com/g4s8/envdoc) - generate documentation for environment variables from Go source files.\n- [generic](https://github.com/usk81/generic) - flexible data type for Go.\n- [gocontracts](https://github.com/Parquery/gocontracts) - brings design-by-contract to Go by synchronizing the code with the documentation.\n- [godal](https://github.com/mafulong/godal) - Generate orm models corresponding to golang by specifying sql ddl file, which can be used by gorm.\n- [gonerics](https://github.com/bouk/gonerics) - Idiomatic Generics in Go.\n- [gotests](https://github.com/cweill/gotests) - Generate Go tests from your source code.\n- [gounit](https://github.com/hexdigest/gounit) - Generate Go tests using your own templates.\n- [hasgo](https://github.com/DylanMeeus/hasgo) - Generate Haskell inspired functions for your slices.\n- [options-gen](https://github.com/kazhuravlev/options-gen) - Functional options described by Dave Cheney's post \"Functional options for friendly APIs\".\n- [re2dfa](https://gitlab.com/opennota/re2dfa) - Transform regular expressions into finite state machines and output Go source code.\n- [sqlgen](https://github.com/anqiansong/sqlgen) - Generate gorm, xorm, sqlx, bun, sql code from SQL file or DSN.\n- [TOML-to-Go](https://xuri.me/toml-to-go) - Translates TOML into a Go type in the browser instantly.\n- [xgen](https://github.com/xuri/xgen) - XSD (XML Schema Definition) parser and Go/C/Java/Rust/TypeScript code generator.\n\n**[⬆ back to top](#contents)**\n\n## Go Tools\n\n- [decouple](https://github.com/bobg/decouple) - Find “overspecified” function parameters that could be generalized with interface types.\n- [docs](https://github.com/go-oas/docs) - Automatically generate RESTful API documentation for GO projects - aligned with Open API Specification standard.\n- [go-callvis](https://github.com/TrueFurby/go-callvis) - Visualize call graph of your Go program using dot format.\n- [go-size-analyzer](https://github.com/Zxilly/go-size-analyzer) - Analyze and visualize the size of dependencies in compiled Golang binaries, providing insight into their impact on the final build.\n- [go-swagger](https://github.com/go-swagger/go-swagger) - Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API.\n- [go-template-playground](https://bartventer.github.io/go-template-playground/) - An interactive environment to create and test Go templates.\n- [godbg](https://github.com/tylerwince/godbg) - Implementation of Rusts `dbg!` macro for quick and easy debugging during development.\n- [gomodrun](https://github.com/dustinblackman/gomodrun/) - Go tool that executes and caches binaries included in go.mod files.\n- [gotemplate.io](https://gotemplate.io/) - Online tool to preview `text/template` templates live.\n- [gotestdox](https://github.com/bitfield/gotestdox) - Show Go test results as readable sentences.\n- [gothanks](https://github.com/psampaz/gothanks) - GoThanks automatically stars your go.mod github dependencies, sending this way some love to their maintainers.\n- [gotutor](https://github.com/ahmedakef/gotutor) - Online Go Debugger & Visualizer.\n- [igo](https://github.com/rocketlaunchr/igo) - An igo to go transpiler (new language features for Go language!)\n- [modver](https://github.com/bobg/modver) - Compare two versions of a Go module to check the version-number change required (major, minor, or patchlevel), according to [semver](https://semver.org/) rules.\n- [MoniGO](https://github.com/iyashjayesh/monigo) - A performance monitoring library for Go applications. It provides real-time insights into application performance! 🚀\n- [OctoLinker](https://github.com/OctoLinker/browser-extension) - Navigate through go files efficiently with the OctoLinker browser extension for GitHub.\n- [richgo](https://github.com/kyoh86/richgo) - Enrich `go test` outputs with text decorations.\n- [roumon](https://github.com/becheran/roumon) - Monitor current state of all active goroutines via a command line interface.\n- [rts](https://github.com/galeone/rts) - RTS: response to struct. Generates Go structs from server responses.\n- [textra](https://github.com/ravsii/textra) - Extract Go struct field names, types and tags for filtering and exporting.\n- [typex](https://github.com/dtgorski/typex) - Examine Go types and their transitive dependencies, alternatively export results as TypeScript value objects (or types) declaration.\n\n**[⬆ back to top](#contents)**\n\n## Software Packages\n\n_Software written in Go._\n\n**[⬆ back to top](#contents)**\n\n### DevOps Tools\n\n- [abbreviate](https://github.com/dnnrly/abbreviate) - abbreviate is a tool turning long strings in to shorter ones with configurable separators, for example to embed branch names in to deployment stack IDs.\n- [alaz](https://github.com/ddosify/alaz) - Effortless, Low-Overhead, eBPF-based Kubernetes Monitoring.\n- [aptly](https://github.com/aptly-dev/aptly) - aptly is a Debian repository management tool.\n- [aurora](https://github.com/xuri/aurora) - Cross-platform web-based Beanstalkd queue server console.\n- [awsenv](https://github.com/soniah/awsenv) - Small binary that loads Amazon (AWS) environment variables for a profile.\n- [Balerter](https://github.com/balerter/balerter) - A self-hosted script-based alerting manager.\n- [Blast](https://github.com/dave/blast) - A simple tool for API load testing and batch jobs.\n- [bombardier](https://github.com/codesenberg/bombardier) - Fast cross-platform HTTP benchmarking tool.\n- [bosun](https://github.com/bosun-monitor/bosun) - Time Series Alerting Framework.\n- [cassowary](https://github.com/rogerwelin/cassowary) - Modern cross-platform HTTP load-testing tool written in Go.\n- [chaosmonkey](https://github.com/Netflix/chaosmonkey) - A resiliency tool that helps applications tolerate random instance failures.\n- [Ddosify](https://github.com/ddosify/ddosify) - High-performance load testing tool, written in Golang.\n- [decompose](https://github.com/s0rg/decompose) - tool to generate and process Docker containers connections graphs.\n- [DepCharge](https://github.com/centerorbit/depcharge) - Helps orchestrating the execution of commands across the many dependencies in larger projects.\n- [dish](https://github.com/thevxn/dish) - A lightweight, remotely configurable monitoring service.\n- [Docker](https://www.docker.com/) - Open platform for distributed applications for developers and sysadmins.\n- [docker-go-mingw](https://github.com/x1unix/docker-go-mingw) - Docker image for building Go binaries for Windows with MinGW toolchain.\n- [docker-volume-backup](https://github.com/offen/docker-volume-backup) - Backup Docker volumes locally or to any S3, WebDAV, Azure Blob Storage, Dropbox or SSH compatible storage.\n- [Dockerfile-Generator](https://github.com/ozankasikci/dockerfile-generator) - A go library and an executable that produces valid Dockerfiles using various input channels.\n- [dogo](https://github.com/liudng/dogo) - Monitoring changes in the source file and automatically compile and run (restart).\n- [drone-jenkins](https://github.com/appleboy/drone-jenkins) - Trigger downstream Jenkins jobs using a binary, docker or Drone CI.\n- [drone-scp](https://github.com/appleboy/drone-scp) - Copy files and artifacts via SSH using a binary, docker or Drone CI.\n- [Dropship](https://github.com/chrismckenzie/dropship) - Tool for deploying code via cdn.\n- [easyssh-proxy](https://github.com/appleboy/easyssh-proxy) - Golang package for easy remote execution through SSH and SCP downloading via `ProxyCommand`.\n- [fac](https://github.com/mkchoi212/fac) - Command-line user interface to fix git merge conflicts.\n- [Flannel](https://github.com/flannel-io/flannel) - Flannel is a network fabric for containers, designed for Kubernetes.\n- [Fleet device management](https://github.com/fleetdm/fleet) - Lightweight, programmable telemetry for servers and workstations.\n- [gaia](https://github.com/gaia-pipeline/gaia) - Build powerful pipelines in any programming language.\n- [ghorg](https://github.com/gabrie30/ghorg) - Quickly clone an entire org/users repositories into one directory - Supports GitHub, GitLab, Gitea, and Bitbucket.\n- [Gitea](https://github.com/go-gitea/gitea) - Fork of Gogs, entirely community driven.\n- [gitea-github-migrator](https://git.jonasfranz.software/JonasFranzDEV/gitea-github-migrator) - Migrate all your GitHub repositories, issues, milestones and labels to your Gitea instance.\n- [go-furnace](https://github.com/go-furnace/go-furnace) - Hosting solution written in Go. Deploy your Application with ease on AWS, GCP or DigitalOcean.\n- [go-rocket-update](https://github.com/mouuff/go-rocket-update) - A simple way to make self updating Go applications - Supports Github and Gitlab.\n- [go-selfupdate](https://github.com/sanbornm/go-selfupdate) - Enable your Go applications to self update.\n- [gobrew](https://github.com/cryptojuice/gobrew) - gobrew lets you easily switch between multiple versions of go.\n- [gobrew](https://github.com/kevincobain2000/gobrew) - Go version manager. Super simple tool to install and manage Go versions. Install go without root. Gobrew doesn't require shell rehash.\n- [godbg](https://github.com/sirnewton01/godbg) - Web-based gdb front-end application.\n- [Gogs](https://gogs.io/) - A Self Hosted Git Service in the Go Programming Language.\n- [gonative](https://github.com/inconshreveable/gonative) - Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages.\n- [govvv](https://github.com/ahmetalpbalkan/govvv) - “go build” wrapper to easily add version information into Go binaries.\n- [grapes](https://github.com/yaronsumel/grapes) - Lightweight tool designed to distribute commands over ssh with ease.\n- [GVM](https://github.com/moovweb/gvm) - GVM provides an interface to manage Go versions.\n- [Hey](https://github.com/rakyll/hey) - Hey is a tiny program that sends some load to a web application.\n- [httpref](https://github.com/dnnrly/httpref) - httpref is a handy CLI reference for HTTP methods, status codes, headers, and TCP and UDP ports.\n- [jcli](https://github.com/jenkins-zh/jenkins-cli) - Jenkins CLI allows you manage your Jenkins as an easy way.\n- [k3d](https://github.com/k3d-io/k3d) - Little helper to run CNCF's k3s in Docker.\n- [k3s](https://github.com/k3s-io/k3s) - Lightweight Kubernetes.\n- [k6](https://github.com/grafana/k6) - A modern load testing tool, using Go and JavaScript.\n- [kala](https://github.com/ajvb/kala) - Simplistic, modern, and performant job scheduler.\n- [kcli](https://github.com/cswank/kcli) - Command line tool for inspecting kafka topics/partitions/messages.\n- [kind](https://github.com/kubernetes-sigs/kind) - Kubernetes IN Docker - local clusters for testing Kubernetes.\n- [ko](https://github.com/google/ko) - Command line tool for building and deploying Go applications on Kubernetes\n- [kool](https://github.com/kool-dev/kool) - Command line tool for managing Docker environments as an easy way.\n- [kubeblocks](https://github.com/apecloud/kubeblocks) - KubeBlocks is an open-source control plane that runs and manages databases, message queues and other data infrastructure on K8s.\n- [kubernetes](https://github.com/kubernetes/kubernetes) - Container Cluster Manager from Google.\n- [kubeshark](https://github.com/kubeshark/kubeshark) - API traffic analyzer for Kubernetes, inspired by Wireshark, purposely built for Kubernetes.\n- [KubeVela](https://github.com/kubevela/kubevela) - Cloud native application delivery.\n- [KubeVPN](https://github.com/kubenetworks/kubevpn) - KubeVPN offers a Cloud-Native Dev Environment that seamlessly connects to your Kubernetes cluster network.\n- [KusionStack](https://github.com/KusionStack/kusion) - A unified programmable configuration techstack to deliver modern app in 'platform as code' and 'infra as code' approach.\n- [kwatch](https://github.com/abahmed/kwatch) - Monitor & detect crashes in your Kubernetes(K8s) cluster instantly.\n- [lstags](https://github.com/ivanilves/lstags) - Tool and API to sync Docker images across different registries.\n- [lwc](https://github.com/timdp/lwc) - A live-updating version of the UNIX wc command.\n- [manssh](https://github.com/xwjdsh/manssh) - manssh is a command line tool for managing your ssh alias config easily.\n- [Mantil](https://github.com/mantil-io/mantil) - Go specific framework for building serverless applications on AWS that enables you to focus on pure Go code while Mantil takes care of the infrastructure.\n- [minikube](https://github.com/kubernetes/minikube) - Run Kubernetes locally.\n- [Moby](https://github.com/moby/moby) - Collaborative project for the container ecosystem to assemble container-based systems.\n- [Mora](https://github.com/emicklei/mora) - REST server for accessing MongoDB documents and meta data.\n- [ostent](https://github.com/ostrost/ostent) - collects and displays system metrics and optionally relays to Graphite and/or InfluxDB.\n- [Packer](https://github.com/mitchellh/packer) - Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.\n- [Pewpew](https://github.com/bengadbois/pewpew) - Flexible HTTP command line stress tester.\n- [PipeCD](https://github.com/pipe-cd/pipecd) - A GitOps-style continuous delivery platform that provides consistent deployment and operations experience for any applications.\n- [podinfo](https://github.com/stefanprodan/podinfo) - Podinfo is a tiny web application made with Go that showcases best practices of running microservices in Kubernetes. Podinfo is used by CNCF projects like Flux and Flagger for end-to-end testing and workshops.\n- [Pomerium](https://github.com/pomerium/pomerium) - Pomerium is an identity-aware access proxy.\n- [Rodent](https://github.com/alouche/rodent) - Rodent helps you manage Go versions, projects and track dependencies.\n- [s3-proxy](https://github.com/oxyno-zeta/s3-proxy) - S3 Proxy with GET, PUT and DELETE methods and authentication (OpenID Connect and Basic Auth).\n- [s3gof3r](https://github.com/rlmcpherson/s3gof3r) - Small utility/library optimized for high speed transfer of large objects into and out of Amazon S3.\n- [s5cmd](https://github.com/peak/s5cmd) - Blazing fast S3 and local filesystem execution tool.\n- [Scaleway-cli](https://github.com/scaleway/scaleway-cli) - Manage BareMetal Servers from Command Line (as easily as with Docker).\n- [script](https://github.com/bitfield/script) - Making it easy to write shell-like scripts in Go for DevOps and system administration tasks.\n- [sg](https://github.com/ChristopherRabotin/sg) - Benchmarks a set of HTTP endpoints (like ab), with possibility to use the response code and data between each call for specific server stress based on its previous response.\n- [skm](https://github.com/TimothyYe/skm) - SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!\n- [StatusOK](https://github.com/sanathp/statusok) - Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected.\n- [tau](https://github.com/taubyte/tau) - Easily build Cloud Computing Platforms with features like Serverless WebAssembly Functions, Frontend Hosting, CI/CD, Object Storage, K/V Database, and Pub-Sub Messaging.\n- [terraform-provider-openapi](https://github.com/dikhan/terraform-provider-openapi) - Terraform provider plugin that dynamically configures itself at runtime based on an OpenAPI document (formerly known as swagger file) containing the definitions of the APIs exposed.\n- [tf-profile](https://github.com/datarootsio/tf-profile) - Profiler for Terraform runs. Generate global stats, resource-level stats or visualizations.\n- [tlm](https://github.com/yusufcanb/tlm) - Local cli copilot, powered by CodeLLaMa\n- [traefik](https://github.com/containous/traefik) - Reverse proxy and load balancer with support for multiple backends.\n- [trubka](https://github.com/xitonix/trubka) - A CLI tool to manage and troubleshoot Apache Kafka clusters with the ability of generically publishing/consuming protocol buffer and plain text events to/from Kafka.\n- [uTask](https://github.com/ovh/utask) - Automation engine that models and executes business processes declared in yaml.\n- [Vegeta](https://github.com/tsenart/vegeta) - HTTP load testing tool and library. It's over 9000!\n- [wait-for](https://github.com/dnnrly/wait-for) - Wait for something to happen (from the command line) before continuing. Easy orchestration of Docker services and other things.\n- [Wide](https://wide.b3log.org/login) - Web-based IDE for Teams using Golang.\n- [winrm-cli](https://github.com/masterzen/winrm-cli) - Cli tool to remotely execute commands on Windows machines.\n\n**[⬆ back to top](#contents)**\n\n### Other Software\n\n- [Better Go Playground](https://goplay.tools) - Go playground with syntax highlight, code completion and other features.\n- [blocky](https://github.com/0xERR0R/blocky) - Fast and lightweight DNS proxy as ad-blocker for local network with many features.\n- [borg](https://github.com/crufter/borg) - Terminal based search engine for bash snippets.\n- [boxed](https://github.com/tejo/boxed) - Dropbox based blog engine.\n- [Chapar](https://github.com/chapar-rest/chapar) - Chapar is a a cross-platform Postman alternative built with go, aims to help developers to test their api endpoints. it support http and grpc protocols.\n- [Cherry](https://github.com/rafael-santiago/cherry) - Tiny webchat server in Go.\n- [Circuit](https://github.com/gocircuit/circuit) - Circuit is a programmable platform-as-a-service (PaaS) and/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications.\n- [Comcast](https://github.com/tylertreat/Comcast) - Simulate bad network connections.\n- [confd](https://github.com/kelseyhightower/confd) - Manage local application configuration files using templates and data from etcd or consul.\n- [crawley](https://github.com/s0rg/crawley) - Web scraper/crawler for cli.\n- [croc](https://github.com/schollz/croc) - Easily and securely send files or folders from one computer to another.\n- [Documize](https://github.com/documize/community) - Modern wiki software that integrates data from SaaS tools.\n- [dp](https://github.com/scryinfo/dp) - Through SDK for data exchange with blockchain, developers can get easy access to DAPP development.\n- [drive](https://github.com/odeke-em/drive) - Google Drive client for the commandline.\n- [Duplicacy](https://github.com/gilbertchen/duplicacy) - A cross-platform network and cloud backup tool based on the idea of lock-free deduplication.\n- [fjira](https://github.com/mk-5/fjira) - A fuzzy-search based terminal UI application for Attlasian Jira\n- [Gebug](https://github.com/moshebe/gebug) - A tool that makes debugging of Dockerized Go applications super easy by enabling Debugger and Hot-Reload features, seamlessly.\n- [gfile](https://github.com/Antonito/gfile) - Securely transfer files between two computers, without any third party, over WebRTC.\n- [Go Package Store](https://github.com/shurcooL/Go-Package-Store) - App that displays updates for the Go packages in your GOPATH.\n- [go-peerflix](https://github.com/Sioro-Neoku/go-peerflix) - Video streaming torrent client.\n- [goblin](https://goblin.run) - Cloud builder for CLI's written in go lang\n- [GoBoy](https://github.com/Humpheh/goboy) - Nintendo Game Boy Color emulator written in Go.\n- [gocc](https://github.com/goccmack/gocc) - Gocc is a compiler kit for Go written in Go.\n- [GoDocTooltip](https://github.com/diankong/GoDocTooltip) - Chrome extension for Go Doc sites, which shows function description as tooltip at function list.\n- [Gokapi](https://github.com/Forceu/gokapi) - Lightweight server to share files, which expire after a set amount of downloads or days. Similar to Firefox Send, but without public upload.\n- [GoLand](https://jetbrains.com/go) - Full featured cross-platform Go IDE.\n- [GoNB](https://github.com/janpfeifer/gonb) - Interactive Go programming with Jupyter Notebooks (also works in VSCode, Binder and Google's Colab).\n- [Gor](https://github.com/buger/gor) - Http traffic replication tool, for replaying traffic from production to stage/dev environments in real-time.\n- [Guora](https://github.com/meloalright/guora) - A self-hosted Quora like web application written in Go.\n- [hoofli](https://github.com/dnnrly/hoofli) - Generate PlantUML diagrams from Chrome or Firefox network inspections.\n- [hotswap](https://github.com/edwingeng/hotswap) - A complete solution to reload your go code without restarting your server, interrupting or blocking any ongoing procedure.\n- [hugo](https://gohugo.io/) - Fast and Modern Static Website Engine.\n- [ide](https://github.com/thestrukture/ide) - Browser accessible IDE. Designed for Go with Go.\n- [joincap](https://github.com/assafmo/joincap) - Command-line utility for merging multiple pcap files together.\n- [JuiceFS](https://github.com/juicedata/juicefs) - Distributed POSIX file system built on top of Redis and AWS S3.\n- [Juju](https://jujucharms.com/) - Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more.\n- [Layli](https://layli.app) - Draw pretty layout diagrams as code.\n- [Leaps](https://github.com/jeffail/leaps) - Pair programming service using Operational Transforms.\n- [lgo](https://github.com/yunabe/lgo) - Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility.\n- [limetext](https://limetext.github.io) - Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text.\n- [LiteIDE](https://github.com/visualfc/liteide) - LiteIDE is a simple, open source, cross-platform Go IDE.\n- [mockingjay](https://github.com/quii/mockingjay-server) - Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests.\n- [myLG](https://github.com/mehrdadrad/mylg) - Command Line Network Diagnostic tool written in Go.\n- [naclpipe](https://github.com/unix4fun/naclpipe) - Simple NaCL EC25519 based crypto pipe tool written in Go.\n- [Neo-cowsay](https://github.com/Code-Hex/Neo-cowsay) - 🐮 cowsay is reborn. for a New Era.\n- [nes](https://github.com/fogleman/nes) - Nintendo Entertainment System (NES) emulator written in Go.\n- [Orbit](https://github.com/gulien/orbit) - A simple tool for running commands and generating files from templates.\n- [peg](https://github.com/pointlander/peg) - Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator.\n- [Plik](https://github.com/root-gg/plik) - Plik is a temporary file upload system (Wetransfer like) in Go.\n- [portal](https://github.com/SpatiumPortae/portal) - Portal is a quick and easy command-line file transfer utility from any computer to another.\n- [restic](https://github.com/restic/restic) - De-duplicating backup program.\n- [sake](https://github.com/alajmo/sake) - sake is a command runner for local and remote hosts.\n- [scc](https://github.com/boyter/scc) - Sloc Cloc and Code, a very fast accurate code counter with complexity calculations and COCOMO estimates.\n- [Seaweed File System](https://github.com/chrislusf/seaweedfs) - Fast, Simple and Scalable Distributed File System with O(1) disk seek.\n- [shell2http](https://github.com/msoap/shell2http) - Executing shell commands via http server (for prototyping or remote control).\n- [Snitch](https://github.com/lucasgomide/snitch) - Simple way to notify your team and many tools when someone has deployed any application via Tsuru.\n- [sonic](https://github.com/go-sonic/sonic) - Sonic is a Go Blogging Platform. Simple and Powerful.\n- [Stack Up](https://github.com/pressly/sup) - Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers.\n- [stew](https://github.com/marwanhawari/stew) - An independent package manager for compiled binaries.\n- [syncthing](https://syncthing.net/) - Open, decentralized file synchronization tool and protocol.\n- [tcpdog](https://github.com/mehrdadrad/tcpdog) - eBPF based TCP observability.\n- [tinycare-tui](https://github.com/DMcP89/tinycare-tui) - Small terminal app that shows git commits from the last 24 hours and week, current weather, some self care advice, a joke, and you current todo list tasks.\n- [toxiproxy](https://github.com/shopify/toxiproxy) - Proxy to simulate network and system conditions for automated tests.\n- [tsuru](https://tsuru.io/) - Extensible and open source Platform as a Service software.\n- [vaku](https://github.com/lingrino/vaku) - CLI & API for folder-based functions in Vault like copy, move, and search.\n- [vFlow](https://github.com/VerizonDigital/vflow) - High-performance, scalable and reliable IPFIX, sFlow and Netflow collector.\n- [Wave Terminal](https://waveterm.dev) - Wave is an open-source, AI-native terminal built for seamless developer workflows with inline rendering, a modern UI, and persistent sessions.\n- [wellington](https://github.com/wellington/wellington) - Sass project management tool, extends the language with sprite functions (like Compass).\n- [woke](https://github.com/get-woke/woke) - Detect non-inclusive language in your source code.\n- [yai](https://github.com/ekkinox/yai) - AI powered terminal assistant.\n- [zs](https://git.mills.io/prologic/zs) - an extremely minimal static site generator.\n\n**[⬆ back to top](#contents)**\n\n# Resources\n\n_Where to discover new Go libraries._\n\n**[⬆ back to top](#contents)**\n\n## Benchmarks\n\n- [autobench](https://github.com/davecheney/autobench) - Framework to compare the performance between different Go versions.\n- [go-benchmark-app](https://github.com/mrLSD/go-benchmark-app) - Powerful HTTP-benchmark tool mixed with Аb, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results.\n- [go-benchmarks](https://github.com/tylertreat/go-benchmarks) - Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches.\n- [go-http-routing-benchmark](https://github.com/julienschmidt/go-http-routing-benchmark) - Go HTTP request router benchmark and comparison.\n- [go-json-benchmark](https://github.com/zerosnake0/go-json-benchmark) - Go JSON benchmark.\n- [go-ml-benchmarks](https://github.com/nikolaydubina/go-ml-benchmarks) - benchmarks for machine learning inference in Go.\n- [go-web-framework-benchmark](https://github.com/smallnest/go-web-framework-benchmark) - Go web framework benchmark.\n- [go_serialization_benchmarks](https://github.com/alecthomas/go_serialization_benchmarks) - Benchmarks of Go serialization methods.\n- [gocostmodel](https://github.com/PuerkitoBio/gocostmodel) - Benchmarks of common basic operations for the Go language.\n- [golang-benchmarks](https://github.com/SimonWaldherr/golang-benchmarks) - a collection of golang benchmarks.\n- [golang-sql-benchmark](https://github.com/tyler-smith/golang-sql-benchmark) - Collection of benchmarks for popular Go database/SQL utilities.\n- [gospeed](https://github.com/feyeleanor/GoSpeed) - Go micro-benchmarks for calculating the speed of language constructs.\n- [kvbench](https://github.com/jimrobinson/kvbench) - Key/Value database benchmark.\n- [skynet](https://github.com/atemerev/skynet) - Skynet 1M threads microbenchmark.\n- [speedtest-resize](https://github.com/fawick/speedtest-resize) - Compare various Image resize algorithms for the Go language.\n\n**[⬆ back to top](#contents)**\n\n## Conferences\n\n- [GoCon](https://gocon.connpass.com/) - Tokyo, Japan.\n- [GoDays](https://www.godays.io/) - Berlin, Germany.\n- [GoLab](https://golab.io/) - Florence, Italy.\n- [GopherChina](https://gopherchina.org) - Shanghai, China.\n- [GopherCon](https://www.gophercon.com/) - Varied Locations Each Year, USA.\n- [GopherCon Australia](https://gophercon.com.au/) - Sydney, Australia.\n- [GopherCon Brazil](https://gopherconbr.org) - Florianópolis, Brazil.\n- [GopherCon Europe](https://gophercon.eu/) - Berlin, Germany.\n- [GopherCon India](https://gopherconindia.org/) - Pune, India.\n- [GopherCon Israel](https://www.gophercon.org.il/) - Tel Aviv, Israel.\n- [GopherCon Russia](https://www.gophercon-russia.ru) - Moscow, Russia.\n- [GopherCon Singapore](https://gophercon.sg) - Mapletree Business City, Singapore.\n- [GopherCon UK](https://www.gophercon.co.uk/) - London, UK.\n- [GopherCon Vietnam](https://gophercon.vn/) - Ho Chi Minh City, Vietnam.\n- [GoWest Conference](https://www.gowestconf.com/) - Lehi, USA.\n\n**[⬆ back to top](#contents)**\n\n## E-Books\n\n### E-books for purchase\n\n- [100 Go Mistakes: How to Avoid Them](https://www.manning.com/books/100-go-mistakes-how-to-avoid-them)\n- [Black Hat Go](https://nostarch.com/blackhatgo) - Go programming for hackers and pentesters.\n- [Build an Orchestrator in Go](https://www.manning.com/books/build-an-orchestrator-in-go)\n- [Continuous Delivery in Go](https://www.manning.com/books/continuous-delivery-in-go) - This practical guide to continuous delivery shows you how to rapidly establish an automated pipeline that will improve your testing, code quality, and final product.\n- [Creative DIY Microcontroller Project With TinyGo and WebAssembly](https://www.packtpub.com/product/creative-diy-microcontroller-projects-with-tinygo-and-webassembly/9781800560208) - An introduction into the TinyGo compiler with projects involving Arduino and WebAssembly.\n- [Effective Go: Elegant, efficient, and testable code](https://www.manning.com/books/effective-go) - Unlock Go’s unique perspective on program design, and start writing simple, maintainable, and testable Go code.\n- [For the Love of Go](https://bitfieldconsulting.com/books/love) - An introductory book for Go beginners.\n- [Go in Practice, Second Edition](https://www.manning.com/books/go-in-practice-second-edition) - Your practical guide on the ins-and-outs of Go development, covering the standard library and the most important tools from Go’s powerful ecosystem.\n- [Know Go: Generics](https://bitfieldconsulting.com/books/generics) - A guide to understanding and using generics in Go.\n- [Lets-Go](https://lets-go.alexedwards.net) - A step-by-step guide to creating fast, secure and maintanable web applications with Go.\n- [Lets-Go-Further](https://lets-go-further.alexedwards.net) - Advanced patterns for building APIs and web applications in Go.\n- [The Power of Go: Tests](https://bitfieldconsulting.com/books/tests) - A guide to testing in Go.\n- [The Power of Go: Tools](https://bitfieldconsulting.com/books/tools) - A guide to writing command-line tools in Go.\n- [Writing A Compiler In Go](https://compilerbook.com)\n- [Writing An Interpreter In Go](https://interpreterbook.com) - Book that introduces dozens of techniques for writing idiomatic, expressive, and efficient Go code that avoids common pitfalls.\n\n### Free e-books\n\n- [A Go Developer's Notebook](https://leanpub.com/GoNotebook/read)\n- [An Introduction to Programming in Go](http://www.golang-book.com/)\n- [Build a blockchain from scratch in Go with gRPC](https://github.com/volodymyrprokopyuk/go-blockchain) - The foundational and practical guide for effectively learning and progressively building a blockchain from scratch in Go with gRPC.\n- [Build Web Application with Golang](https://astaxie.gitbooks.io/build-web-application-with-golang/content/en/)\n- [Building Web Apps With Go](https://codegangsta.gitbooks.io/building-web-apps-with-go/content/)\n- [Go 101](https://go101.org) - A book focusing on Go syntax/semantics and all kinds of details.\n- [Go AST Book (Chinese)](https://github.com/chai2010/go-ast-book) - A book focusing on Go `go/*` packages.\n- [Go Faster](https://leanpub.com/gofaster) - This book seeks to shorten your learning curve and help you become a proficient Go programmer, faster.\n- [Go Succinctly](https://github.com/thedevsir/gosuccinctly) - in Persian.\n- [Go with the domain](https://threedots.tech/go-with-the-domain/) - A book showing how to apply DDD, Clean Architecture, and CQRS by practical refactoring.\n- [GoBooks](https://github.com/dariubs/GoBooks) - A curated list of Go books.\n- [How To Code in Go eBook](https://www.digitalocean.com/community/books/how-to-code-in-go-ebook) - A 600 page introduction to Go aimed at first time developers.\n- [Learning Go](https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf)\n- [Network Programming With Go](https://jan.newmarch.name/golang/)\n- [Practical Go Lessons](https://www.practical-go-lessons.com/)\n- [Spaceship Go A Journey to the Standard Library](https://blasrodri.github.io/spaceship-go-gh-pages/)\n- [The Go Programming Language](https://www.gopl.io/)\n- [The Golang Standard Library by Example (Chinese)](https://github.com/polaris1119/The-Golang-Standard-Library-by-Example)\n- [The Little Go Book](https://github.com/karlseguin/the-little-go-book)\n- [Web Application with Go the Anti-Textbook](https://github.com/thewhitetulip/web-dev-golang-anti-textbook/)\n\n**[⬆ back to top](#contents)**\n\n## Gophers\n\n- [Free Gophers Pack](https://github.com/MariaLetta/free-gophers-pack) - Gopher graphics pack by Maria Letta with illustrations and emotional characters in vector and raster.\n- [Go-gopher-Vector](https://github.com/keygx/Go-gopher-Vector) - Go gopher Vector Data [.ai, .svg].\n- [gopher-logos](https://github.com/GolangUA/gopher-logos) - adorable gopher logos.\n- [gopher-stickers](https://github.com/tenntenn/gopher-stickers)\n- [gophericons](https://github.com/shalakhin/gophericons)\n- [gopherize.me](https://github.com/matryer/gopherize.me) - Gopherize yourself.\n- [gophers](https://github.com/ashleymcnamara/gophers) - Gopher artworks by Ashley McNamara.\n- [gophers](https://github.com/egonelbre/gophers) - Free gophers.\n- [gophers](https://github.com/rogeralsing/gophers) - random gopher graphics.\n- [gophers](https://github.com/sillecelik/go-gopher) - Gopher amigurumi toy pattern.\n- [gophers](https://github.com/scraly/gophers) - Gophers by Aurélie Vache.\n\n**[⬆ back to top](#contents)**\n\n## Meetups\n\n- [Basel Go Meetup](https://www.meetup.com/Basel-Go-Meetup/)\n- [Belfast Gophers](https://www.meetup.com/Belfast-Gophers/)\n- [Belgrade Golang Meetup](https://www.meetup.com/golang-serbia/)\n- [Berlin Golang](https://www.meetup.com/golang-users-berlin/)\n- [Brisbane Gophers](https://www.meetup.com/Brisbane-Golang-Meetup/)\n- [Bärner Go Meetup - Berne, Switzerland](https://www.meetup.com/berner-go-meetup/)\n- [Go Ireland - Dublin](https://www.meetup.com/goireland/)\n- [Go Language NYC](https://www.meetup.com/golanguagenewyork/)\n- [Go London User Group](https://www.meetup.com/Go-London-User-Group/)\n- [Go Remote Meetup](https://www.meetup.com/Go-Remote-Meetup/)\n- [Go Toronto](https://www.meetup.com/go-toronto/)\n- [Go User Group Atlanta](https://www.meetup.com/Go-Users-Group-Atlanta/)\n- [GoBandung](https://www.meetup.com/GoBandung/)\n- [GoBridge, San Francisco, CA](https://www.meetup.com/gobridge/)\n- [GoCracow - Krakow, Poland](https://www.meetup.com/GoCracow/)\n- [GoJakarta](https://www.meetup.com/GoJakarta/)\n- [Golang Amsterdam](https://www.meetup.com/golang-amsterdam/)\n- [Golang Argentina](https://www.meetup.com/Golang-Argentina/)\n- [Golang Athens](https://www.meetup.com/Athens-Gophers/)\n- [Golang Baltimore, MD](https://www.meetup.com/BaltimoreGolang/)\n- [Golang Bangalore](https://www.meetup.com/Golang-Bangalore/)\n- [Golang Belo Horizonte - Brazil](https://www.meetup.com/go-belo-horizonte/)\n- [Golang Boston](https://www.meetup.com/bostongo/)\n- [Golang Bulgaria](https://www.meetup.com/Golang-Bulgaria/)\n- [Golang Cardiff, UK](https://www.meetup.com/Cardiff-Go-Meetup/)\n- [Golang Copenhagen](https://www.meetup.com/Go-Cph/)\n- [Golang Curitiba - Brazil](https://www.meetup.com/GolangCWB/)\n- [Golang DC, Arlington, VA](https://www.meetup.com/Golang-DC/)\n- [Golang Dorset, UK](https://www.meetup.com/golang-dorset/)\n- [Golang Estonia](https://www.meetup.com/Golang-Estonia/)\n- [Golang Gurgaon, India](https://www.meetup.com/Gurgaon-Go-Meetup/)\n- [Golang Hamburg - Germany](https://www.meetup.com/Go-User-Group-Hamburg/)\n- [Golang Israel](https://www.meetup.com/Go-Israel/)\n- [Golang Kathmandu](https://www.meetup.com/Golang-Kathmandu/)\n- [Golang Lima - Peru](https://www.meetup.com/Golang-Peru/)\n- [Golang Lyon](https://www.meetup.com/Golang-Lyon/)\n- [Golang Marseille](https://www.meetup.com/fr-FR/Golang-Marseille/)\n- [Golang Melbourne](https://www.meetup.com/golang-mel/)\n- [Golang Milano](https://www.meetup.com/golang-milano/)\n- [Golang North East](https://www.meetup.com/en-AU/Golang-North-East/)\n- [Golang Paris](https://www.meetup.com/Golang-Paris/)\n- [Golang Poland](https://www.meetup.com/Golang-Poland/)\n- [Golang Pune](https://www.meetup.com/Golang-Pune/)\n- [Golang Roma](https://www.meetup.com/golangroma/)\n- [Golang Rotterdam](https://www.meetup.com/golang-rotterdam/)\n- [Golang Singapore](https://www.meetup.com/golangsg/)\n- [Golang Stockholm](https://www.meetup.com/Go-Stockholm/)\n- [Golang Sydney, AU](https://www.meetup.com/golang-syd/)\n- [Golang São Paulo - Brazil](https://www.meetup.com/golangbr/)\n- [Golang Taipei](https://www.meetup.com/golang-taipei-meetup/)\n- [Golang Thessaloniki](https://www.meetup.com/thessaloniki-golang-meetup/)\n- [Golang Torino](https://www.meetup.com/golang-torino/)\n- [Golang Turkey](https://kommunity.com/goturkiye)\n- [Golang Vancouver, BC](https://www.meetup.com/golangvan/)\n- [Golang Vienna, Austria](https://www.meetup.com/viennago/)\n- [Golang Москва](https://www.meetup.com/Golang-Moscow/)\n- [GoSF - San Francisco, CA](https://www.meetup.com/golangsf)\n- [Istanbul Golang](https://www.meetup.com/Istanbul-Golang/)\n- [Lagos Gophers](https://www.meetup.com/GolangNigeria/)\n- [Nairobi Gophers](https://www.meetup.com/nairobi-gophers/)\n- [Seattle Go Programmers](https://www.meetup.com/golang/)\n- [Ukrainian Golang User Groups](https://www.meetup.com/uagolang/)\n- [Utah Go User Group](https://www.meetup.com/utahgophers/)\n- [Women Who Go - San Francisco, CA](https://www.meetup.com/Women-Who-Go/)\n- [Zürich Gophers - Zurich, Switzerland](https://www.meetup.com/zurich-gophers/)\n\n_Add the group of your city/country here (send **PR**)_\n\n**[⬆ back to top](#contents)**\n\n## Style Guides\n\n- [bahlo/go-styleguide](https://github.com/bahlo/go-styleguide)\n- [CockroachDB](https://github.com/cockroachdb/cockroach/blob/master/docs/style.md)\n- [GitLab](https://docs.gitlab.com/ee/development/go_guide/)\n- [Google](https://google.github.io/styleguide/go/)\n- [Hyperledger](https://github.com/hyperledger/fabric/blob/release-1.4/docs/source/style-guides/go-style.rst)\n- [Magnetico](https://github.com/boramalper/magnetico/wiki/magnetico-Design-Specification)\n- [Thanos](https://thanos.io/tip/contributing/coding-style-guide.md/)\n- [Trybe](https://github.com/betrybe/playbook-go/blob/main/README_EN.md)\n- [Uber](https://github.com/uber-go/guide/blob/master/style.md)\n\n**[⬆ back to top](#contents)**\n\n## Social Media\n\n### Twitter\n\n- [@GoDiscussions](https://twitter.com/GoDiscussions)\n- [@golang](https://twitter.com/golang)\n- [@golang_news](https://twitter.com/golang_news)\n- [@golangch](https://twitter.com/golangch)\n- [@golangweekly](https://twitter.com/golangweekly)\n\n**[⬆ back to top](#contents)**\n\n### Reddit\n\n- [r/golang](https://www.reddit.com/r/golang/)\n\n**[⬆ back to top](#contents)**\n\n## Websites\n\n- [Awesome Go @LibHunt](https://go.libhunt.com) - Your go-to Go Toolbox.\n- [Awesome Golang Workshops](https://github.com/amit-davidson/awesome-golang-workshops) - A curated list of awesome golang workshops.\n- [Awesome Remote Job](https://github.com/lukasz-madon/awesome-remote-job) - Curated list of awesome remote jobs. A lot of them are looking for Go hackers.\n- [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness) - List of other amazingly awesome lists.\n- [awesome-go-extra](https://github.com/xwjdsh/awesome-go-extra) - Parse awesome-go README file and generate a new README file with repo info.\n- [Code with Mukesh](https://codewithmukesh.com/categories/golang) - Software Engineer and Blogs @ codewithmukesh.com.\n- [Coding Mystery](https://codingmystery.com) - Solve exciting escape-room-inspired programming challenges using Go.\n- [CodinGame](https://www.codingame.com/) - Learn Go by solving interactive tasks using small games as practical examples.\n- [Go Blog](https://blog.golang.org) - The official Go blog.\n- [Go Code Club](https://www.youtube.com/watch?v=nvoIPQYdx9g&list=PLEcwzBXTPUE_YQR7R0BRtHBYJ0LN3Y0i3) - A group of Gophers read and discuss a different Go project every week.\n- [Go Community on Hashnode](https://hashnode.com/n/go) - Community of Gophers on Hashnode.\n- [Go Forum](https://forum.golangbridge.org) - Forum to discuss Go.\n- [Go Projects](https://github.com/golang/go/wiki/Projects) - List of projects on the Go community wiki.\n- [Go Proverbs](https://go-proverbs.github.io/) - Go Proverbs by Rob Pike.\n- [Go Report Card](https://goreportcard.com) - A report card for your Go package.\n- [go.dev](https://go.dev/) - A hub for Go developers.\n- [gocryforhelp](https://github.com/ninedraft/gocryforhelp) - Collection of Go projects that needs help. Good place to start your open-source way in Go.\n- [Golang Developer Jobs](https://golangjob.xyz) - Developer Jobs exclusively for Golang related Roles.\n- [Golang News](https://golangnews.com) - Links and news about Go programming.\n- [Golang Nugget](https://golangnugget.com) - A weekly roundup of the best Go content, delivered to your inbox every Monday.\n- [Golang Weekly](https://discu.eu/weekly/golang/) - Each monday projects, tutorials and articles about Go.\n- [golang-nuts](https://groups.google.com/forum/#!forum/golang-nuts) - Go mailing list.\n- [Google Plus Community](https://plus.google.com/communities/114112804251407510571) - The Google+ community for #golang enthusiasts.\n- [Gopher Community Chat](https://invite.slack.golangbridge.org) - Join Our New Slack Community For Gophers ([Understand how it came](https://blog.gopheracademy.com/gophers-slack-community/)).\n- [Gophercises](https://gophercises.com/) - Free coding exercises for budding gophers.\n- [json2go](https://m-zajac.github.io/json2go) - Advanced JSON to Go struct conversion - online tool.\n- [justforfunc](https://www.youtube.com/c/justforfunc) - Youtube channel dedicated to Go programming language tips and tricks, hosted by Francesc Campoy [@francesc](https://twitter.com/francesc).\n- [Learn Go Programming](https://blog.learngoprogramming.com) - Learn Go concepts with illustrations.\n- [Made with Golang](https://madewithgolang.com/?ref=awesome-go)\n- [pkg.go.dev](https://pkg.go.dev/) - Documentation for open source Go packages.\n- [studygolang](https://studygolang.com) - The community of studygolang in China.\n- [Trending Go repositories on GitHub today](https://github.com/trending?l=go) - Good place to find new Go libraries.\n- [TutorialEdge - Golang](https://tutorialedge.net/course/golang/)\n\n**[⬆ back to top](#contents)**\n\n### Tutorials\n\n- [50 Shades of Go](https://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/) - Traps, Gotchas, and Common Mistakes for New Golang Devs.\n- [A Comprehensive Guide to Structured Logging in Go](https://betterstack.com/community/guides/logging/logging-in-go/) - Delve deep into the world of structured logging in Go with a specific focus on recently accepted slog proposal which aims to bring high performance structured logging with levels to the standard library.\n- [A Guide to Golang E-Commerce](https://snipcart.com/blog/golang-ecommerce-ponzu-cms-demo?utm_term=golang-ecommerce-ponzu-cms-demo) - Building a Golang site for e-commerce (demo included).\n- [A Tour of Go](https://tour.golang.org/) - Interactive tour of Go.\n- [Build a Database in 1000 lines of code](https://link.medium.com/O9YQlx89Htb) - Build a NoSQL Database From Zero in 1000 Lines of Code.\n- [Build web application with Golang](https://github.com/astaxie/build-web-application-with-golang) - Golang ebook intro how to build a web app with golang.\n- [Building and Testing a REST API in Go with Gorilla Mux and PostgreSQL](https://semaphoreci.com/community/tutorials/building-and-testing-a-rest-api-in-go-with-gorilla-mux-and-postgresql) - We’ll write an API with the help of the powerful Gorilla Mux.\n- [Building Go Web Applications and Microservices Using Gin](https://semaphoreci.com/community/tutorials/building-go-web-applications-and-microservices-using-gin) - Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline.\n- [Caching Slow Database Queries](https://medium.com/@rocketlaunchr.cloud/caching-slow-database-queries-1085d308a0c9) - How to cache slow database queries.\n- [Canceling MySQL](https://medium.com/@rocketlaunchr.cloud/canceling-mysql-in-go-827ed8f83b30) - How to cancel MySQL queries.\n- [CodeCrafters Golang Track](https://app.codecrafters.io/tracks/go) - Achieve mastery in advanced Go by building your own Redis, Docker, Git, and SQLite. Featuring goroutines, systems programming, file I/O, and more.\n- [Design Patterns in Go](https://github.com/shubhamzanwar/design-patterns) - Collection of programming design patterns implemented in Go.\n- [Games With Go](https://www.youtube.com/watch?v=9D4yH7e_ea8&list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x) - A video series teaching programming and game development.\n- [Go By Example](https://gobyexample.com/) - Hands-on introduction to Go using annotated example programs.\n- [Go Cheat Sheet](https://github.com/a8m/go-lang-cheat-sheet) - Go's reference card.\n- [Go database/sql tutorial](http://go-database-sql.org/) - Introduction to database/sql.\n- [Go in 7 days](https://github.com/harrytran103/7_days_of_go) - Learn everything about Go in 7 days (from a Nodejs developer).\n- [Go Language Tutorial](https://www.javatpoint.com/go-tutorial) - Learn Go language Tutorial.\n- [Go Tutorial](https://www.tutorialspoint.com/go/index.htm) - Learn Go programming.\n- [Go WebAssembly Tutorial - Building a Simple Calculator](https://tutorialedge.net/golang/go-webassembly-tutorial/)\n- [go-clean-template](https://github.com/evrone/go-clean-template) - Clean Architecture template for Golang services.\n- [go-patterns](https://github.com/tmrts/go-patterns) - Curated list of Go design patterns, recipes and idioms.\n- [Golang for Node.js Developers](https://github.com/miguelmota/golang-for-nodejs-developers) - Examples of Golang compared to Node.js for learning.\n- [Golang Tutorial Guide](https://www.freecodecamp.org/news/golang-tutorial-list-free-courses-learn-go-programming-language/) - A List of Free Courses to Learn the Go Programming Language.\n- [golang-examples](https://github.com/SimonWaldherr/golang-examples) - Many examples to learn Golang.\n- [Golangbot](https://golangbot.com/learn-golang-series/) - Tutorials to get started with programming in Go.\n- [GopherCoding](https://gophercoding.com/) - Collection of code snippets and tutorials to help tackle every day issues.\n- [GopherSnippets](https://gophersnippets.com/) - Code snippets with tests and testable examples for the Go programming language.\n- [Gosamples](https://gosamples.dev/) - Collection of code snippets that let you solve everyday code problems.\n- [GraphQL with Go](https://hasura.io/learn/graphql/backend-stack/languages/go/) - Learn how to create a Go GraphQL server and client with code generation. Also includes creating REST endpoints.\n- [Hackr.io](https://hackr.io/tutorials/learn-golang) - Learn Go from the best online golang tutorials submitted & voted by the golang programming community.\n- [Hex Monscape](https://github.com/Haraj-backend/hex-monscape) - Getting started guidelines in writing maintainable code using Hexagonal Architecture.\n- [How to Benchmark: dbq vs sqlx vs GORM](https://medium.com/@rocketlaunchr.cloud/how-to-benchmark-dbq-vs-sqlx-vs-gorm-e814caacecb5) - Learn how to benchmark in Go. As a case-study, we will benchmark dbq, sqlx and GORM.\n- [How To Deploy a Go Web Application with Docker](https://semaphoreci.com/community/tutorials/how-to-deploy-a-go-web-application-with-docker) - Learn how to use Docker for Go development and how to build production Docker images.\n- [How to Implement Role-Based Access Control (RBAC) Authorization in Golang](https://www.permit.io/blog/role-based-access-control-rbac-authorization-in-golang) - A guide to implementing Role-Based Access Control (RBAC) in Golang, including code examples, covering various methods to secure app endpoints with role-based authorization.\n- [How to Use Godog for Behavior-driven Development in Go](https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go) - Get started with Godog - a Behavior-driven development framework for building and testing Go applications.\n- [Learn Go with 1000+ Exercises](https://github.com/inancgumus/learngo) - Learn Go with thousands of examples, exercises, and quizzes.\n- [Learn Go with TDD](https://github.com/quii/learn-go-with-tests) - Learn Go with test-driven development.\n- [Learning Go by examples](https://dev.to/aurelievache/learning-go-by-examples-introduction-448n) - Series of articles in order to learn Golang language by concrete applications as example.\n- [Microservices with Go](https://www.youtube.com/playlist?list=PLmD8u-IFdreyh6EUfevBcbiuCKzFk0EW_) - Dive deep into building microservices using Go, including gRPC.\n- [package main](https://www.youtube.com/packagemain) - YouTube channel about Programming in Go.\n- [Programming with Google Go](https://www.coursera.org/specializations/google-golang) - Coursera Specialization to learn about Go from scratch.\n- [Scaling Go Applications](https://betterstack.com/community/guides/scaling-go/) - Everything about building, deploying and scaling Go applications in production.\n- [The world’s easiest introduction to WebAssembly with Golang](https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02)\n- [Understanding Go in a visual way](https://dev.to/aurelievache/series/26234) - Learn Go visually\n- [W3basic Go Tutorials](https://www.w3basic.com/golang/) - W3Basic provides an in-depth tutorial and well-organized content to learn Golang programming.\n- [Your basic Go](https://yourbasic.org/golang) - Huge collection of tutorials and how to's.\n\n**[⬆ back to top](#contents)**\n\n### Guided Learning\n\n- [The Go Developer Roadmap](https://roadmap.sh/golang) - A visual roadmap that new Go developers can follow through to help them learn Go.\n- [The Go Interview Practice](https://github.com/RezaSi/go-interview-practice) - A GitHub repository offering coding challenges for Go technical interview preparation.\n- [The Go Learning Path](https://tutorialedge.net/paths/golang/) - A guided learning path containing a mix of free and premium resources.\n- [The Go Skill Tree](https://labex.io/skilltrees/go) - A structured learning path that combines both free and premium resources.\n\n**[⬆ back to top](#contents)**\n\n## Contribution\n\nWe welcome contributions! Please refer to our [CONTRIBUTING.md](https://github.com/avelino/awesome-go/blob/main/CONTRIBUTING.md) for guidelines.\n\n## License\n\nThis project is licensed under the [MIT License](https://github.com/avelino/awesome-go/blob/main/LICENSE) - see the LICENSE file for details.\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/avelino/awesome-go",
        "repo_name": "awesome-go",
        "owner_name": "avelino",
        "theme_id": "83ac071b52cab008e0b57231f4e183c8",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451521",
        "keywords": [
          "curated",
          "list",
          "awesome",
          "frameworks",
          "libraries",
          "software"
        ]
      },
      {
        "full_name": "mrdoob/three.js",
        "description": "JavaScript 3D Library.",
        "stars": 108853,
        "files": [],
        "readme": "# three.js\n\n[![NPM Package][npm]][npm-url]\n[![Build Size][build-size]][build-size-url]\n[![NPM Downloads][npm-downloads]][npmtrends-url]\n[![Discord][discord]][discord-url]\n[![DeepWiki][deepwiki]][deepwiki-url]\n\n#### JavaScript 3D library\n\nThe aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.\n\n[Examples](https://threejs.org/examples/) &mdash;\n[Docs](https://threejs.org/docs/) &mdash;\n[Manual](https://threejs.org/manual/) &mdash;\n[Wiki](https://github.com/mrdoob/three.js/wiki) &mdash;\n[Migrating](https://github.com/mrdoob/three.js/wiki/Migration-Guide) &mdash;\n[Questions](https://stackoverflow.com/questions/tagged/three.js) &mdash;\n[Forum](https://discourse.threejs.org/) &mdash;\n[Discord](https://discord.gg/56GBJwAnUS)\n\n### Usage\n\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the `document.body` element. Finally, it animates the cube within the scene for the camera.\n\n```javascript\nimport * as THREE from 'three';\n\nconst width = window.innerWidth, height = window.innerHeight;\n\n// init\n\nconst camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );\ncamera.position.z = 1;\n\nconst scene = new THREE.Scene();\n\nconst geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );\nconst material = new THREE.MeshNormalMaterial();\n\nconst mesh = new THREE.Mesh( geometry, material );\nscene.add( mesh );\n\nconst renderer = new THREE.WebGLRenderer( { antialias: true } );\nrenderer.setSize( width, height );\nrenderer.setAnimationLoop( animate );\ndocument.body.appendChild( renderer.domElement );\n\n// animation\n\nfunction animate( time ) {\n\n\tmesh.rotation.x = time / 2000;\n\tmesh.rotation.y = time / 1000;\n\n\trenderer.render( scene, camera );\n\n}\n```\n\nIf everything goes well, you should see [this](https://jsfiddle.net/w43x5Lgh/).\n\n### Cloning this repository\n\nCloning the repo with all its history results in a ~2 GB download. If you don't need the whole history you can use the `depth` parameter to significantly reduce download size.\n\n```sh\ngit clone --depth=1 https://github.com/mrdoob/three.js.git\n```\n\n### Change log\n\n[Releases](https://github.com/mrdoob/three.js/releases)\n\n\n[npm]: https://img.shields.io/npm/v/three\n[npm-url]: https://www.npmjs.com/package/three\n[build-size]: https://badgen.net/bundlephobia/minzip/three\n[build-size-url]: https://bundlephobia.com/result?p=three\n[npm-downloads]: https://img.shields.io/npm/dw/three\n[npmtrends-url]: https://www.npmtrends.com/three\n[discord]: https://img.shields.io/discord/685241246557667386\n[discord-url]: https://discord.gg/56GBJwAnUS\n[deepwiki]: https://deepwiki.com/badge.svg\n[deepwiki-url]: https://deepwiki.com/mrdoob/three.js\n\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/mrdoob/three.js",
        "repo_name": "three.js",
        "owner_name": "mrdoob",
        "theme_id": "2030017255f4ac67ea7665c9c61a7a72",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451188",
        "keywords": [
          "javascript",
          "library"
        ]
      },
      {
        "full_name": "excalidraw/excalidraw",
        "description": "Virtual whiteboard for sketching hand-drawn like diagrams",
        "stars": 108093,
        "files": [],
        "readme": "<a href=\"https://excalidraw.com/\" target=\"_blank\" rel=\"noopener\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" alt=\"Excalidraw\" srcset=\"https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2_dark.png\" />\n    <img alt=\"Excalidraw\" src=\"https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2.png\" />\n  </picture>\n</a>\n\n<h4 align=\"center\">\n  <a href=\"https://excalidraw.com\">Excalidraw Editor</a> |\n  <a href=\"https://plus.excalidraw.com/blog\">Blog</a> |\n  <a href=\"https://docs.excalidraw.com\">Documentation</a> |\n  <a href=\"https://plus.excalidraw.com\">Excalidraw+</a>\n</h4>\n\n<div align=\"center\">\n  <h2>\n    An open source virtual hand-drawn style whiteboard. </br>\n    Collaborative and end-to-end encrypted. </br>\n  <br />\n  </h2>\n</div>\n\n<br />\n<p align=\"center\">\n  <a href=\"https://github.com/excalidraw/excalidraw/blob/master/LICENSE\">\n    <img alt=\"Excalidraw is released under the MIT license.\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\"  />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@excalidraw/excalidraw\">\n    <img alt=\"npm downloads/month\" src=\"https://img.shields.io/npm/dm/@excalidraw/excalidraw\"  />\n  </a>\n  <a href=\"https://docs.excalidraw.com/docs/introduction/contributing\">\n    <img alt=\"PRs welcome!\" src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat\"  />\n  </a>\n  <a href=\"https://discord.gg/UexuTaE\">\n    <img alt=\"Chat on Discord\" src=\"https://img.shields.io/discord/723672430744174682?color=738ad6&label=Chat%20on%20Discord&logo=discord&logoColor=ffffff&widge=false\"/>\n  </a>\n  <a href=\"https://deepwiki.com/excalidraw/excalidraw\">\n    <img alt=\"Ask DeepWiki\" src=\"https://deepwiki.com/badge.svg\" />\n  </a>\n  <a href=\"https://twitter.com/excalidraw\">\n    <img alt=\"Follow Excalidraw on Twitter\" src=\"https://img.shields.io/twitter/follow/excalidraw.svg?label=follow+@excalidraw&style=social&logo=twitter\"/>\n  </a>\n</p>\n\n<div align=\"center\">\n  <figure>\n    <a href=\"https://excalidraw.com\" target=\"_blank\" rel=\"noopener\">\n      <img src=\"https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github%2Fproduct_showcase.png\" alt=\"Product showcase\" />\n    </a>\n    <figcaption>\n      <p align=\"center\">\n        Create beautiful hand-drawn like diagrams, wireframes, or whatever you like.\n      </p>\n    </figcaption>\n  </figure>\n</div>\n\n## Features\n\nThe Excalidraw editor (npm package) supports:\n\n- 💯&nbsp;Free & open-source.\n- 🎨&nbsp;Infinite, canvas-based whiteboard.\n- ✍️&nbsp;Hand-drawn like style.\n- 🌓&nbsp;Dark mode.\n- 🏗️&nbsp;Customizable.\n- 📷&nbsp;Image support.\n- 😀&nbsp;Shape libraries support.\n- 🌐&nbsp;Localization (i18n) support.\n- 🖼️&nbsp;Export to PNG, SVG & clipboard.\n- 💾&nbsp;Open format - export drawings as an `.excalidraw` json file.\n- ⚒️&nbsp;Wide range of tools - rectangle, circle, diamond, arrow, line, free-draw, eraser...\n- ➡️&nbsp;Arrow-binding & labeled arrows.\n- 🔙&nbsp;Undo / Redo.\n- 🔍&nbsp;Zoom and panning support.\n\n## Excalidraw.com\n\nThe app hosted at [excalidraw.com](https://excalidraw.com) is a minimal showcase of what you can build with Excalidraw. Its [source code](https://github.com/excalidraw/excalidraw/tree/master/excalidraw-app) is part of this repository as well, and the app features:\n\n- 📡&nbsp;PWA support (works offline).\n- 🤼&nbsp;Real-time collaboration.\n- 🔒&nbsp;End-to-end encryption.\n- 💾&nbsp;Local-first support (autosaves to the browser).\n- 🔗&nbsp;Shareable links (export to a readonly link you can share with others).\n\nWe'll be adding these features as drop-in plugins for the npm package in the future.\n\n## Quick start\n\n**Note:** following instructions are for installing the Excalidraw [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw) when integrating Excalidraw into your own app. To run the repository locally for development, please refer to our [Development Guide](https://docs.excalidraw.com/docs/introduction/development).\n\nUse `npm` or `yarn` to install the package.\n\n```bash\nnpm install react react-dom @excalidraw/excalidraw\n# or\nyarn add react react-dom @excalidraw/excalidraw\n```\n\nCheck out our [documentation](https://docs.excalidraw.com/docs/@excalidraw/excalidraw/installation) for more details!\n\n## Contributing\n\n- Missing something or found a bug? [Report here](https://github.com/excalidraw/excalidraw/issues).\n- Want to contribute? Check out our [contribution guide](https://docs.excalidraw.com/docs/introduction/contributing) or let us know on [Discord](https://discord.gg/UexuTaE).\n- Want to help with translations? See the [translation guide](https://docs.excalidraw.com/docs/introduction/contributing#translating).\n\n## Integrations\n\n- [VScode extension](https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor)\n- [npm package](https://www.npmjs.com/package/@excalidraw/excalidraw)\n\n## Who's integrating Excalidraw\n\n[Google Cloud](https://googlecloudcheatsheet.withgoogle.com/architecture) • [Meta](https://meta.com/) • [CodeSandbox](https://codesandbox.io/) • [Obsidian Excalidraw](https://github.com/zsviczian/obsidian-excalidraw-plugin) • [Replit](https://replit.com/) • [Slite](https://slite.com/) • [Notion](https://notion.so/) • [HackerRank](https://www.hackerrank.com/) • and many others\n\n## Sponsors & support\n\nIf you like the project, you can become a sponsor at [Open Collective](https://opencollective.com/excalidraw) or use [Excalidraw+](https://plus.excalidraw.com/).\n\n## Thank you for supporting Excalidraw\n\n[<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/0/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/0/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/1/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/1/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/2/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/2/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/3/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/3/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/4/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/4/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/5/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/5/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/6/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/6/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/7/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/7/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/8/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/8/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/9/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/9/website) [<img src=\"https://opencollective.com/excalidraw/tiers/sponsors/10/avatar.svg?avatarHeight=120\"/>](https://opencollective.com/excalidraw/tiers/sponsors/10/website)\n\n<a href=\"https://opencollective.com/excalidraw#category-CONTRIBUTE\" target=\"_blank\"><img src=\"https://opencollective.com/excalidraw/tiers/backers.svg?avatarHeight=32\"/></a>\n\nLast but not least, we're thankful to these companies for offering their services for free:\n\n[![Vercel](./.github/assets/vercel.svg)](https://vercel.com) [![Sentry](./.github/assets/sentry.svg)](https://sentry.io) [![Crowdin](./.github/assets/crowdin.svg)](https://crowdin.com)\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/excalidraw/excalidraw",
        "repo_name": "excalidraw",
        "owner_name": "excalidraw",
        "theme_id": "77d3134f89fd76756acfd0c343e082ab",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.450841",
        "keywords": [
          "virtual",
          "whiteboard",
          "sketching",
          "hand",
          "drawn",
          "like",
          "diagrams"
        ]
      },
      {
        "full_name": "papers-we-love/papers-we-love",
        "description": "Papers from the computer science community to read and discuss.",
        "stars": 98909,
        "files": [],
        "readme": "﻿## ![Papers We Love](http://paperswelove.org/images/logo-top.svg)\n\n [![Discord](https://img.shields.io/static/v1?label=Discord&message=join%20us!&color=mediumslateblue)](https://discord.gg/Tu2VynkRWV)\n\n**Papers We Love** (*PWL*) is a community built around reading, discussing and learning more about academic computer science papers. This repository serves as a directory of some of the best papers the community can find, bringing together documents scattered across the web. You can also visit the [Papers We Love site](http://paperswelove.org/) for more info.\n\nDue to [licenses](https://github.com/papers-we-love/papers-we-love/blob/master/.github/CONTRIBUTING.md#respect-content-licenses) we cannot always host the papers themselves (when we do, you will see a :scroll: emoji next to its title in the directory README) but we can provide links to their locations.\n\nIf you enjoy the papers, perhaps stop by a local chapter meetup and join in on the vibrant discussions around them. You can also discuss *PWL* events, the content in this repository, and/or anything related to *PWL* on our [Discord](https://discord.gg/Tu2VynkRWV) server.\n\n### Chapters\n\nLet us know if you are interested in [starting one](https://github.com/papers-we-love/organizers) in your city!\n\nAll of our meetups follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n### Past Presentations\n\nCheck out our [YouTube](https://www.youtube.com/user/PapersWeLove) channel for videos and video playlists.\n\n## Info\n\nWe're looking for pull requests related to papers we should add, better organization of the papers we do have, and/or links to other paper-repos we should point to.\n\n### Other Good Places to Find Papers\n\n* [2 Minute Papers](https://www.youtube.com/user/keeroyz)\n* [alphaXiv](https://www.alphaxiv.org/) (Adds a discussion layer; replace \"arxiv\" with \"alphaxiv\" in an arXiv paper URL)\n* [arXiv Paper Repository](http://arxiv.org/)\n* [Bell System Technical Journal, 1922-1983](https://www.bell-labs.com/our-research/technical-journal/)\n* [Best Paper Awards in Computer Science](http://jeffhuang.com/best_paper_awards.html)\n* [cat-v.org](http://doc.cat-v.org/)\n* [eugeneyan/applied-ml GitHub repository](https://github.com/eugeneyan/applied-ml)\n* [Facebook](https://research.facebook.com/publications/)\n* [Functional Programming Books Review](http://alexott.net/en/fp/books/)\n* [Google Scholar](http://scholar.google.com/citations?view_op=top_venues&hl=en&vq=eng) (choose a subcategory)\n* [Gradual Typing Bibliography](http://samth.github.io/gradual-typing-bib/)\n* [Lobste.rs tagged as PDF](https://lobste.rs/t/pdf)\n* [Microsoft Research](https://www.microsoft.com/en-us/research/publications/)\n* [MIT's Artificial Intelligence Lab Publications](http://dspace.mit.edu/handle/1721.1/39813)\n* [MIT's Distributed System's Reading Group](http://dsrg.pdos.csail.mit.edu/)\n* [netlib](http://www.netlib.org/)\n* [Readings in Distributed Systems](http://christophermeiklejohn.com/distributed/systems/2013/07/12/readings-in-distributed-systems.html)\n* [Research Papers from Robert Harper, Carnegie Mellon University](https://www.cs.cmu.edu/~rwh/papers/index.html)\n* [SciRate](https://scirate.com/)\n* [Security Data Science Papers](http://www.covert.io/the-definitive-security-datascience-and-machinelearning-guide/)\n* [Services Engineering Reading List](https://github.com/mmcgrana/services-engineering)\n* [The Morning Paper](http://blog.acolyer.org/)\n* [y-archive](http://yarchive.net/comp/index.html)\n\nPlease check out our [wiki-page](https://github.com/papers-we-love/papers-we-love/wiki/Other-Good-Sources-of-Reading-Material) for links to blogs, books, exchanges that are worth a good read.\n\n### How To Read a Paper\n\nReading a paper is not the same as reading a blogpost or a novel. Here are a few handy resources to help you get started.\n\n* [How to read an academic article](http://organizationsandmarkets.com/2010/08/31/how-to-read-an-academic-article/)\n* [Advice on reading academic papers](https://userpages.umbc.edu/~akmassey/posts/2012-02-15-advice-on-reading-academic-papers.html)\n* [How to read and understand a scientific paper](http://violentmetaphors.com/2013/08/25/how-to-read-and-understand-a-scientific-paper-2/)\n* [Should I Read Papers?](http://michaelrbernste.in/2014/10/21/should-i-read-papers.html)\n* [The Refreshingly Rewarding Realm of Research Papers](https://www.youtube.com/watch?v=8eRx5Wo3xYA)\n* [How to read a paper](http://ccr.sigcomm.org/online/files/p83-keshavA.pdf)\n\n### Applications/Ideas built around Papers We Love\n\n* Love a Paper - [@loveapaper](https://twitter.com/loveapaper)\n\n### Download papers\n\nOpen your favourite terminal and run:\n\n```bash\n$ ./scripts/download.sh\n```\n\nThis will scrape markdown files for links to PDFs and download papers to their respective directories.\n\nSee [README.md](./scripts/README.md) for more options.\n\n## Contributing Guidelines\n\nPlease take a look at our [CONTRIBUTING.md](https://github.com/papers-we-love/papers-we-love/blob/master/.github/CONTRIBUTING.md) file.\n\n## Copyright\n\nThe name \"Papers We Love\" and the logos for the organization are copyrighted, and under the ownership of Papers We Love Ltd, all rights reserved. When starting a chapter, please review [our guidelines](https://github.com/papers-we-love/papers-we-love/wiki/Creating-a-PWL-chapter) and ask us about using the logo.\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/papers-we-love/papers-we-love",
        "repo_name": "papers-we-love",
        "owner_name": "papers-we-love",
        "theme_id": "5b7326b82c7d935f27011ec105f30763",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451528",
        "keywords": [
          "papers",
          "from",
          "computer",
          "science",
          "community",
          "read",
          "discuss"
        ]
      },
      {
        "full_name": "Hack-with-Github/Awesome-Hacking",
        "description": "A collection of various awesome lists for hackers, pentesters and security researchers",
        "stars": 98647,
        "files": [],
        "readme": "![Awesome Hacking](awesome_hacking.jpg)\n\n# [Awesome Hacking](https://github.com/Hack-with-Github/Awesome-Hacking) [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Awesome%20Hacking%20-%20a%20collection%20of%20awesome%20lists%20for%20hackers%20and%20pentesters%20by%20@HackwithGithub&url=https://github.com/Hack-with-Github/Awesome-Hacking&hashtags=security,hacking)\n\n**A collection of awesome lists for hackers, pentesters & security researchers.**\n\nYour [contributions](contributing.md) are always welcome !\n\n## Awesome Repositories\n\nRepository | Description\n---- | ----\n[Android Security](https://github.com/ashishb/android-security-awesome) \t\t\t| Collection of Android security related resources\n[AppSec](https://github.com/paragonie/awesome-appsec)\t\t\t\t\t\t\t\t| Resources for learning about application security\n[Asset Discovery](https://github.com/redhuntlabs/Awesome-Asset-Discovery)    | List of resources which help during asset discovery phase of a security assessment engagement\n[Bug Bounty](https://github.com/djadmin/awesome-bug-bounty) \t\t\t\t\t\t| List of Bug Bounty Programs and write-ups from the Bug Bounty hunters\n[Capsulecorp Pentest](https://github.com/r3dy/capsulecorp-pentest) \t\t\t\t\t\t| Vagrant+Ansible virtual network penetration testing lab. Companion to \"The Art of Network Penetration Testing\" by Royce Davis \n[Celluar Hacking](https://github.com/W00t3k/Awesome-Cellular-Hacking)    | This is a list of hacking research in the 3G/4G/5G cellular security space. \n[CTF](https://github.com/apsdehal/awesome-ctf) \t\t\t\t\t\t\t\t\t\t| List of CTF frameworks, libraries, resources and softwares\n[Cyber Skills](https://github.com/joe-shenouda/awesome-cyber-skills) | Curated list of hacking environments where you can train your cyber skills legally and safely\n[DevSecOps](https://github.com/devsecops/awesome-devsecops) \t\t\t\t\t\t| List of awesome DevSecOps tools with the help from community experiments and contributions\n[Embedded and IoT Security](https://github.com/fkie-cad/awesome-embedded-and-iot-security) | A curated list of awesome resources about embedded and IoT security\n[Exploit Development](https://github.com/FabioBaroni/awesome-exploit-development) \t| Resources for learning about Exploit Development\n[Fuzzing](https://github.com/secfigo/Awesome-Fuzzing) \t\t\t\t\t\t\t\t| List of fuzzing resources for learning Fuzzing and initial phases of Exploit Development like root cause analysis\n[Hacking](https://github.com/carpedm20/awesome-hacking) \t\t\t\t\t\t| List of awesome Hacking tutorials, tools and resources\n[Hacking Resources](https://github.com/vitalysim/Awesome-Hacking-Resources)          | Collection of hacking / penetration testing resources to make you better!\n[Honeypots](https://github.com/paralax/awesome-honeypots) \t\t\t\t\t\t\t| List of honeypot resources\n[Incident Response](https://github.com/meirwah/awesome-incident-response) \t\t\t| List of tools for incident response\n[Industrial Control System Security](https://github.com/hslatman/awesome-industrial-control-system-security)      | List of resources related to Industrial Control System (ICS) security\n[InfoSec](https://github.com/onlurking/awesome-infosec) \t\t\t\t\t\t\t| List of awesome infosec courses and training resources\n[IoT Hacks](https://github.com/nebgnahz/awesome-iot-hacks) \t\t\t\t\t\t\t| Collection of Hacks in IoT Space\n[Mainframe Hacking](https://github.com/samanL33T/Awesome-Mainframe-Hacking) \t\t\t\t| List of Awesome Mainframe Hacking/Pentesting Resources\n[Malware Analysis](https://github.com/rshipp/awesome-malware-analysis) \t\t\t\t| List of awesome malware analysis tools and resources\n[OSINT](https://github.com/jivoi/awesome-osint) \t\t\t\t\t\t\t\t\t | List of amazingly awesome Open Source Intelligence (OSINT) tools and resources\n[OSX and iOS Security](https://github.com/ashishb/osx-and-ios-security-awesome) \t| OSX and iOS related security tools\n[Pcaptools](https://github.com/caesar0301/awesome-pcaptools) \t\t\t\t\t\t| Collection of tools developed by researchers in the Computer Science area to process network traces\n[Pentest](https://github.com/enaqx/awesome-pentest) \t\t\t\t\t\t\t\t| List of awesome penetration testing resources, tools and other shiny things\n[PHP Security](https://github.com/ziadoz/awesome-php#security) \t\t\t\t\t\t| Libraries for generating secure random numbers, encrypting data and scanning for vulnerabilities\n[Real-time Communications hacking & pentesting resources](https://github.com/EnableSecurity/awesome-rtc-hacking) | Covers VoIP, WebRTC and VoLTE security related topics\n[Red Teaming](https://github.com/yeyintminthuhtut/Awesome-Red-Teaming) | List of Awesome Red Team / Red Teaming Resources\n[Reversing](https://github.com/fdivrp/awesome-reversing) \t\t\t\t\t\t| List of awesome reverse engineering resources\n[Reinforcement Learning for Cyber Security](https://github.com/Limmen/awesome-rl-for-cybersecurity) \t\t\t\t\t\t\t| List of awesome reinforcement learning for security resources\n[Sec Talks](https://github.com/PaulSec/awesome-sec-talks) \t\t\t\t\t\t\t| List of awesome security talks\n[SecLists](https://github.com/danielmiessler/SecLists) \t\t\t\t\t\t\t\t| Collection of multiple types of lists used during security assessments\n[Security](https://github.com/sbilly/awesome-security) \t\t\t\t\t\t\t\t| Collection of awesome software, libraries, documents, books, resources and cools stuffs about security\n[Serverless Security](https://github.com/puresec/awesome-serverless-security/) \t\t\t| Collection of Serverless security related resources\n[Social Engineering](https://github.com/v2-dev/awesome-social-engineering) | List of awesome social engineering resources\n[Static Analysis](https://github.com/mre/awesome-static-analysis) \t\t\t\t\t| List of static analysis tools, linters and code quality checkers for various programming languages\n[The Art of Hacking Series](https://github.com/The-Art-of-Hacking/h4cker)    | List of resources  includes thousands of cybersecurity-related references and resources\n[Threat Intelligence](https://github.com/hslatman/awesome-threat-intelligence) \t\t| List of Awesome Threat Intelligence resources\n[Vehicle Security](https://github.com/jaredthecoder/awesome-vehicle-security) \t| List of resources for learning about vehicle security and car hacking\n[Vulnerability Research](https://github.com/re-pronin/awesome-vulnerability-research) | List of resources about Vulnerability Research\n[Web Hacking](https://github.com/infoslack/awesome-web-hacking) \t\t\t\t\t| List of web application security\n[Web3 Security](https://github.com/Anugrahsr/Awesome-web3-Security) | A curated list of web3 Security materials and resources For Pentesters and Bug Hunters.\n[Windows Exploitation - Advanced](https://github.com/yeyintminthuhtut/Awesome-Advanced-Windows-Exploitation-References) | List of Awesome Advanced Windows Exploitation References\n[WiFi Arsenal](https://github.com/0x90/wifi-arsenal) \t\t\t\t\t\t\t\t| Pack of various useful/useless tools for 802.11 hacking\n[YARA](https://github.com/InQuest/awesome-yara)                                     | List of awesome YARA rules, tools, and people\n[Hacker Roadmap](https://github.com/sundowndev/hacker-roadmap)                                     | A guide for amateur pen testers and a collection of hacking tools, resources and references to practice ethical hacking.\n[Cybersources](https://github.com/brunoooost/cybersources) | A collection of all types of tools and resources for cybersecurity.\n\n## Other Useful Repositories\n\nRepository | Description\n---- | ----\n[Adversarial Machine Learning](https://github.com/yenchenlin/awesome-adversarial-machine-learning) | Curated list of awesome adversarial machine learning resources\n[AI Security](https://github.com/RandomAdversary/Awesome-AI-Security) | Curated list of AI security resources\n[API Security Checklist](https://github.com/shieldfy/API-Security-Checklist) | Checklist of the most important security countermeasures when designing, testing, and releasing your API\n[APT Notes](https://github.com/kbandla/APTnotes) \t\t\t\t\t\t\t\t\t| Various public documents, whitepapers and articles about APT campaigns\n[Bug Bounty Reference](https://github.com/ngalongc/bug-bounty-reference) \t\t\t| List of bug bounty write-up that is categorized by the bug nature\n[Cryptography](https://github.com/sobolevn/awesome-cryptography) | Cryptography resources and tools\n[CTF Tool](https://github.com/SandySekharan/CTF-tool) \t\t\t\t\t\t\t\t| List of Capture The Flag (CTF) frameworks, libraries, resources and softwares\n[CVE PoC](https://github.com/qazbnm456/awesome-cve-poc) | List of CVE Proof of Concepts (PoCs)\n[CVE PoC updated daily](https://github.com/trickest/cve) | List of CVE Proof of Concepts (PoCs) updated daily by Trickest\n[CyberChef](https://gchq.github.io/CyberChef/) | A simple, intuitive web app for analysing and decoding data without having to deal with complex tools or programming languages.\n[Detection Lab](https://github.com/clong/DetectionLab)                              |  Vagrant & Packer scripts to build a lab environment complete with security tooling and logging best practices\n[Forensics](https://github.com/Cugu/awesome-forensics) \t\t\t\t\t\t\t\t| List of awesome forensic analysis tools and resources\n[Free Programming Books](https://github.com/EbookFoundation/free-programming-books) \t\t\t| Free programming books for developers\n[Gray Hacker Resources](https://github.com/bt3gl/Gray-Hacker-Resources) \t\t\t| Useful for CTFs, wargames, pentesting\n[GTFOBins](https://gtfobins.github.io)\t| A curated list of Unix binaries that can be exploited by an attacker to bypass local security restrictions\n[Hacker101](https://github.com/Hacker0x01/hacker101) | A free class for web security by HackerOne\n[Infosec Getting Started](https://github.com/gradiuscypher/infosec_getting_started)\t\t\t\t\t| A collection of resources, documentation, links, etc to help people learn about Infosec\n[Infosec Reference](https://github.com/rmusser01/Infosec_Reference) \t\t\t\t| Information Security Reference That Doesn't Suck\n[IOC](https://github.com/sroberts/awesome-iocs) \t\t\t\t\t\t\t\t\t| Collection of sources of indicators of compromise\n[Linux Kernel Exploitation](https://github.com/xairy/linux-kernel-exploitation) | A bunch of links related to Linux kernel fuzzing and exploitation\n[Lockpicking](https://github.com/meitar/awesome-lockpicking) | Resources relating to the security and compromise of locks, safes, and keys.\n[Machine Learning for Cyber Security](https://github.com/jivoi/awesome-ml-for-cybersecurity)   | Curated list of tools and resources related to the use of machine learning for cyber security\n[Payloads](https://github.com/foospidy/payloads)  | Collection of web attack payloads\n[PayloadsAllTheThings](https://github.com/swisskyrepo/PayloadsAllTheThings)   | List of useful payloads and bypass for Web Application Security and Pentest/CTF\n[Pentest Cheatsheets](https://github.com/coreb1t/awesome-pentest-cheat-sheets)\t\t| Collection of the cheat sheets useful for pentesting\n[Pentest Wiki](https://github.com/nixawk/pentest-wiki) \t\t\t\t\t\t\t\t| A free online security knowledge library for pentesters / researchers\n[Probable Wordlists](https://github.com/berzerk0/Probable-Wordlists)  | Wordlists sorted by probability originally created for password generation and testing\n[Resource List](https://github.com/FuzzySecurity/Resource-List) \t\t\t\t\t| Collection of useful GitHub projects loosely categorised\n[Reverse Engineering](https://github.com/onethawt/reverseengineering-reading-list)   | List of Reverse Engineering articles, books, and papers\n[RFSec-ToolKit](https://github.com/cn0xroot/RFSec-ToolKit)  | Collection of Radio Frequency Communication Protocol Hacktools\n[Security Cheatsheets](https://github.com/andrewjkerr/security-cheatsheets) \t\t| Collection of cheatsheets for various infosec tools and topics\n[Security List](https://github.com/zbetcheckin/Security_list)\t\t\t\t\t\t | Great security list for fun and profit\n[Shell](https://github.com/alebcay/awesome-shell) \t\t\t\t\t\t\t\t\t| List of awesome command-line frameworks, toolkits, guides and gizmos to make complete use of shell\n[ThreatHunter-Playbook](https://github.com/Cyb3rWard0g/ThreatHunter-Playbook) | A Threat hunter's playbook to aid the development of techniques and hypothesis for hunting campaigns\n[Web Security](https://github.com/qazbnm456/awesome-web-security) | Curated list of Web Security materials and resources\n[Vulhub](https://github.com/vulhub/vulhub) | Pre-Built Vulnerable Environments Based on Docker-Compose\n\n## Need More ?\n\nFollow **Hack with GitHub** on your favorite social media to get daily updates on interesting GitHub repositories related to Security.\n - Twitter : [@HackwithGithub](https://twitter.com/HackwithGithub)\n - Facebook : [HackwithGithub](https://www.facebook.com/HackwithGithub)\n\n## Contributions\n\nPlease have a look at [contributing.md](contributing.md)\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/Hack-with-Github/Awesome-Hacking",
        "repo_name": "Awesome-Hacking",
        "owner_name": "Hack-with-Github",
        "theme_id": "9916b0db15b45b449fb92eac2a25855f",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.451535",
        "keywords": [
          "collection",
          "various",
          "awesome",
          "lists",
          "hackers",
          "pentesters",
          "security",
          "researchers"
        ]
      },
      {
        "full_name": "shadcn-ui/ui",
        "description": "A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.",
        "stars": 96240,
        "files": [],
        "readme": "# shadcn/ui\n\nAccessible and customizable components that you can copy and paste into your apps. Free. Open Source. **Use this to build your own component library**.\n\n![hero](apps/www/public/og.jpg)\n\n## Documentation\n\nVisit http://ui.shadcn.com/docs to view the documentation.\n\n## Contributing\n\nPlease read the [contributing guide](/CONTRIBUTING.md).\n\n## License\n\nLicensed under the [MIT license](https://github.com/shadcn/ui/blob/main/LICENSE.md).\n",
        "images": [],
        "category": "other",
        "ai_description": "",
        "ui_mods_score": 0.0,
        "stencil_patterns": [],
        "tweaked_variants": [],
        "processing_status": "processed",
        "github_url": "https://github.com/shadcn-ui/ui",
        "repo_name": "ui",
        "owner_name": "shadcn-ui",
        "theme_id": "3afd6877c0674f64b574042cc4b8b1ae",
        "has_images": false,
        "file_count": 0,
        "has_readme": true,
        "is_popular": true,
        "is_featured": false,
        "exported_at": "2025-10-07T22:36:53.450939",
        "keywords": [
          "beautifully",
          "designed",
          "accessible",
          "components",
          "distribution",
          "platform",
          "works",
          "with",
          "your",
          "favorite"
        ]
      }
    ]
  },
  "database_stats": {
    "total_rows": 142,
    "processed_rows": 142,
    "skipped_rows": 0,
    "error_rows": 0,
    "json_errors": 0,
    "start_time": 1759847813.4140959,
    "end_time": 1759847813.48115,
    "categories": {
      "other": 142
    },
    "stars_distribution": {
      "0": 0,
      "1-10": 0,
      "11-100": 7,
      "101-1000": 13,
      "1000+": 122
    }
  }
}